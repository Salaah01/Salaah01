!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=18)}([function(e,t,n){"use strict";e.exports=n(9)},function(e,t,n){e.exports=n(13)()},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,l,a){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,l,a],s=0;(u=new Error(t.replace(/%s/g,(function(){return c[s++]})))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";e.exports=n(15)},function(e,t,n){"use strict";var r=n(3),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},a={};function u(e){return r.isMemo(e)?l:a[e.$$typeof]||o}a[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0};var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var o=p(n);o&&o!==m&&e(t,o,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var a=u(t),h=u(n),y=0;y<l.length;++y){var v=l[y];if(!(i[v]||r&&r[v]||h&&h[v]||a&&a[v])){var g=d(n,v);try{c(t,v,g)}catch(e){}}}return t}return t}},function(e,t,n){"use strict";(function(e,r){var o,i=n(8);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var l=Object(i.a)(o);t.a=l}).call(this,n(16),n(17)(e))},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function l(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=l(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){a=r(n);for(var f=0;f<a.length;f++)i.call(n,a[f])&&(u[a[f]]=n[a[f]])}}return u}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(10)},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(6),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=x.prototype=new k;E.constructor=x,r(E,w.prototype),E.isPureReactComponent=!0;var T={current:null},S=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)S.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:T.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,N=[];function R(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function z(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function M(e,t,n){return null==e?0:function e(t,n,r,o){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var u=!1;if(null===t)u=!0;else switch(a){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case l:u=!0}}if(u)return r(o,t,""===n?"."+I(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+I(a=t[c],c);u+=e(a,s,r,o)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(a=t.next()).done;)u+=e(a=a.value,s=n+I(a,c++),r,o);else if("object"===a)throw r=""+t,Error(v(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function D(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?j(e,r,n,(function(e){return e})):null!=e&&(_(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function j(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),M(e,F,t=R(t,i,r,o)),z(t)}var L={current:null};function A(){var e=L.current;if(null===e)throw Error(v(321));return e}var U={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:T,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return j(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;M(e,D,t=R(null,null,t,n)),z(t)},count:function(e){return M(e,(function(){return null}),null)},toArray:function(e){var t=[];return j(e,t,null,(function(e){return e})),t},only:function(e){if(!_(e))throw Error(v(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,n){if(null==e)throw Error(v(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=T.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)S.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return A().useCallback(e,t)},t.useContext=function(e,t){return A().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return A().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return A().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return A().useLayoutEffect(e,t)},t.useMemo=function(e,t){return A().useMemo(e,t)},t.useReducer=function(e,t,n){return A().useReducer(e,t,n)},t.useRef=function(e){return A().useRef(e)},t.useState=function(e){return A().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(6),i=n(11);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var m=null,h=null,y=null;function v(e,t,n){var r=e.type||"unknown-event";e.currentTarget=y(n),function(e,t,n,r,o,i,a,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var g=null,b={};function w(){if(g)for(var e in b){var t=b[e],n=g.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!x[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in x[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(E.hasOwnProperty(u))throw Error(l(99,u));E[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&k(c[o],a,u);o=!0}else i.registrationName?(k(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function k(e,t,n){if(T[e])throw Error(l(100,e));T[e]=t,S[e]=t.eventTypes[n].dependencies}var x=[],E={},T={},S={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(l(102,t));b[t]=r,n=!0}}n&&w()}var P=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),_=null,O=null,N=null;function R(e){if(e=h(e)){if("function"!=typeof _)throw Error(l(280));var t=e.stateNode;t&&(t=m(t),_(e.stateNode,e.type,t))}}function z(e){O?N?N.push(e):N=[e]:O=e}function M(){if(O){var e=O,t=N;if(N=O=null,R(e),t)for(e=0;e<t.length;e++)R(t[e])}}function I(e,t){return e(t)}function D(e,t,n,r,o){return e(t,n,r,o)}function F(){}var j=I,L=!1,A=!1;function U(){null===O&&null===N||(F(),M())}function $(e,t,n){if(A)return e(t,n);A=!0;try{return j(e,t,n)}finally{A=!1,U()}}var W=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,V=Object.prototype.hasOwnProperty,Q={},B={};function H(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){K[e]=new H(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];K[t]=new H(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){K[e]=new H(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){K[e]=new H(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){K[e]=new H(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){K[e]=new H(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){K[e]=new H(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){K[e]=new H(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){K[e]=new H(e,5,!1,e.toLowerCase(),null,!1)}));var q=/[\-:]([a-z])/g;function Y(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(q,Y);K[t]=new H(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(q,Y);K[t]=new H(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(q,Y);K[t]=new H(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){K[e]=new H(e,1,!1,e.toLowerCase(),null,!1)})),K.xlinkHref=new H("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){K[e]=new H(e,1,!1,e.toLowerCase(),null,!0)}));var X=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function G(e,t,n,r){var o=K.hasOwnProperty(t)?K[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!V.call(B,e)||!V.call(Q,e)&&(W.test(e)?B[e]=!0:(Q[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}X.hasOwnProperty("ReactCurrentDispatcher")||(X.ReactCurrentDispatcher={current:null}),X.hasOwnProperty("ReactCurrentBatchConfig")||(X.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,le=J?Symbol.for("react.context"):60110,ae=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ye(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ye(e.type);case pe:return ye(e.render);case de:if(e=1===e._status?e._result:null)return ye(e)}return null}function ve(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ye(e.type);n=null,r&&(n=ye(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ge(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ge(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Te(e,t){null!=(t=t.checked)&&G(e,"checked",t,!1)}function Se(e,t){Te(e,t);var n=ge(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Pe(e,t.type,n):t.hasOwnProperty("defaultValue")&&Pe(e,t.type,ge(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Pe(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function _e(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ge(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ge(n)}}function ze(e,t){var n=ge(t.value),r=ge(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Me(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ie="http://www.w3.org/1999/xhtml",De="http://www.w3.org/2000/svg";function Fe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function je(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Fe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Le,Ae=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==De||"innerHTML"in e)e.innerHTML=t;else{for((Le=Le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function $e(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:$e("Animation","AnimationEnd"),animationiteration:$e("Animation","AnimationIteration"),animationstart:$e("Animation","AnimationStart"),transitionend:$e("Transition","TransitionEnd")},Ve={},Qe={};function Be(e){if(Ve[e])return Ve[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in Qe)return Ve[e]=n[t];return e}P&&(Qe=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var He=Be("animationend"),Ke=Be("animationiteration"),qe=Be("animationstart"),Ye=Be("transitionend"),Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ge=new("function"==typeof WeakMap?WeakMap:Map);function Ze(e){var t=Ge.get(e);return void 0===t&&(t=new Map,Ge.set(e,t)),t}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Je(e)!==e)throw Error(l(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return tt(o),e;if(i===r)return tt(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function lt(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)v(e,t[r],n[r]);else t&&v(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function at(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(ot(e,lt),it)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!P)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var st=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>st.length&&st.push(e)}function dt(e,t,n,r){if(st.length){var o=st.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Pn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=ut(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<x.length;u++){var c=x[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=rt(a,c))}at(a)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Xe.indexOf(e)&&Kt(e,t)}n.set(e,null)}}var ht,yt,vt,gt=!1,bt=[],wt=null,kt=null,xt=null,Et=new Map,Tt=new Map,St=[],Ct="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Pt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function _t(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Ot(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":kt=null;break;case"mouseover":case"mouseout":xt=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Nt(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=_t(t,n,r,o,i),null!==t&&(null!==(t=_n(t))&&yt(t)),e):(e.eventSystemFlags|=r,e)}function Rt(e){var t=Pn(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){vt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function zt(e){if(null!==e.blockedOn)return!1;var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=_n(t);return null!==n&&yt(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){zt(e)&&n.delete(t)}function It(){for(gt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=_n(e.blockedOn))&&ht(e);break}var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&zt(wt)&&(wt=null),null!==kt&&zt(kt)&&(kt=null),null!==xt&&zt(xt)&&(xt=null),Et.forEach(Mt),Tt.forEach(Mt)}function Dt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,It)))}function Ft(e){function t(t){return Dt(t,e)}if(0<bt.length){Dt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&Dt(wt,e),null!==kt&&Dt(kt,e),null!==xt&&Dt(xt,e),Et.forEach(t),Tt.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Rt(n),null===n.blockedOn&&St.shift()}var jt={},Lt=new Map,At=new Map,Ut=["abort","abort",He,"animationEnd",Ke,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ye,"transitionEnd","waiting","waiting"];function $t(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},At.set(r,t),Lt.set(r,i),jt[o]=i}}$t("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),$t("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),$t(Ut,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Vt=0;Vt<Wt.length;Vt++)At.set(Wt[Vt],0);var Qt=i.unstable_UserBlockingPriority,Bt=i.unstable_runWithPriority,Ht=!0;function Kt(e,t){qt(t,e,!1)}function qt(e,t,n){var r=At.get(t);switch(void 0===r?2:r){case 0:r=Yt.bind(null,t,1,e);break;case 1:r=Xt.bind(null,t,1,e);break;default:r=Gt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Yt(e,t,n,r){L||F();var o=Gt,i=L;L=!0;try{D(o,e,t,n,r)}finally{(L=i)||U()}}function Xt(e,t,n,r){Bt(Qt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){if(Ht)if(0<bt.length&&-1<Ct.indexOf(e))e=_t(null,e,t,n,r),bt.push(e);else{var o=Zt(e,t,n,r);if(null===o)Ot(e,r);else if(-1<Ct.indexOf(e))e=_t(o,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return wt=Nt(wt,e,t,n,r,o),!0;case"dragenter":return kt=Nt(kt,e,t,n,r,o),!0;case"mouseover":return xt=Nt(xt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return Et.set(i,Nt(Et.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Tt.set(i,Nt(Tt.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Ot(e,r),e=dt(e,r,null,t);try{$(pt,e)}finally{ft(e)}}}}function Zt(e,t,n,r){if(null!==(n=Pn(n=ut(r)))){var o=Je(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=et(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=dt(e,r,n,t);try{$(pt,e)}finally{ft(e)}return null}var Jt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Jt.hasOwnProperty(e)&&Jt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Jt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jt[t]=Jt[e]}))}));var rn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function ln(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var an=Ie;function un(e,t){var n=Ze(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function cn(){}function sn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=sn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=sn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn=null,yn=null;function vn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function kn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function xn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var En=Math.random().toString(36).slice(2),Tn="__reactInternalInstance$"+En,Sn="__reactEventHandlers$"+En,Cn="__reactContainere$"+En;function Pn(e){var t=e[Tn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Cn]||n[Tn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=xn(e);null!==e;){if(n=e[Tn])return n;e=xn(e)}return t}n=(e=n).parentNode}return null}function _n(e){return!(e=e[Tn]||e[Cn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function On(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function Nn(e){return e[Sn]||null}function Rn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function zn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function Mn(e,t,n){(t=zn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function In(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Rn(t);for(t=n.length;0<t--;)Mn(n[t],"captured",e);for(t=0;t<n.length;t++)Mn(n[t],"bubbled",e)}}function Dn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=zn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Fn(e){e&&e.dispatchConfig.registrationName&&Dn(e._targetInst,null,e)}function jn(e){ot(e,In)}var Ln=null,An=null,Un=null;function $n(){if(Un)return Un;var e,t,n=An,r=n.length,o="value"in Ln?Ln.value:Ln.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return Un=o.slice(e,1<t?1-t:void 0)}function Wn(){return!0}function Vn(){return!1}function Qn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Wn:Vn,this.isPropagationStopped=Vn,this}function Bn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function Hn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Kn(e){e.eventPool=[],e.getPooled=Bn,e.release=Hn}o(Qn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Wn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Wn)},persist:function(){this.isPersistent=Wn},isPersistent:Vn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Vn,this._dispatchInstances=this._dispatchListeners=null}}),Qn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Qn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Kn(n),n},Kn(Qn);var qn=Qn.extend({data:null}),Yn=Qn.extend({data:null}),Xn=[9,13,27,32],Gn=P&&"CompositionEvent"in window,Zn=null;P&&"documentMode"in document&&(Zn=document.documentMode);var Jn=P&&"TextEvent"in window&&!Zn,er=P&&(!Gn||Zn&&8<Zn&&11>=Zn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,t){switch(e){case"keyup":return-1!==Xn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var lr=!1;var ar={eventTypes:nr,extractEvents:function(e,t,n,r){var o;if(Gn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else lr?or(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(lr||i!==nr.compositionStart?i===nr.compositionEnd&&lr&&(o=$n()):(An="value"in(Ln=r)?Ln.value:Ln.textContent,lr=!0)),i=qn.getPooled(i,t,n,r),o?i.data=o:null!==(o=ir(n))&&(i.data=o),jn(i),o=i):o=null,(e=Jn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(lr)return"compositionend"===e||!Gn&&or(e,t)?(e=$n(),Un=An=Ln=null,lr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Yn.getPooled(nr.beforeInput,t,n,r)).data=e,jn(t)):t=null,null===o?t:null===t?o:[o,t]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ur[e.type]:"textarea"===t}var sr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Qn.getPooled(sr.change,e,t,n)).type="change",z(n),jn(e),e}var dr=null,pr=null;function mr(e){at(e)}function hr(e){if(ke(On(e)))return e}function yr(e,t){if("change"===e)return t}var vr=!1;function gr(){dr&&(dr.detachEvent("onpropertychange",br),pr=dr=null)}function br(e){if("value"===e.propertyName&&hr(pr))if(e=fr(pr,e,ut(e)),L)at(e);else{L=!0;try{I(mr,e)}finally{L=!1,U()}}}function wr(e,t,n){"focus"===e?(gr(),pr=n,(dr=t).attachEvent("onpropertychange",br)):"blur"===e&&gr()}function kr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return hr(pr)}function xr(e,t){if("click"===e)return hr(t)}function Er(e,t){if("input"===e||"change"===e)return hr(t)}P&&(vr=ct("input")&&(!document.documentMode||9<document.documentMode));var Tr={eventTypes:sr,_isInputEventSupported:vr,extractEvents:function(e,t,n,r){var o=t?On(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=yr;else if(cr(o))if(vr)l=Er;else{l=kr;var a=wr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=xr);if(l&&(l=l(e,t)))return fr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Pe(o,"number",o.value)}},Sr=Qn.extend({view:null,detail:null}),Cr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cr[e])&&!!t[e]}function _r(){return Pr}var Or=0,Nr=0,Rr=!1,zr=!1,Mr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:_r,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Or;return Or=e.screenX,Rr?"mousemove"===e.type?e.screenX-t:0:(Rr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Nr;return Nr=e.screenY,zr?"mousemove"===e.type?e.screenY-t:0:(zr=!0,0)}}),Ir=Mr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Dr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Fr={eventTypes:Dr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l)?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?Pn(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null;if(l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Mr,u=Dr.mouseLeave,c=Dr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Ir,u=Dr.pointerLeave,c=Dr.pointerEnter,s="pointer");if(e=null==l?i:On(l),i=null==t?i:On(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=Rn(e))l++;for(e=0,t=c;t;t=Rn(t))e++;for(;0<l-e;)a=Rn(a),l--;for(;0<e-l;)c=Rn(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=Rn(a),c=Rn(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=Rn(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=Rn(s);for(s=0;s<a.length;s++)Dn(a[s],"bubbled",u);for(s=r.length;0<s--;)Dn(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}};var jr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Lr=Object.prototype.hasOwnProperty;function Ar(e,t){if(jr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Lr.call(t,n[r])||!jr(e[n[r]],t[n[r]]))return!1;return!0}var Ur=P&&"documentMode"in document&&11>=document.documentMode,$r={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wr=null,Vr=null,Qr=null,Br=!1;function Hr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Br||null==Wr||Wr!==sn(n)?null:("selectionStart"in(n=Wr)&&mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Qr&&Ar(Qr,n)?null:(Qr=n,(e=Qn.getPooled($r.select,Vr,e,t)).type="select",e.target=Wr,jn(e),e))}var Kr={eventTypes:$r,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Ze(o),i=S.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?On(t):window,e){case"focus":(cr(o)||"true"===o.contentEditable)&&(Wr=o,Vr=t,Qr=null);break;case"blur":Qr=Vr=Wr=null;break;case"mousedown":Br=!0;break;case"contextmenu":case"mouseup":case"dragend":return Br=!1,Hr(n,r);case"selectionchange":if(Ur)break;case"keydown":case"keyup":return Hr(n,r)}return null}},qr=Qn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Qn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Xr=Sr.extend({relatedTarget:null});function Gr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Zr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Jr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=Sr.extend({key:function(e){if(e.key){var t=Zr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Gr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Jr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:_r,charCode:function(e){return"keypress"===e.type?Gr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Gr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=Mr.extend({dataTransfer:null}),no=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:_r}),ro=Qn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=Mr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:jt,extractEvents:function(e,t,n,r){var o=Lt.get(e);if(!o)return null;switch(e){case"keypress":if(0===Gr(n))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Xr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Mr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=no;break;case He:case Ke:case qe:e=qr;break;case Ye:e=ro;break;case"scroll":e=Sr;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ir;break;default:e=Qn}return jn(t=e.getPooled(o,t,n,r)),t}};if(g)throw Error(l(101));g=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=Nn,h=_n,y=On,C({SimpleEventPlugin:io,EnterLeaveEventPlugin:Fr,ChangeEventPlugin:Tr,SelectEventPlugin:Kr,BeforeInputEventPlugin:ar});var lo=[],ao=-1;function uo(e){0>ao||(e.current=lo[ao],lo[ao]=null,ao--)}function co(e,t){ao++,lo[ao]=e.current,e.current=t}var so={},fo={current:so},po={current:!1},mo=so;function ho(e,t){var n=e.type.contextTypes;if(!n)return so;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function yo(e){return null!=(e=e.childContextTypes)}function vo(){uo(po),uo(fo)}function go(e,t,n){if(fo.current!==so)throw Error(l(168));co(fo,t),co(po,n)}function bo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,ye(t)||"Unknown",i));return o({},n,{},r)}function wo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||so,mo=fo.current,co(fo,e),co(po,po.current),!0}function ko(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=bo(e,t,mo),r.__reactInternalMemoizedMergedChildContext=e,uo(po),uo(fo),co(fo,e)):uo(po),co(po,n)}var xo=i.unstable_runWithPriority,Eo=i.unstable_scheduleCallback,To=i.unstable_cancelCallback,So=i.unstable_requestPaint,Co=i.unstable_now,Po=i.unstable_getCurrentPriorityLevel,_o=i.unstable_ImmediatePriority,Oo=i.unstable_UserBlockingPriority,No=i.unstable_NormalPriority,Ro=i.unstable_LowPriority,zo=i.unstable_IdlePriority,Mo={},Io=i.unstable_shouldYield,Do=void 0!==So?So:function(){},Fo=null,jo=null,Lo=!1,Ao=Co(),Uo=1e4>Ao?Co:function(){return Co()-Ao};function $o(){switch(Po()){case _o:return 99;case Oo:return 98;case No:return 97;case Ro:return 96;case zo:return 95;default:throw Error(l(332))}}function Wo(e){switch(e){case 99:return _o;case 98:return Oo;case 97:return No;case 96:return Ro;case 95:return zo;default:throw Error(l(332))}}function Vo(e,t){return e=Wo(e),xo(e,t)}function Qo(e,t,n){return e=Wo(e),Eo(e,t,n)}function Bo(e){return null===Fo?(Fo=[e],jo=Eo(_o,Ko)):Fo.push(e),Mo}function Ho(){if(null!==jo){var e=jo;jo=null,To(e)}Ko()}function Ko(){if(!Lo&&null!==Fo){Lo=!0;var e=0;try{var t=Fo;Vo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fo=null}catch(t){throw null!==Fo&&(Fo=Fo.slice(e+1)),Eo(_o,Ho),t}finally{Lo=!1}}}function qo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Yo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Xo={current:null},Go=null,Zo=null,Jo=null;function ei(){Jo=Zo=Go=null}function ti(e){var t=Xo.current;uo(Xo),e.type._context._currentValue=t}function ni(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ri(e,t){Go=e,Jo=Zo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Nl=!0),e.firstContext=null)}function oi(e,t){if(Jo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Jo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Zo){if(null===Go)throw Error(l(308));Zo=t,Go.dependencies={expirationTime:0,firstContext:t,responders:null}}else Zo=Zo.next=t;return e._currentValue}var ii=!1;function li(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function ai(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ui(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ci(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function si(e,t){var n=e.alternate;null!==n&&ai(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function fi(e,t,n,r){var i=e.updateQueue;ii=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=a))}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((a=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),iu(a,m.suspenseConfig);e:{var y=e,v=m;switch(a=t,h=n,v.tag){case 1:if("function"==typeof(y=v.payload)){c=y.call(h,c,a);break e}c=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null==(a="function"==typeof(y=v.payload)?y.call(h,c,a):y))break e;c=o({},c,a);break e;case 2:ii=!0}}null!==m.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[m]:a.push(m))}if(null===(m=m.next)||m===u){if(null===(a=i.shared.pending))break;m=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,lu(s),e.expirationTime=s,e.memoizedState=c}}function di(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var pi=X.ReactCurrentBatchConfig,mi=(new r.Component).refs;function hi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var yi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ha(),o=pi.suspense;(o=ui(r=Ka(r,e,o),o)).payload=t,null!=n&&(o.callback=n),ci(e,o),qa(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ha(),o=pi.suspense;(o=ui(r=Ka(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),ci(e,o),qa(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ha(),r=pi.suspense;(r=ui(n=Ka(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ci(e,r),qa(e,n)}};function vi(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!t.prototype||!t.prototype.isPureReactComponent||(!Ar(n,r)||!Ar(o,i))}function gi(e,t,n){var r=!1,o=so,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=yo(t)?mo:fo.current,i=(r=null!=(r=t.contextTypes))?ho(e,o):so),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=yi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function bi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&yi.enqueueReplaceState(t,t.state,null)}function wi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=mi,li(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=yo(t)?mo:fo.current,o.context=ho(e,i)),fi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(hi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&yi.enqueueReplaceState(o,o.state,null),fi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var ki=Array.isArray;function xi(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===mi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Ei(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ti(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Cu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Ou(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=xi(e,t,n),r.return=e,r):((r=Pu(n.type,n.key,n.props,null,e.mode,r)).ref=xi(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Nu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=_u(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ou(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Pu(t.type,t.key,t.props,null,e.mode,n)).ref=xi(e,null,t),n.return=e,n;case te:return(t=Nu(t,e.mode,n)).return=e,t}if(ki(t)||he(t))return(t=_u(t,e.mode,n,null)).return=e,t;Ei(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(ki(n)||he(n))return null!==o?null:f(e,t,n,r,null);Ei(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ki(r)||he(r))return f(t,e=e.get(n)||null,r,o,null);Ei(t,r)}return null}function h(o,l,a,u){for(var c=null,s=null,f=l,h=l=0,y=null;null!==f&&h<a.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var v=p(o,f,a[h],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),l=i(v,l,h),null===s?c=v:s.sibling=v,s=v,f=y}if(h===a.length)return n(o,f),c;if(null===f){for(;h<a.length;h++)null!==(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<a.length;h++)null!==(y=m(f,o,h,a[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=i(y,l,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,a,u,c){var s=he(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,h=a,y=a=0,v=null,g=u.next();null!==h&&!g.done;y++,g=u.next()){h.index>y?(v=h,h=null):v=h.sibling;var b=p(o,h,g.value,c);if(null===b){null===h&&(h=v);break}e&&h&&null===b.alternate&&t(o,h),a=i(b,a,y),null===f?s=b:f.sibling=b,f=b,h=v}if(g.done)return n(o,h),s;if(null===h){for(;!g.done;y++,g=u.next())null!==(g=d(o,g.value,c))&&(a=i(g,a,y),null===f?s=g:f.sibling=g,f=g);return s}for(h=r(o,h);!g.done;y++,g=u.next())null!==(g=m(h,o,y,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?y:g.key),a=i(g,a,y),null===f?s=g:f.sibling=g,f=g);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}break;default:if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=xi(e,c,i),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=_u(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Pu(i.type,i.key,i.props,null,e.mode,u)).ref=xi(e,r,i),u.return=e,e=u)}return a(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Nu(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Ou(i,e.mode,u)).return=e,e=r),a(e);if(ki(i))return h(e,r,i,u);if(he(i))return y(e,r,i,u);if(s&&Ei(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Si=Ti(!0),Ci=Ti(!1),Pi={},_i={current:Pi},Oi={current:Pi},Ni={current:Pi};function Ri(e){if(e===Pi)throw Error(l(174));return e}function zi(e,t){switch(co(Ni,t),co(Oi,e),co(_i,Pi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:je(null,"");break;default:t=je(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}uo(_i),co(_i,t)}function Mi(){uo(_i),uo(Oi),uo(Ni)}function Ii(e){Ri(Ni.current);var t=Ri(_i.current),n=je(t,e.type);t!==n&&(co(Oi,e),co(_i,n))}function Di(e){Oi.current===e&&(uo(_i),uo(Oi))}var Fi={current:0};function ji(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Li(e,t){return{responder:e,props:t}}var Ai=X.ReactCurrentDispatcher,Ui=X.ReactCurrentBatchConfig,$i=0,Wi=null,Vi=null,Qi=null,Bi=!1;function Hi(){throw Error(l(321))}function Ki(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!jr(e[n],t[n]))return!1;return!0}function qi(e,t,n,r,o,i){if($i=i,Wi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Ai.current=null===e||null===e.memoizedState?vl:gl,e=n(r,o),t.expirationTime===$i){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,Qi=Vi=null,t.updateQueue=null,Ai.current=bl,e=n(r,o)}while(t.expirationTime===$i)}if(Ai.current=yl,t=null!==Vi&&null!==Vi.next,$i=0,Qi=Vi=Wi=null,Bi=!1,t)throw Error(l(300));return e}function Yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Qi?Wi.memoizedState=Qi=e:Qi=Qi.next=e,Qi}function Xi(){if(null===Vi){var e=Wi.alternate;e=null!==e?e.memoizedState:null}else e=Vi.next;var t=null===Qi?Wi.memoizedState:Qi.next;if(null!==t)Qi=t,Vi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Vi=e).memoizedState,baseState:Vi.baseState,baseQueue:Vi.baseQueue,queue:Vi.queue,next:null},null===Qi?Wi.memoizedState=Qi=e:Qi=Qi.next=e}return Qi}function Gi(e,t){return"function"==typeof t?t(e):t}function Zi(e){var t=Xi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Vi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<$i){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>Wi.expirationTime&&(Wi.expirationTime=s,lu(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),iu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,jr(r,t.memoizedState)||(Nl=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Ji(e){var t=Xi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);jr(i,t.memoizedState)||(Nl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function el(e){var t=Yi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Gi,lastRenderedState:e}).dispatch=hl.bind(null,Wi,e),[t.memoizedState,e]}function tl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Wi.updateQueue)?(t={lastEffect:null},Wi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function nl(){return Xi().memoizedState}function rl(e,t,n,r){var o=Yi();Wi.effectTag|=e,o.memoizedState=tl(1|t,n,void 0,void 0===r?null:r)}function ol(e,t,n,r){var o=Xi();r=void 0===r?null:r;var i=void 0;if(null!==Vi){var l=Vi.memoizedState;if(i=l.destroy,null!==r&&Ki(r,l.deps))return void tl(t,n,i,r)}Wi.effectTag|=e,o.memoizedState=tl(1|t,n,i,r)}function il(e,t){return rl(516,4,e,t)}function ll(e,t){return ol(516,4,e,t)}function al(e,t){return ol(4,2,e,t)}function ul(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function cl(e,t,n){return n=null!=n?n.concat([e]):null,ol(4,2,ul.bind(null,t,e),n)}function sl(){}function fl(e,t){return Yi().memoizedState=[e,void 0===t?null:t],e}function dl(e,t){var n=Xi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pl(e,t){var n=Xi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ki(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ml(e,t,n){var r=$o();Vo(98>r?98:r,(function(){e(!0)})),Vo(97<r?97:r,(function(){var r=Ui.suspense;Ui.suspense=void 0===t?null:t;try{e(!1),n()}finally{Ui.suspense=r}}))}function hl(e,t,n){var r=Ha(),o=pi.suspense;o={expirationTime:r=Ka(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Wi||null!==i&&i===Wi)Bi=!0,o.expirationTime=$i,Wi.expirationTime=$i;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,jr(a,l))return}catch(e){}qa(e,r)}}var yl={readContext:oi,useCallback:Hi,useContext:Hi,useEffect:Hi,useImperativeHandle:Hi,useLayoutEffect:Hi,useMemo:Hi,useReducer:Hi,useRef:Hi,useState:Hi,useDebugValue:Hi,useResponder:Hi,useDeferredValue:Hi,useTransition:Hi},vl={readContext:oi,useCallback:fl,useContext:oi,useEffect:il,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,rl(4,2,ul.bind(null,t,e),n)},useLayoutEffect:function(e,t){return rl(4,2,e,t)},useMemo:function(e,t){var n=Yi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Yi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=hl.bind(null,Wi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Yi().memoizedState=e},useState:el,useDebugValue:sl,useResponder:Li,useDeferredValue:function(e,t){var n=el(e),r=n[0],o=n[1];return il((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=el(!1),n=t[0];return t=t[1],[fl(ml.bind(null,t,e),[t,e]),n]}},gl={readContext:oi,useCallback:dl,useContext:oi,useEffect:ll,useImperativeHandle:cl,useLayoutEffect:al,useMemo:pl,useReducer:Zi,useRef:nl,useState:function(){return Zi(Gi)},useDebugValue:sl,useResponder:Li,useDeferredValue:function(e,t){var n=Zi(Gi),r=n[0],o=n[1];return ll((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zi(Gi),n=t[0];return t=t[1],[dl(ml.bind(null,t,e),[t,e]),n]}},bl={readContext:oi,useCallback:dl,useContext:oi,useEffect:ll,useImperativeHandle:cl,useLayoutEffect:al,useMemo:pl,useReducer:Ji,useRef:nl,useState:function(){return Ji(Gi)},useDebugValue:sl,useResponder:Li,useDeferredValue:function(e,t){var n=Ji(Gi),r=n[0],o=n[1];return ll((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ji(Gi),n=t[0];return t=t[1],[dl(ml.bind(null,t,e),[t,e]),n]}},wl=null,kl=null,xl=!1;function El(e,t){var n=Tu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Tl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Sl(e){if(xl){var t=kl;if(t){var n=t;if(!Tl(e,t)){if(!(t=kn(n.nextSibling))||!Tl(e,t))return e.effectTag=-1025&e.effectTag|2,xl=!1,void(wl=e);El(wl,n)}wl=e,kl=kn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,xl=!1,wl=e}}function Cl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wl=e}function Pl(e){if(e!==wl)return!1;if(!xl)return Cl(e),xl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gn(t,e.memoizedProps))for(t=kl;t;)El(e,t),t=kn(t.nextSibling);if(Cl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){kl=kn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}kl=null}}else kl=wl?kn(e.stateNode.nextSibling):null;return!0}function _l(){kl=wl=null,xl=!1}var Ol=X.ReactCurrentOwner,Nl=!1;function Rl(e,t,n,r){t.child=null===e?Ci(t,null,n,r):Si(t,e.child,n,r)}function zl(e,t,n,r,o){n=n.render;var i=t.ref;return ri(t,o),r=qi(e,t,n,r,i,o),null===e||Nl?(t.effectTag|=1,Rl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ql(e,t,o))}function Ml(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Su(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Pu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Il(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:Ar)(o,r)&&e.ref===t.ref)?ql(e,t,i):(t.effectTag|=1,(e=Cu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Il(e,t,n,r,o,i){return null!==e&&Ar(e.memoizedProps,r)&&e.ref===t.ref&&(Nl=!1,o<i)?(t.expirationTime=e.expirationTime,ql(e,t,i)):Fl(e,t,n,r,i)}function Dl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Fl(e,t,n,r,o){var i=yo(n)?mo:fo.current;return i=ho(t,i),ri(t,o),n=qi(e,t,n,r,i,o),null===e||Nl?(t.effectTag|=1,Rl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),ql(e,t,o))}function jl(e,t,n,r,o){if(yo(n)){var i=!0;wo(t)}else i=!1;if(ri(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),gi(t,n,r),wi(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;"object"==typeof c&&null!==c?c=oi(c):c=ho(t,c=yo(n)?mo:fo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&bi(t,l,r,c),ii=!1;var d=t.memoizedState;l.state=d,fi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||po.current||ii?("function"==typeof s&&(hi(t,n,s,r),u=t.memoizedState),(a=ii||vi(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,ai(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Yo(t.type,a),u=l.context,"object"==typeof(c=n.contextType)&&null!==c?c=oi(c):c=ho(t,c=yo(n)?mo:fo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&bi(t,l,r,c),ii=!1,u=t.memoizedState,l.state=u,fi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||po.current||ii?("function"==typeof s&&(hi(t,n,s,r),d=t.memoizedState),(s=ii||vi(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ll(e,t,n,r,i,o)}function Ll(e,t,n,r,o,i){Dl(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&ko(t,n,!1),ql(e,t,i);r=t.stateNode,Ol.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=Si(t,e.child,null,i),t.child=Si(t,null,a,i)):Rl(e,t,a,i),t.memoizedState=r.state,o&&ko(t,n,!0),t.child}function Al(e){var t=e.stateNode;t.pendingContext?go(0,t.pendingContext,t.pendingContext!==t.context):t.context&&go(0,t.context,!1),zi(e,t.containerInfo)}var Ul,$l,Wl,Vl={dehydrated:null,retryTime:0};function Ql(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Fi.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),co(Fi,1&l),null===e){if(void 0!==i.fallback&&Sl(t),a){if(a=i.fallback,(i=_u(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_u(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=Vl,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Ci(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Cu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Cu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Vl,t.child=n,o}return n=Si(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=_u(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=_u(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Vl,t.child=i,n}return t.memoizedState=null,t.child=Si(t,e,i.children,n)}function Bl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ni(e.return,t)}function Hl(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function Kl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Rl(e,t,r.children,n),0!=(2&(r=Fi.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bl(e,n);else if(19===e.tag)Bl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(co(Fi,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===ji(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Hl(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===ji(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Hl(t,!0,n,null,i,t.lastEffect);break;case"together":Hl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function ql(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&lu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Cu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Cu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Yl(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Xl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return yo(t.type)&&vo(),null;case 3:return Mi(),uo(po),uo(fo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Pl(t)||(t.effectTag|=4),null;case 5:Di(t),n=Ri(Ni.current);var i=t.type;if(null!==e&&null!=t.stateNode)$l(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Ri(_i.current),Pl(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[Tn]=t,r[Sn]=a,i){case"iframe":case"object":case"embed":Kt("load",r);break;case"video":case"audio":for(e=0;e<Xe.length;e++)Kt(Xe[e],r);break;case"source":Kt("error",r);break;case"img":case"image":case"link":Kt("error",r),Kt("load",r);break;case"form":Kt("reset",r),Kt("submit",r);break;case"details":Kt("toggle",r);break;case"input":Ee(r,a),Kt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},Kt("invalid",r),un(n,"onChange");break;case"textarea":Re(r,a),Kt("invalid",r),un(n,"onChange")}for(var u in on(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):T.hasOwnProperty(u)&&null!=c&&un(n,u)}switch(i){case"input":we(r),Ce(r,a,!0);break;case"textarea":we(r),Me(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===an&&(e=Fe(i)),e===an?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[Tn]=t,e[Sn]=r,Ul(e,t),t.stateNode=e,u=ln(i,r),i){case"iframe":case"object":case"embed":Kt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Xe.length;c++)Kt(Xe[c],e);c=r;break;case"source":Kt("error",e),c=r;break;case"img":case"image":case"link":Kt("error",e),Kt("load",e),c=r;break;case"form":Kt("reset",e),Kt("submit",e),c=r;break;case"details":Kt("toggle",e),c=r;break;case"input":Ee(e,r),c=xe(e,r),Kt("invalid",e),un(n,"onChange");break;case"option":c=_e(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),Kt("invalid",e),un(n,"onChange");break;case"textarea":Re(e,r),c=Ne(e,r),Kt("invalid",e),un(n,"onChange");break;default:c=r}on(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?nn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&Ae(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&Ue(e,f):"number"==typeof f&&Ue(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(T.hasOwnProperty(a)?null!=f&&un(n,a):null!=f&&G(e,a,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),Me(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ge(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}vn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Wl(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Ri(Ni.current),Ri(_i.current),Pl(t)?(n=t.stateNode,r=t.memoizedProps,n[Tn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Tn]=t,t.stateNode=n)}return null;case 13:return uo(Fi),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Pl(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Fi.current)?Pa===wa&&(Pa=ka):(Pa!==wa&&Pa!==ka||(Pa=xa),0!==za&&null!==Ta&&(Mu(Ta,Ca),Iu(Ta,za)))),(n||r)&&(t.effectTag|=4),null);case 4:return Mi(),null;case 10:return ti(t),null;case 17:return yo(t.type)&&vo(),null;case 19:if(uo(Fi),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)Yl(r,!1);else if(Pa!==wa||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=ji(a))){for(t.effectTag|=64,Yl(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return co(Fi,1&Fi.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=ji(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Yl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Uo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Yl(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Uo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Uo(),n.sibling=null,t=Fi.current,co(Fi,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function Gl(e){switch(e.tag){case 1:yo(e.type)&&vo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Mi(),uo(po),uo(fo),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Di(e),null;case 13:return uo(Fi),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return uo(Fi),null;case 4:return Mi(),null;case 10:return ti(e),null;default:return null}}function Zl(e,t){return{value:e,source:t,stack:ve(t)}}Ul=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},$l=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(Ri(_i.current),e=null,n){case"input":l=xe(c,l),r=xe(c,r),e=[];break;case"option":l=_e(c,l),r=_e(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Ne(c,l),r=Ne(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(a in on(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(T.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(T.hasOwnProperty(a)?(null!=s&&un(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Wl=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Jl="function"==typeof WeakSet?WeakSet:Set;function ea(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ve(n)),null!==n&&ye(n.type),t=t.value,null!==e&&1===e.tag&&ye(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ta(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){gu(e,t)}else t.current=null}function na(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Yo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(l(163))}function ra(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function oa(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ia(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void oa(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Yo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&di(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}di(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&vn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Ft(n)))));case 19:case 17:case 20:case 21:return}throw Error(l(163))}function la(e,t,n){switch("function"==typeof xu&&xu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Vo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){gu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:ta(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){gu(e,t)}}(t,n);break;case 5:ta(t);break;case 4:sa(e,t,n)}}function aa(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&aa(t)}function ua(e){return 5===e.tag||3===e.tag||4===e.tag}function ca(e){e:{for(var t=e.return;null!==t;){if(ua(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Ue(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ua(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function sa(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(la(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(la(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function fa(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ra(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Te(n,r),ln(e,o),t=ln(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?nn(n,u):"dangerouslySetInnerHTML"===a?Ae(n,u):"children"===a?Ue(n,u):G(n,a,u,t)}switch(e){case"input":Se(n,r);break;case"textarea":ze(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Ft(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ia=Uo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void da(t);case 19:return void da(t);case 17:return}throw Error(l(163))}function da(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Jl),t.forEach((function(t){var r=wu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pa="function"==typeof WeakMap?WeakMap:Map;function ma(e,t,n){(n=ui(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Fa||(Fa=!0,ja=r),ea(e,t)},n}function ha(e,t,n){(n=ui(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return ea(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===La?La=new Set([this]):La.add(this),ea(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var ya,va=Math.ceil,ga=X.ReactCurrentDispatcher,ba=X.ReactCurrentOwner,wa=0,ka=3,xa=4,Ea=0,Ta=null,Sa=null,Ca=0,Pa=wa,_a=null,Oa=1073741823,Na=1073741823,Ra=null,za=0,Ma=!1,Ia=0,Da=null,Fa=!1,ja=null,La=null,Aa=!1,Ua=null,$a=90,Wa=null,Va=0,Qa=null,Ba=0;function Ha(){return 0!=(48&Ea)?1073741821-(Uo()/10|0):0!==Ba?Ba:Ba=1073741821-(Uo()/10|0)}function Ka(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=$o();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&Ea))return Ca;if(null!==n)e=qo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=qo(e,150,100);break;case 97:case 96:e=qo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Ta&&e===Ca&&--e,e}function qa(e,t){if(50<Va)throw Va=0,Qa=null,Error(l(185));if(null!==(e=Ya(e,t))){var n=$o();1073741823===t?0!=(8&Ea)&&0==(48&Ea)?Ja(e):(Ga(e),0===Ea&&Ho()):Ga(e),0==(4&Ea)||98!==n&&99!==n||(null===Wa?Wa=new Map([[e,t]]):(void 0===(n=Wa.get(e))||n>t)&&Wa.set(e,t))}}function Ya(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Ta===o&&(lu(t),Pa===xa&&Mu(o,Ca)),Iu(o,t)),o}function Xa(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!zu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Ga(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Bo(Ja.bind(null,e));else{var t=Xa(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Ha();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Mo&&To(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Bo(Ja.bind(null,e)):Qo(r,Za.bind(null,e),{timeout:10*(1073741821-t)-Uo()}),e.callbackNode=t}}}function Za(e,t){if(Ba=0,t)return Du(e,t=Ha()),Ga(e),null;var n=Xa(e);if(0!==n){if(t=e.callbackNode,0!=(48&Ea))throw Error(l(327));if(hu(),e===Ta&&n===Ca||nu(e,n),null!==Sa){var r=Ea;Ea|=16;for(var o=ou();;)try{uu();break}catch(t){ru(e,t)}if(ei(),Ea=r,ga.current=o,1===Pa)throw t=_a,nu(e,n),Mu(e,n),Ga(e),t;if(null===Sa)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Pa,Ta=null,r){case wa:case 1:throw Error(l(345));case 2:Du(e,2<n?2:n);break;case ka:if(Mu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),1073741823===Oa&&10<(o=Ia+500-Uo())){if(Ma){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,nu(e,n);break}}if(0!==(i=Xa(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(du.bind(null,e),o);break}du(e);break;case xa:if(Mu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fu(o)),Ma&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,nu(e,n);break}if(0!==(o=Xa(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Na?r=10*(1073741821-Na)-Uo():1073741823===Oa?r=0:(r=10*(1073741821-Oa)-5e3,0>(r=(o=Uo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*va(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(du.bind(null,e),r);break}du(e);break;case 5:if(1073741823!==Oa&&null!==Ra){i=Oa;var a=Ra;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Uo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Mu(e,n),e.timeoutHandle=bn(du.bind(null,e),r);break}}du(e);break;default:throw Error(l(329))}if(Ga(e),e.callbackNode===t)return Za.bind(null,e)}}return null}function Ja(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&Ea))throw Error(l(327));if(hu(),e===Ta&&t===Ca||nu(e,t),null!==Sa){var n=Ea;Ea|=16;for(var r=ou();;)try{au();break}catch(t){ru(e,t)}if(ei(),Ea=n,ga.current=r,1===Pa)throw n=_a,nu(e,t),Mu(e,t),Ga(e),n;if(null!==Sa)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Ta=null,du(e),Ga(e)}return null}function eu(e,t){var n=Ea;Ea|=1;try{return e(t)}finally{0===(Ea=n)&&Ho()}}function tu(e,t){var n=Ea;Ea&=-2,Ea|=8;try{return e(t)}finally{0===(Ea=n)&&Ho()}}function nu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Sa)for(n=Sa.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&vo();break;case 3:Mi(),uo(po),uo(fo);break;case 5:Di(r);break;case 4:Mi();break;case 13:case 19:uo(Fi);break;case 10:ti(r)}n=n.return}Ta=e,Sa=Cu(e.current,null),Ca=t,Pa=wa,_a=null,Na=Oa=1073741823,Ra=null,za=0,Ma=!1}function ru(e,t){for(;;){try{if(ei(),Ai.current=yl,Bi)for(var n=Wi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if($i=0,Qi=Vi=Wi=null,Bi=!1,null===Sa||null===Sa.return)return Pa=1,_a=t,Sa=null;e:{var o=e,i=Sa.return,l=Sa,a=t;if(t=Ca,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var s=0!=(1&Fi.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var y=new Set;y.add(u),f.updateQueue=y}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var v=ui(1073741823,null);v.tag=2,ci(l,v)}l.expirationTime=1073741823;break e}a=void 0,l=t;var g=o.pingCache;if(null===g?(g=o.pingCache=new pa,a=new Set,g.set(u,a)):void 0===(a=g.get(u))&&(a=new Set,g.set(u,a)),!a.has(l)){a.add(l);var b=bu.bind(null,o,u,l);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((ye(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ve(l))}5!==Pa&&(Pa=2),a=Zl(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,si(f,ma(f,u,t));break e;case 1:u=a;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===La||!La.has(k)))){f.effectTag|=4096,f.expirationTime=t,si(f,ha(f,u,t));break e}}f=f.return}while(null!==f)}Sa=su(Sa)}catch(e){t=e;continue}break}}function ou(){var e=ga.current;return ga.current=yl,null===e?yl:e}function iu(e,t){e<Oa&&2<e&&(Oa=e),null!==t&&e<Na&&2<e&&(Na=e,Ra=t)}function lu(e){e>za&&(za=e)}function au(){for(;null!==Sa;)Sa=cu(Sa)}function uu(){for(;null!==Sa&&!Io();)Sa=cu(Sa)}function cu(e){var t=ya(e.alternate,e,Ca);return e.memoizedProps=e.pendingProps,null===t&&(t=su(e)),ba.current=null,t}function su(e){Sa=e;do{var t=Sa.alternate;if(e=Sa.return,0==(2048&Sa.effectTag)){if(t=Xl(t,Sa,Ca),1===Ca||1!==Sa.childExpirationTime){for(var n=0,r=Sa.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Sa.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sa.firstEffect),null!==Sa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sa.firstEffect),e.lastEffect=Sa.lastEffect),1<Sa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sa:e.firstEffect=Sa,e.lastEffect=Sa))}else{if(null!==(t=Gl(Sa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sa.sibling))return t;Sa=e}while(null!==Sa);return Pa===wa&&(Pa=5),null}function fu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function du(e){var t=$o();return Vo(99,pu.bind(null,e,t)),null}function pu(e,t){do{hu()}while(null!==Ua);if(0!=(48&Ea))throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=fu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Ta&&(Sa=Ta=null,Ca=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=Ea;Ea|=32,ba.current=null,hn=Ht;var a=pn();if(mn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,y=0,v=a,g=null;t:for(;;){for(var b;v!==u||0!==s&&3!==v.nodeType||(p=d+s),v!==f||0!==c&&3!==v.nodeType||(m=d+c),3===v.nodeType&&(d+=v.nodeValue.length),null!==(b=v.firstChild);)g=v,v=b;for(;;){if(v===a)break t;if(g===u&&++h===s&&(p=d),g===f&&++y===c&&(m=d),null!==(b=v.nextSibling))break;g=(v=g).parentNode}v=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;yn={activeElementDetached:null,focusedElem:a,selectionRange:u},Ht=!1,Da=o;do{try{mu()}catch(e){if(null===Da)throw Error(l(330));gu(Da,e),Da=Da.nextEffect}}while(null!==Da);Da=o;do{try{for(a=e,u=t;null!==Da;){var w=Da.effectTag;if(16&w&&Ue(Da.stateNode,""),128&w){var k=Da.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:ca(Da),Da.effectTag&=-3;break;case 6:ca(Da),Da.effectTag&=-3,fa(Da.alternate,Da);break;case 1024:Da.effectTag&=-1025;break;case 1028:Da.effectTag&=-1025,fa(Da.alternate,Da);break;case 4:fa(Da.alternate,Da);break;case 8:sa(a,s=Da,u),aa(s)}Da=Da.nextEffect}}catch(e){if(null===Da)throw Error(l(330));gu(Da,e),Da=Da.nextEffect}}while(null!==Da);if(x=yn,k=pn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!x.extend&&a>u&&(s=u,u=a,a=s),s=dn(w,a),f=dn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),a>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Ht=!!hn,yn=hn=null,e.current=n,Da=o;do{try{for(w=e;null!==Da;){var E=Da.effectTag;if(36&E&&ia(w,Da.alternate,Da),128&E){k=void 0;var T=Da.ref;if(null!==T){var S=Da.stateNode;switch(Da.tag){case 5:k=S;break;default:k=S}"function"==typeof T?T(k):T.current=k}}Da=Da.nextEffect}}catch(e){if(null===Da)throw Error(l(330));gu(Da,e),Da=Da.nextEffect}}while(null!==Da);Da=null,Do(),Ea=i}else e.current=n;if(Aa)Aa=!1,Ua=e,$a=t;else for(Da=o;null!==Da;)t=Da.nextEffect,Da.nextEffect=null,Da=t;if(0===(t=e.firstPendingTime)&&(La=null),1073741823===t?e===Qa?Va++:(Va=0,Qa=e):Va=0,"function"==typeof ku&&ku(n.stateNode,r),Ga(e),Fa)throw Fa=!1,e=ja,ja=null,e;return 0!=(8&Ea)||Ho(),null}function mu(){for(;null!==Da;){var e=Da.effectTag;0!=(256&e)&&na(Da.alternate,Da),0==(512&e)||Aa||(Aa=!0,Qo(97,(function(){return hu(),null}))),Da=Da.nextEffect}}function hu(){if(90!==$a){var e=97<$a?97:$a;return $a=90,Vo(e,yu)}}function yu(){if(null===Ua)return!1;var e=Ua;if(Ua=null,0!=(48&Ea))throw Error(l(331));var t=Ea;for(Ea|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ra(5,n),oa(5,n)}}catch(t){if(null===e)throw Error(l(330));gu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Ea=t,Ho(),!0}function vu(e,t,n){ci(e,t=ma(e,t=Zl(n,t),1073741823)),null!==(e=Ya(e,1073741823))&&Ga(e)}function gu(e,t){if(3===e.tag)vu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){vu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===La||!La.has(r))){ci(n,e=ha(n,e=Zl(t,e),1073741823)),null!==(n=Ya(n,1073741823))&&Ga(n);break}}n=n.return}}function bu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Ta===e&&Ca===n?Pa===xa||Pa===ka&&1073741823===Oa&&Uo()-Ia<500?nu(e,Ca):Ma=!0:zu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Ga(e)))}function wu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Ka(t=Ha(),e,null)),null!==(e=Ya(e,t))&&Ga(e)}ya=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)Nl=!0;else{if(r<n){switch(Nl=!1,t.tag){case 3:Al(t),_l();break;case 5:if(Ii(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:yo(t.type)&&wo(t);break;case 4:zi(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,co(Xo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Ql(e,t,n):(co(Fi,1&Fi.current),null!==(t=ql(e,t,n))?t.sibling:null);co(Fi,1&Fi.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Kl(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),co(Fi,Fi.current),!r)return null}return ql(e,t,n)}Nl=!1}}else Nl=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=ho(t,fo.current),ri(t,n),o=qi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,yo(r)){var i=!0;wo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,li(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&hi(t,r,a,e),o.updater=yi,t.stateNode=o,o._reactInternalFiber=t,wi(t,r,e,n),t=Ll(null,t,r,!0,i,n)}else t.tag=0,Rl(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Su(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Yo(o,e),i){case 0:t=Fl(null,t,o,e,n);break e;case 1:t=jl(null,t,o,e,n);break e;case 11:t=zl(null,t,o,e,n);break e;case 14:t=Ml(null,t,o,Yo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Fl(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 1:return r=t.type,o=t.pendingProps,jl(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 3:if(Al(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ai(e,t),fi(t,r,null,n),(r=t.memoizedState.element)===o)_l(),t=ql(e,t,n);else{if((o=t.stateNode.hydrate)&&(kl=kn(t.stateNode.containerInfo.firstChild),wl=t,o=xl=!0),o)for(n=Ci(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Rl(e,t,r,n),_l();t=t.child}return t;case 5:return Ii(t),null===e&&Sl(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,gn(r,o)?a=null:null!==i&&gn(r,i)&&(t.effectTag|=16),Dl(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Rl(e,t,a,n),t=t.child),t;case 6:return null===e&&Sl(t),null;case 13:return Ql(e,t,n);case 4:return zi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Si(t,null,r,n):Rl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,zl(e,t,r,o=t.elementType===r?o:Yo(r,o),n);case 7:return Rl(e,t,t.pendingProps,n),t.child;case 8:case 12:return Rl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(co(Xo,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0===(i=jr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!po.current){t=ql(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=ui(n,null)).tag=2,ci(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),ni(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}Rl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ri(t,n),r=r(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,Rl(e,t,r,n),t.child;case 14:return i=Yo(o=t.type,t.pendingProps),Ml(e,t,o,i=Yo(o.type,i),r,n);case 15:return Il(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Yo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,yo(r)?(e=!0,wo(t)):e=!1,ri(t,n),gi(t,r,o),wi(t,r,o,n),Ll(null,t,r,!0,e,n);case 19:return Kl(e,t,n)}throw Error(l(156,t.tag))};var ku=null,xu=null;function Eu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Tu(e,t,n,r){return new Eu(e,t,n,r)}function Su(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Cu(e,t){var n=e.alternate;return null===n?((n=Tu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Pu(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Su(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return _u(n.children,o,i,t);case ae:a=8,o|=7;break;case re:a=8,o|=1;break;case oe:return(e=Tu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Tu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Tu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case le:a=9;break e;case ue:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Tu(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function _u(e,t,n,r){return(e=Tu(7,e,r,t)).expirationTime=n,e}function Ou(e,t,n){return(e=Tu(6,e,null,t)).expirationTime=n,e}function Nu(e,t,n){return(t=Tu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ru(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function zu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Mu(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Iu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Du(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Fu(e,t,n,r){var o=t.current,i=Ha(),a=pi.suspense;i=Ka(i,o,a);e:if(n){t:{if(Je(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(yo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(yo(c)){n=bo(n,c,u);break e}}n=u}else n=so;return null===t.context?t.context=n:t.pendingContext=n,(t=ui(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ci(o,t),qa(o,i),i}function ju(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Lu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Au(e,t){Lu(e,t),(e=e.alternate)&&Lu(e,t)}function Uu(e,t,n){var r=new Ru(e,t,n=null!=n&&!0===n.hydrate),o=Tu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,li(o),e[Cn]=r.current,n&&0!==t&&function(e,t){var n=Ze(t);Ct.forEach((function(e){mt(e,t,n)})),Pt.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function $u(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Wu(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=ju(l);a.call(e)}}Fu(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Uu(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=ju(l);u.call(e)}}tu((function(){Fu(t,l,e,o)}))}return ju(l)}function Vu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Qu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!$u(t))throw Error(l(200));return Vu(e,t,null,n)}Uu.prototype.render=function(e){Fu(e,this._internalRoot,null,null)},Uu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Fu(null,e,null,(function(){t[Cn]=null}))},ht=function(e){if(13===e.tag){var t=qo(Ha(),150,100);qa(e,t),Au(e,t)}},yt=function(e){13===e.tag&&(qa(e,3),Au(e,3))},vt=function(e){if(13===e.tag){var t=Ha();qa(e,t=Ka(t,e,null)),Au(e,t)}},_=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=Nn(r);if(!o)throw Error(l(90));ke(r),Se(r,o)}}}break;case"textarea":ze(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},I=eu,D=function(e,t,n,r,o){var i=Ea;Ea|=4;try{return Vo(98,e.bind(null,t,n,r,o))}finally{0===(Ea=i)&&Ho()}},F=function(){0==(49&Ea)&&(function(){if(null!==Wa){var e=Wa;Wa=null,e.forEach((function(e,t){Du(t,e),Ga(t)})),Ho()}}(),hu())},j=function(e,t){var n=Ea;Ea|=2;try{return e(t)}finally{0===(Ea=n)&&Ho()}};var Bu,Hu,Ku={Events:[_n,On,Nn,C,E,jn,function(e){ot(e,Fn)},z,M,Gt,at,hu,{current:!1}]};Hu=(Bu={findFiberByHostInstance:Pn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);ku=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},xu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Bu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:X.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Hu?Hu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Ku,t.createPortal=Qu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&Ea))throw Error(l(187));var n=Ea;Ea|=1;try{return Vo(99,e.bind(null,t))}finally{Ea=n,Ho()}},t.hydrate=function(e,t,n){if(!$u(t))throw Error(l(200));return Wu(null,e,t,!0,n)},t.render=function(e,t,n){if(!$u(t))throw Error(l(200));return Wu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!$u(e))throw Error(l(40));return!!e._reactRootContainer&&(tu((function(){Wu(null,null,e,!1,(function(){e._reactRootContainer=null,e[Cn]=null}))})),!0)},t.unstable_batchedUpdates=eu,t.unstable_createPortal=function(e,t){return Qu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!$u(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return Wu(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(12)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,l,a;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,s=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(s,0))},o=function(e,t){c=setTimeout(e,t)},i=function(){clearTimeout(c)},l=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var y=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof y&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var v=p.now();t.unstable_now=function(){return p.now()-v}}var g=!1,b=null,w=-1,k=5,x=0;l=function(){return t.unstable_now()>=x},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,T=E.port2;E.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();x=e+k;try{b(!0,e)?T.postMessage(null):(g=!1,b=null)}catch(e){throw T.postMessage(null),e}}else g=!1},r=function(e){b=e,g||(g=!0,T.postMessage(null))},o=function(e,n){w=m((function(){e(t.unstable_now())}),n)},i=function(){h(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function C(e){return void 0===(e=e[0])?null:e}function P(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>_(l,n))void 0!==u&&0>_(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],N=[],R=1,z=null,M=3,I=!1,D=!1,F=!1;function j(e){for(var t=C(N);null!==t;){if(null===t.callback)P(N);else{if(!(t.startTime<=e))break;P(N),t.sortIndex=t.expirationTime,S(O,t)}t=C(N)}}function L(e){if(F=!1,j(e),!D)if(null!==C(O))D=!0,r(A);else{var t=C(N);null!==t&&o(L,t.startTime-e)}}function A(e,n){D=!1,F&&(F=!1,i()),I=!0;var r=M;try{for(j(n),z=C(O);null!==z&&(!(z.expirationTime>n)||e&&!l());){var a=z.callback;if(null!==a){z.callback=null,M=z.priorityLevel;var u=a(z.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?z.callback=u:z===C(O)&&P(O),j(n)}else P(O);z=C(O)}if(null!==z)var c=!0;else{var s=C(N);null!==s&&o(L,s.startTime-n),c=!1}return c}finally{z=null,M=r,I=!1}}function U(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var $=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){D||I||(D=!0,r(A))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return C(O)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=$,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,n,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:U(e)}else l=U(e),u=a;return e={id:R++,callback:n,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,S(N,e),null===C(O)&&e===C(N)&&(F?i():F=!0,o(L,u-a))):(e.sortIndex=l,S(O,e),D||I||(D=!0,r(A))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();j(e);var n=C(O);return n!==z&&null!==z&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<z.expirationTime||l()},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},function(e,t,n){"use strict";var r=n(14);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,l=r?Symbol.for("react.fragment"):60107,a=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,s=r?Symbol.for("react.context"):60110,f=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.suspense_list"):60120,y=r?Symbol.for("react.memo"):60115,v=r?Symbol.for("react.lazy"):60116,g=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,k=r?Symbol.for("react.scope"):60119;function x(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case l:case u:case a:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case v:case y:case c:return e;default:return t}}case i:return t}}}function E(e){return x(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=c,t.Element=o,t.ForwardRef=p,t.Fragment=l,t.Lazy=v,t.Memo=y,t.Portal=i,t.Profiler=u,t.StrictMode=a,t.Suspense=m,t.isAsyncMode=function(e){return E(e)||x(e)===f},t.isConcurrentMode=E,t.isContextConsumer=function(e){return x(e)===s},t.isContextProvider=function(e){return x(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return x(e)===p},t.isFragment=function(e){return x(e)===l},t.isLazy=function(e){return x(e)===v},t.isMemo=function(e){return x(e)===y},t.isPortal=function(e){return x(e)===i},t.isProfiler=function(e){return x(e)===u},t.isStrictMode=function(e){return x(e)===a},t.isSuspense=function(e){return x(e)===m},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===d||e===u||e===a||e===m||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===y||e.$$typeof===c||e.$$typeof===s||e.$$typeof===p||e.$$typeof===b||e.$$typeof===w||e.$$typeof===k||e.$$typeof===g)},t.typeOf=x},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(7),l=n.n(i);function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var u=n(1),c=n.n(u),s=o.a.createContext(null),f=function(e){function t(t){var n;n=e.call(this,t)||this;var r=t.store;return n.state={storeState:r.getState(),store:r},n}a(t,e);var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this.subscribe()},n.componentWillUnmount=function(){this.unsubscribe&&this.unsubscribe(),this._isMounted=!1},n.componentDidUpdate=function(e){this.props.store!==e.store&&(this.unsubscribe&&this.unsubscribe(),this.subscribe())},n.subscribe=function(){var e=this,t=this.props.store;this.unsubscribe=t.subscribe((function(){var n=t.getState();e._isMounted&&e.setState((function(e){return e.storeState===n?null:{storeState:n}}))}));var n=t.getState();n!==this.state.storeState&&this.setState({storeState:n})},n.render=function(){var e=this.props.context||s;return o.a.createElement(e.Provider,{value:this.state},this.props.children)},t}(r.Component);f.propTypes={store:c.a.shape({subscribe:c.a.func.isRequired,dispatch:c.a.func.isRequired,getState:c.a.func.isRequired}),context:c.a.object,children:c.a.any};var d=f;function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function m(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}var h=n(4),y=n.n(h),v=n(2),g=n.n(v),b=n(3);function w(e,t){void 0===t&&(t={});var n=t,i=n.getDisplayName,l=void 0===i?function(e){return"ConnectAdvanced("+e+")"}:i,u=n.methodName,c=void 0===u?"connectAdvanced":u,f=n.renderCountProp,d=void 0===f?void 0:f,h=n.shouldHandleStateChanges,v=void 0===h||h,w=n.storeKey,k=void 0===w?"store":w,x=n.withRef,E=void 0!==x&&x,T=n.forwardRef,S=void 0!==T&&T,C=n.context,P=void 0===C?s:C,_=m(n,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"]);g()(void 0===d,"renderCountProp is removed. render counting is built into the latest React dev tools profiling extension"),g()(!E,"withRef is removed. To access the wrapped instance, use a ref on the connected component");var O="To use a custom Redux store for specific components,  create a custom React context with React.createContext(), and pass the context object to React Redux's Provider and specific components like:  <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. You may also pass a {context : MyContext} option to connect";g()("store"===k,"storeKey has been removed and does not do anything. "+O);var N=P;return function(t){var n=t.displayName||t.name||"Component",i=l(n),u=p({},_,{getDisplayName:l,methodName:c,renderCountProp:d,shouldHandleStateChanges:v,storeKey:k,displayName:i,wrappedComponentName:n,WrappedComponent:t}),s=_.pure,f=r.Component;s&&(f=r.PureComponent);var m=function(n){function r(t){var r,i,l,a,u,c,f,d,m,h,y;return r=n.call(this,t)||this,g()(S?!t.wrapperProps[k]:!t[k],"Passing redux store in props has been removed and does not do anything. "+O),r.selectDerivedProps=function(t,n,r,o){if(s&&i===n&&l===t)return a;r===u&&c===o||(u=r,c=o,f=e(r.dispatch,o)),i=n,l=t;var d=f(t,n);return a=d},r.selectChildElement=function(e,t,n){return t===d&&n===m&&y===e||(d=t,m=n,y=e,h=o.a.createElement(e,p({},t,{ref:n}))),h},r.indirectRenderWrappedComponent=r.indirectRenderWrappedComponent.bind(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(r)),r}a(r,n);var l=r.prototype;return l.indirectRenderWrappedComponent=function(e){return this.renderWrappedComponent(e)},l.renderWrappedComponent=function(e){g()(e,'Could not find "store" in the context of "'+i+'". Either wrap the root component in a <Provider>, or pass a custom React context provider to <Provider> and the corresponding React context consumer to '+i+" in connect options.");var n,r=e.storeState,o=e.store,l=this.props;S&&(l=this.props.wrapperProps,n=this.props.forwardedRef);var a=this.selectDerivedProps(r,l,o,u);return this.selectChildElement(t,a,n)},l.render=function(){var e=this.props.context&&this.props.context.Consumer&&Object(b.isContextConsumer)(o.a.createElement(this.props.context.Consumer,null))?this.props.context:N;return o.a.createElement(e.Consumer,null,this.indirectRenderWrappedComponent)},r}(f);if(m.WrappedComponent=t,m.displayName=i,S){var h=o.a.forwardRef((function(e,t){return o.a.createElement(m,{wrapperProps:e,forwardedRef:t})}));return h.displayName=i,h.WrappedComponent=t,y()(h,t)}return y()(m,t)}}var k=Object.prototype.hasOwnProperty;function x(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function E(e,t){if(x(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var o=0;o<n.length;o++)if(!k.call(t,n[o])||!x(e[n[o]],t[n[o]]))return!1;return!0}var T=n(5),S=function(){return Math.random().toString(36).substring(7).split("").join(".")},C={INIT:"@@redux/INIT"+S(),REPLACE:"@@redux/REPLACE"+S(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+S()}};function P(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function _(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function O(e,t){return function(){return t(e.apply(this,arguments))}}function N(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function R(e,t){var n=Object.keys(e);return Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(e)),t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n}function z(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?R(n,!0).forEach((function(t){N(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):R(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function M(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}function I(e){return function(t,n){var r=e(t,n);function o(){return r}return o.dependsOnOwnProps=!1,o}}function D(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function F(e,t){return function(t,n){n.displayName;var r=function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)};return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=D(e);var o=r(t,n);return"function"==typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=D(o),o=r(t,n)),o},r}}var j=[function(e){return"function"==typeof e?F(e):void 0},function(e){return e?void 0:I((function(e){return{dispatch:e}}))},function(e){return e&&"object"==typeof e?I((function(t){return function(e,t){if("function"==typeof e)return O(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var n={};for(var r in e){var o=e[r];"function"==typeof o&&(n[r]=O(o,t))}return n}(e,t)})):void 0}];var L=[function(e){return"function"==typeof e?F(e):void 0},function(e){return e?void 0:I((function(){return{}}))}];function A(e,t,n){return p({},n,e,t)}var U=[function(e){return"function"==typeof e?function(e){return function(t,n){n.displayName;var r,o=n.pure,i=n.areMergedPropsEqual,l=!1;return function(t,n,a){var u=e(t,n,a);return l?o&&i(u,r)||(r=u):(l=!0,r=u),r}}}(e):void 0},function(e){return e?void 0:function(){return A}}];function $(e,t,n,r){return function(o,i){return n(e(o,i),t(r,i),i)}}function W(e,t,n,r,o){var i,l,a,u,c,s=o.areStatesEqual,f=o.areOwnPropsEqual,d=o.areStatePropsEqual,p=!1;function m(o,p){var m,h,y=!f(p,l),v=!s(o,i);return i=o,l=p,y&&v?(a=e(i,l),t.dependsOnOwnProps&&(u=t(r,l)),c=n(a,u,l)):y?(e.dependsOnOwnProps&&(a=e(i,l)),t.dependsOnOwnProps&&(u=t(r,l)),c=n(a,u,l)):v?(m=e(i,l),h=!d(m,a),a=m,h&&(c=n(a,u,l)),c):c}return function(o,s){return p?m(o,s):(a=e(i=o,l=s),u=t(r,l),c=n(a,u,l),p=!0,c)}}function V(e,t){var n=t.initMapStateToProps,r=t.initMapDispatchToProps,o=t.initMergeProps,i=m(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),l=n(e,i),a=r(e,i),u=o(e,i);return(i.pure?W:$)(l,a,u,e,i)}function Q(e,t,n){for(var r=t.length-1;r>=0;r--){var o=t[r](e);if(o)return o}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function B(e,t){return e===t}var H,K,q,Y,X,G,Z,J,ee,te,ne,re;q=(K=void 0===H?{}:H).connectHOC,Y=void 0===q?w:q,X=K.mapStateToPropsFactories,G=void 0===X?L:X,Z=K.mapDispatchToPropsFactories,J=void 0===Z?j:Z,ee=K.mergePropsFactories,te=void 0===ee?U:ee,ne=K.selectorFactory,re=void 0===ne?V:ne;function oe(e){return function(t){var n=t.dispatch,r=t.getState;return function(t){return function(o){return"function"==typeof o?o(n,r,e):t(o)}}}}var ie=oe();ie.withExtraArgument=oe;var le=ie;function ae(e){return(ae="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ue(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ce(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function se(e,t){return!t||"object"!==ae(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function fe(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function de(e){return(de=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function pe(e,t){return(pe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var me=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&pe(e,t)}(u,e);var t,n,i,l,a=(t=u,function(){var e,n=de(t);if(fe()){var r=de(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return se(this,e)});function u(){return ue(this,u),a.apply(this,arguments)}return n=u,(i=[{key:"render",value:function(){return o.a.createElement(r.Fragment,null,o.a.createElement("h1",null,"Graph Builder JS"))}}])&&ce(n.prototype,i),l&&ce(n,l),u}(r.Component),he={columns:{},sections:{xAxis:{id:"xAxis",column:null},legends:{id:"legends",columns:[]}}},ye=M,ve=function e(t,n,r){var o;if("function"==typeof n&&"function"==typeof r||"function"==typeof r&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof n&&void 0===r&&(r=n,n=void 0),void 0!==r){if("function"!=typeof r)throw new Error("Expected the enhancer to be a function.");return r(e)(t,n)}if("function"!=typeof t)throw new Error("Expected the reducer to be a function.");var i=t,l=n,a=[],u=a,c=!1;function s(){u===a&&(u=a.slice())}function f(){if(c)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return l}function d(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(c)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var t=!0;return s(),u.push(e),function(){if(t){if(c)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");t=!1,s();var n=u.indexOf(e);u.splice(n,1),a=null}}}function p(e){if(!P(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(c)throw new Error("Reducers may not dispatch actions.");try{c=!0,l=i(l,e)}finally{c=!1}for(var t=a=u,n=0;n<t.length;n++){(0,t[n])()}return e}function m(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");i=e,p({type:C.REPLACE})}function h(){var e,t=d;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(f())}return n(),{unsubscribe:t(n)}}})[T.a]=function(){return this},e}return p({type:C.INIT}),(o={dispatch:p,subscribe:d,getState:f,replaceReducer:m})[T.a]=h,o}(function(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var o=t[r];0,"function"==typeof e[o]&&(n[o]=e[o])}var i,l=Object.keys(n);try{!function(e){Object.keys(e).forEach((function(t){var n=e[t];if(void 0===n(void 0,{type:C.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:C.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+C.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(n)}catch(e){i=e}return function(e,t){if(void 0===e&&(e={}),i)throw i;for(var r=!1,o={},a=0;a<l.length;a++){var u=l[a],c=n[u],s=e[u],f=c(s,t);if(void 0===f){var d=_(u,t);throw new Error(d)}o[u]=f,r=r||f!==s}return(r=r||l.length!==Object.keys(e).length)?o:e}}({graphData:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:he,t=arguments.length>1?arguments[1]:void 0;return t.type,e}}),ye(function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){var n=e.apply(void 0,arguments),r=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},o={getState:n.getState,dispatch:function(){return r.apply(void 0,arguments)}},i=t.map((function(e){return e(o)}));return z({},n,{dispatch:r=M.apply(void 0,i)(n.dispatch)})}}}(le))),ge=o.a.createElement(d,{store:ve},o.a.createElement(me,null));l.a.render(ge,document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbnZhcmlhbnQvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zeW1ib2wtb2JzZXJ2YWJsZS9lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zeW1ib2wtb2JzZXJ2YWJsZS9lcy9wb255ZmlsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvQ29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9Qcm92aWRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvc2hhbGxvd0VxdWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9yZWR1eC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC93cmFwTWFwVG9Qcm9wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9tYXBEaXNwYXRjaFRvUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwU3RhdGVUb1Byb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21lcmdlUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3Qvc2VsZWN0b3JGYWN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L2Nvbm5lY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4LXRodW5rL2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3Zpc3VhbENTVi9ncmFwaF9idWlsZGVyL3NyYy9BcHAuanMiLCJ3ZWJwYWNrOi8vLy4vdmlzdWFsQ1NWL2dyYXBoX2J1aWxkZXIvc3JjL3N0b3JlL3JlZHVjZXJzL2dyYXBoRGF0YS5qcyIsIndlYnBhY2s6Ly8vLi92aXN1YWxDU1YvZ3JhcGhfYnVpbGRlci9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjb25kaXRpb24iLCJmb3JtYXQiLCJhIiwiYiIsImUiLCJmIiwiZXJyb3IiLCJ1bmRlZmluZWQiLCJFcnJvciIsImFyZ3MiLCJhcmdJbmRleCIsInJlcGxhY2UiLCJmcmFtZXNUb1BvcCIsIlJlYWN0SXMiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJsZW5ndGgiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcmd1bWVudHMiLCJhcml0eSIsIk1FTU9fU1RBVElDUyIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwiY29tcG9uZW50IiwiaXNNZW1vIiwiRm9yd2FyZFJlZiIsInJlbmRlciIsImdldE93blByb3BlcnR5TmFtZXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50Iiwia2V5cyIsImNvbmNhdCIsInRhcmdldFN0YXRpY3MiLCJzb3VyY2VTdGF0aWNzIiwiZGVzY3JpcHRvciIsInJvb3QiLCJzZWxmIiwid2luZG93IiwiZ2xvYmFsIiwicmVzdWx0IiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9PYmplY3QiLCJ2YWwiLCJUeXBlRXJyb3IiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwibWFwIiwiam9pbiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0Iiwic291cmNlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsInN5bWJvbE9ic2VydmFibGVQb255ZmlsbCIsIm9ic2VydmFibGUiLCJmb3IiLCJxIiwidSIsInYiLCJ3IiwieCIsInkiLCJ6IiwiQSIsIkIiLCJpdGVyYXRvciIsIkMiLCJlbmNvZGVVUklDb21wb25lbnQiLCJEIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkUiLCJGIiwidGhpcyIsInByb3BzIiwiY29udGV4dCIsInJlZnMiLCJ1cGRhdGVyIiwiRyIsIkgiLCJpc1JlYWN0Q29tcG9uZW50Iiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIkkiLCJjb25zdHJ1Y3RvciIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSiIsImN1cnJlbnQiLCJLIiwiTCIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTSIsImciLCJrIiwiY2hpbGRyZW4iLCJoIiwiQXJyYXkiLCIkJHR5cGVvZiIsIl9vd25lciIsIk8iLCJQIiwiUSIsIlIiLCJwb3AiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJTIiwicHVzaCIsIlYiLCJUIiwiVSIsImlzQXJyYXkiLCJuZXh0IiwiZG9uZSIsImVzY2FwZSIsInRvU3RyaW5nIiwiVyIsImFhIiwiWCIsIk4iLCJZIiwiWiIsImJhIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJSZWFjdEN1cnJlbnRPd25lciIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwiQ2hpbGRyZW4iLCJ0b0FycmF5Iiwib25seSIsIkNvbXBvbmVudCIsIkZyYWdtZW50IiwiUHJvZmlsZXIiLCJQdXJlQ29tcG9uZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsIl9jb250ZXh0IiwiY3JlYXRlRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIm1lbW8iLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ2ZXJzaW9uIiwic2xpY2UiLCJhcHBseSIsIm9uRXJyb3IiLCJkYSIsImVhIiwiZmEiLCJoYSIsImlhIiwiamEiLCJsYSIsIm1hIiwibmEiLCJvYSIsImN1cnJlbnRUYXJnZXQiLCJrYSIsInBhIiwicWEiLCJyYSIsImluZGV4T2YiLCJzYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwidGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInVhIiwicmVnaXN0cmF0aW9uTmFtZSIsInZhIiwid2EiLCJkZXBlbmRlbmNpZXMiLCJ4YSIsInlhIiwiZG9jdW1lbnQiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsInN0YXRlTm9kZSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIk1hIiwiTmEiLCJPYSIsIlBhIiwiUWEiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJ0b0xvd2VyQ2FzZSIsIlVhIiwiVmEiLCJ0b1VwcGVyQ2FzZSIsInhsaW5rSHJlZiIsIldhIiwiWGEiLCJTYSIsImlzTmFOIiwiVGEiLCJ0ZXN0IiwiUmEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJmYiIsImdiIiwiaGIiLCJpYiIsImpiIiwia2IiLCJsYiIsIm1iIiwibmIiLCJwYiIsInFiIiwidGFnIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyZXR1cm4iLCJyYiIsInNiIiwibm9kZU5hbWUiLCJ4YiIsIl92YWx1ZVRyYWNrZXIiLCJzZXQiLCJjb25maWd1cmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwidGIiLCJ5YiIsImNoZWNrZWQiLCJ6YiIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiQWIiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiQmIiLCJDYiIsIkRiIiwiRWIiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIkdiIiwiRmIiLCJIYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiSWIiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIkpiIiwiS2IiLCJMYiIsInRleHRDb250ZW50IiwiTWIiLCJOYiIsIk9iIiwiUGIiLCJRYiIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJSYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwiU2IiLCJUYiIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlViIiwiVmIiLCJXYiIsInN0eWxlIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsIldlYWtNYXAiLCJNYXAiLCJjYyIsImRjIiwiYWx0ZXJuYXRlIiwiZWZmZWN0VGFnIiwiZWMiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImZjIiwiaGMiLCJjaGlsZCIsInNpYmxpbmciLCJnYyIsImljIiwiamMiLCJrYyIsImxjIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwibWMiLCJuYyIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJvYyIsInBjIiwicWMiLCJ0b3BMZXZlbFR5cGUiLCJuYXRpdmVFdmVudCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJyYyIsImV2ZW50U3lzdGVtRmxhZ3MiLCJzYyIsImNvbnRhaW5lckluZm8iLCJ0YyIsInVjIiwiaGFzIiwidmMiLCJ3YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIktjIiwiYmxvY2tlZE9uIiwiY29udGFpbmVyIiwiTGMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJNYyIsIk5jIiwiUGMiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJRYyIsIlJjIiwiU2MiLCJUYyIsInNoaWZ0IiwiVWMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJWYyIsIldjIiwiWWMiLCJaYyIsIiRjIiwiYWQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJldmVudFByaW9yaXR5IiwiYmQiLCJjZCIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsImlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIk9jIiwiamQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsImtkIiwibGQiLCJ0cmltIiwibWQiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsIm5kIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwib2QiLCJwZCIsImlzIiwicWQiLCJyZCIsInNkIiwidGQiLCJib2R5IiwidWQiLCJ2ZCIsIm5vZGUiLCJvZmZzZXQiLCJuZXh0U2libGluZyIsInhkIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50V2luZG93IiwibG9jYXRpb24iLCJocmVmIiwieWQiLCJjb250ZW50RWRpdGFibGUiLCJEZCIsIkVkIiwiRmQiLCJhdXRvRm9jdXMiLCJHZCIsIl9faHRtbCIsIkhkIiwic2V0VGltZW91dCIsIklkIiwiY2xlYXJUaW1lb3V0IiwiSmQiLCJLZCIsInByZXZpb3VzU2libGluZyIsImRhdGEiLCJMZCIsIk1hdGgiLCJyYW5kb20iLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwiZGlzcGF0Y2hDb25maWciLCJVZCIsIl90YXJnZXRJbnN0IiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImNlIiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiZWUiLCJldmVudFBvb2wiLCJmZSIsImRlc3RydWN0b3IiLCJkZSIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJleHRlbmQiLCJnZSIsImhlIiwiaWUiLCJqZSIsImtlIiwiZG9jdW1lbnRNb2RlIiwibGUiLCJtZSIsIm5lIiwib2UiLCJiZWZvcmVJbnB1dCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwicGUiLCJxZSIsImtleUNvZGUiLCJyZSIsImRldGFpbCIsInNlIiwidmUiLCJsb2NhbGUiLCJ3aGljaCIsInRlIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwidWUiLCJ3ZSIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJ4ZSIsInllIiwiY2hhbmdlIiwiemUiLCJBZSIsIkJlIiwiQ2UiLCJEZSIsIkVlIiwiRmUiLCJHZSIsImRldGFjaEV2ZW50IiwiSGUiLCJJZSIsImF0dGFjaEV2ZW50IiwiSmUiLCJLZSIsIkxlIiwiTWUiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiTmUiLCJ2aWV3IiwiT2UiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGUiLCJnZXRNb2RpZmllclN0YXRlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIlZlIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJXZSIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlhlIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJZZSIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsInNlbGVjdCIsImVmIiwiZmYiLCJnZiIsImhmIiwiamYiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwia2YiLCJvblNlbGVjdCIsImxmIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIm1mIiwiY2xpcGJvYXJkRGF0YSIsIm5mIiwib2YiLCJjaGFyQ29kZSIsInBmIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInFmIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsInJmIiwicmVwZWF0Iiwic2YiLCJkYXRhVHJhbnNmZXIiLCJ0ZiIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ1ZiIsInZmIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ3ZiIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiRGYiLCJFZiIsIkZmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiR2YiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIkhmIiwiSWYiLCJKZiIsIktmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJMZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIk1mIiwidW5zdGFibGVfbm93IiwiTmYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIk9mIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJQZiIsIlFmIiwiUmYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIlNmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiVGYiLCJVZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwicWciLCJmaXJzdENvbnRleHQiLCJleHBpcmF0aW9uVGltZSIsInJnIiwic2ciLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwidGciLCJ1ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiYmFzZVF1ZXVlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ2ZyIsIndnIiwic3VzcGVuc2VDb25maWciLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJ4ZyIsInlnIiwiemciLCJjYSIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkpnIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIkdnIiwiSGciLCJJZyIsIktnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiTGciLCJzdGF0ZSIsIk1nIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiTmciLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIk9nIiwiUGciLCJfc3RyaW5nUmVmIiwiUWciLCJSZyIsImxhc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJpbmRleCIsIlNnIiwiVGciLCJlbGVtZW50VHlwZSIsIlVnIiwiaW1wbGVtZW50YXRpb24iLCJWZyIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJlaCIsImZoIiwiZ2giLCJoaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImloIiwicmVzcG9uZGVyIiwiamgiLCJraCIsImxoIiwibWgiLCJuaCIsIm9oIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInF1ZXVlIiwidWgiLCJ2aCIsIndoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJkZXN0cm95IiwiZGVwcyIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwiTGgiLCJNaCIsIk5oIiwicmVhZENvbnRleHQiLCJ1c2VSZXNwb25kZXIiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsIk9oIiwiUGgiLCJRaCIsIlJoIiwiU2giLCJUaCIsInBlbmRpbmdQcm9wcyIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJlaSIsImZpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiZ2kiLCJoaSIsInBlbmRpbmdDb250ZXh0IiwibmkiLCJwaSIsInFpIiwiaWkiLCJyZXRyeVRpbWUiLCJqaSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJraSIsImxpIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxFeHBpcmF0aW9uIiwidGFpbE1vZGUiLCJtaSIsInJpIiwic2kiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwib25DbGljayIsIm9uY2xpY2siLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlVGV4dE5vZGUiLCJ0aSIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsIkFpIiwic3RhY2siLCJCaSIsIldlYWtTZXQiLCJTZXQiLCJDaSIsIkZpIiwiRWkiLCJHaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiSGkiLCJJaSIsIkppIiwiZm9jdXMiLCJLaSIsIkxpIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJEaSIsIk1pIiwiTmkiLCJPaSIsIlBpIiwiUWkiLCJpbnN0YW5jZSIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJSaSIsIlNpIiwiVGkiLCJkaXNwbGF5IiwiVWkiLCJWaSIsImFkZCIsInRoZW4iLCJXaSIsIlhpIiwiZWxlbWVudCIsIllpIiwiWmkiLCIkaSIsImNvbXBvbmVudERpZENhdGNoIiwiYWoiLCJjb21wb25lbnRTdGFjayIsIlJqIiwiYmoiLCJjZWlsIiwiY2oiLCJkaiIsImtqIiwibGoiLCJtaiIsIm5qIiwib2oiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJ6aiIsImxhc3RFeHBpcmVkVGltZSIsIkFqIiwiZmlyc3RQZW5kaW5nVGltZSIsImxhc3RQaW5nZWRUaW1lIiwibmV4dEtub3duUGVuZGluZ0xldmVsIiwiY2FsbGJhY2tFeHBpcmF0aW9uVGltZSIsImNhbGxiYWNrUHJpb3JpdHkiLCJjYWxsYmFja05vZGUiLCJCaiIsInRpbWVvdXQiLCJDaiIsIkRqIiwiRWoiLCJGaiIsIkdqIiwiSGoiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZEV4cGlyYXRpb25UaW1lIiwibGFzdFN1c3BlbmRlZFRpbWUiLCJJaiIsInRpbWVvdXRIYW5kbGUiLCJKaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJLaiIsIk1qIiwiTmoiLCJwaW5nQ2FjaGUiLCJPaiIsInViIiwiUGoiLCJYYyIsIlFqIiwiU2oiLCJmaXJzdFN1c3BlbmRlZFRpbWUiLCJyYW5nZUNvdW50Iiwid2IiLCJhY3RpdmVFbGVtZW50RGV0YWNoZWQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiVGoiLCJ3ZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJtaW4iLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsInZiIiwiVWoiLCJWaiIsIldqIiwiaGlkZGVuIiwiZGVmYXVsdCIsIm9iIiwiWGoiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJaaiIsInBlbmRpbmdDaGlsZHJlbiIsImFrIiwiYmsiLCJjayIsImRrIiwiZWsiLCJmayIsIkpjIiwiX2ludGVybmFsUm9vdCIsImdrIiwiaWsiLCJoYXNBdHRyaWJ1dGUiLCJoayIsImprIiwia2siLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmb3JtIiwiTGoiLCJsayIsIkV2ZW50cyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJZaiIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVQcm9wcyIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsIk1lc3NhZ2VDaGFubmVsIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJwZXJmb3JtYW5jZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJwcmlvcml0eUxldmVsIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJpc1JlcXVpcmVkIiwiUmVhY3RQcm9wVHlwZXMiLCJhcnJheSIsImJvb2wiLCJzdHJpbmciLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJMYXp5IiwiTWVtbyIsIlBvcnRhbCIsImlzQXN5bmNNb2RlIiwiaXNDb25jdXJyZW50TW9kZSIsImlzQ29udGV4dENvbnN1bWVyIiwiaXNDb250ZXh0UHJvdmlkZXIiLCJpc0VsZW1lbnQiLCJpc0ZvcndhcmRSZWYiLCJpc0ZyYWdtZW50IiwiaXNMYXp5IiwiaXNQb3J0YWwiLCJpc1Byb2ZpbGVyIiwiaXNTdHJpY3RNb2RlIiwiaXNTdXNwZW5zZSIsImlzVmFsaWRFbGVtZW50VHlwZSIsInR5cGVPZiIsIkZ1bmN0aW9uIiwib3JpZ2luYWxNb2R1bGUiLCJ3ZWJwYWNrUG9seWZpbGwiLCJfaW5oZXJpdHNMb29zZSIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsIl9fcHJvdG9fXyIsIlJlYWN0UmVkdXhDb250ZXh0IiwiX0NvbXBvbmVudCIsIl90aGlzIiwic3RvcmUiLCJzdG9yZVN0YXRlIiwiZ2V0U3RhdGUiLCJfcHJvdG8iLCJfaXNNb3VudGVkIiwic3Vic2NyaWJlIiwidW5zdWJzY3JpYmUiLCJwcmV2UHJvcHMiLCJfdGhpczIiLCJuZXdTdG9yZVN0YXRlIiwicHJvdmlkZXJTdGF0ZSIsInBvc3RNb3VudFN0b3JlU3RhdGUiLCJDb250ZXh0IiwiX2V4dGVuZHMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImV4Y2x1ZGVkIiwic291cmNlS2V5cyIsImNvbm5lY3RBZHZhbmNlZCIsInNlbGVjdG9yRmFjdG9yeSIsIl9yZWYiLCJfcmVmMiIsIl9yZWYyJGdldERpc3BsYXlOYW1lIiwiZ2V0RGlzcGxheU5hbWUiLCJfcmVmMiRtZXRob2ROYW1lIiwibWV0aG9kTmFtZSIsIl9yZWYyJHJlbmRlckNvdW50UHJvcCIsInJlbmRlckNvdW50UHJvcCIsIl9yZWYyJHNob3VsZEhhbmRsZVN0YSIsInNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyIsIl9yZWYyJHN0b3JlS2V5Iiwic3RvcmVLZXkiLCJfcmVmMiR3aXRoUmVmIiwid2l0aFJlZiIsIl9yZWYyJGZvcndhcmRSZWYiLCJfcmVmMiRjb250ZXh0IiwiY29ubmVjdE9wdGlvbnMiLCJjdXN0b21TdG9yZVdhcm5pbmdNZXNzYWdlIiwiV3JhcHBlZENvbXBvbmVudCIsIndyYXBwZWRDb21wb25lbnROYW1lIiwic2VsZWN0b3JGYWN0b3J5T3B0aW9ucyIsInB1cmUiLCJPdXRlckJhc2VDb21wb25lbnQiLCJDb25uZWN0IiwiX091dGVyQmFzZUNvbXBvbmVudCIsImxhc3RQcm9wcyIsImxhc3RTdGF0ZSIsImxhc3REZXJpdmVkUHJvcHMiLCJsYXN0U3RvcmUiLCJsYXN0U2VsZWN0b3JGYWN0b3J5T3B0aW9ucyIsInNvdXJjZVNlbGVjdG9yIiwibGFzdENoaWxkUHJvcHMiLCJsYXN0Rm9yd2FyZFJlZiIsImxhc3RDaGlsZEVsZW1lbnQiLCJsYXN0Q29tcG9uZW50Iiwid3JhcHBlclByb3BzIiwic2VsZWN0RGVyaXZlZFByb3BzIiwibmV4dFByb3BzIiwic2VsZWN0Q2hpbGRFbGVtZW50IiwiY2hpbGRQcm9wcyIsImluZGlyZWN0UmVuZGVyV3JhcHBlZENvbXBvbmVudCIsIlJlZmVyZW5jZUVycm9yIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInJlbmRlcldyYXBwZWRDb21wb25lbnQiLCJmb3J3YXJkZWRSZWYiLCJkZXJpdmVkUHJvcHMiLCJDb250ZXh0VG9Vc2UiLCJmb3J3YXJkZWQiLCJoYXNPd24iLCJzaGFsbG93RXF1YWwiLCJvYmpBIiwib2JqQiIsImtleXNBIiwia2V5c0IiLCJyYW5kb21TdHJpbmciLCJBY3Rpb25UeXBlcyIsIklOSVQiLCJSRVBMQUNFIiwiUFJPQkVfVU5LTk9XTl9BQ1RJT04iLCJpc1BsYWluT2JqZWN0Iiwib2JqIiwicHJvdG8iLCJnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZSIsImFjdGlvblR5cGUiLCJiaW5kQWN0aW9uQ3JlYXRvciIsImFjdGlvbkNyZWF0b3IiLCJfZGVmaW5lUHJvcGVydHkiLCJ3cml0YWJsZSIsIm93bktleXMiLCJlbnVtZXJhYmxlT25seSIsImZpbHRlciIsInN5bSIsIl9vYmplY3RTcHJlYWQyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJjb21wb3NlIiwiX2xlbiIsImZ1bmNzIiwiX2tleSIsImFyZyIsInJlZHVjZSIsIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJnZXRDb25zdGFudCIsImNvbnN0YW50IiwiY29uc3RhbnRTZWxlY3RvciIsImRlcGVuZHNPbk93blByb3BzIiwiZ2V0RGVwZW5kc09uT3duUHJvcHMiLCJtYXBUb1Byb3BzIiwiQm9vbGVhbiIsIndyYXBNYXBUb1Byb3BzRnVuYyIsInByb3h5Iiwic3RhdGVPckRpc3BhdGNoIiwib3duUHJvcHMiLCJtYXBEaXNwYXRjaFRvUHJvcHMiLCJhY3Rpb25DcmVhdG9ycyIsImJvdW5kQWN0aW9uQ3JlYXRvcnMiLCJiaW5kQWN0aW9uQ3JlYXRvcnMiLCJtYXBTdGF0ZVRvUHJvcHMiLCJkZWZhdWx0TWVyZ2VQcm9wcyIsInN0YXRlUHJvcHMiLCJkaXNwYXRjaFByb3BzIiwibWVyZ2VQcm9wcyIsIm1lcmdlZFByb3BzIiwiYXJlTWVyZ2VkUHJvcHNFcXVhbCIsImhhc1J1bk9uY2UiLCJuZXh0TWVyZ2VkUHJvcHMiLCJ3cmFwTWVyZ2VQcm9wc0Z1bmMiLCJpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwicHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkiLCJhcmVTdGF0ZXNFcXVhbCIsImFyZU93blByb3BzRXF1YWwiLCJhcmVTdGF0ZVByb3BzRXF1YWwiLCJoYXNSdW5BdExlYXN0T25jZSIsImhhbmRsZVN1YnNlcXVlbnRDYWxscyIsIm5leHRTdGF0ZSIsIm5leHRPd25Qcm9wcyIsIm5leHRTdGF0ZVByb3BzIiwic3RhdGVQcm9wc0NoYW5nZWQiLCJwcm9wc0NoYW5nZWQiLCJzdGF0ZUNoYW5nZWQiLCJmaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwiaW5pdE1hcFN0YXRlVG9Qcm9wcyIsImluaXRNYXBEaXNwYXRjaFRvUHJvcHMiLCJpbml0TWVyZ2VQcm9wcyIsIm1hdGNoIiwiZmFjdG9yaWVzIiwic3RyaWN0RXF1YWwiLCJfdGVtcCIsIl9yZWYkY29ubmVjdEhPQyIsImNvbm5lY3RIT0MiLCJfcmVmJG1hcFN0YXRlVG9Qcm9wc0YiLCJtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMiLCJfcmVmJG1hcERpc3BhdGNoVG9Qcm8iLCJtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMiLCJfcmVmJG1lcmdlUHJvcHNGYWN0b3IiLCJtZXJnZVByb3BzRmFjdG9yaWVzIiwiX3JlZiRzZWxlY3RvckZhY3RvcnkiLCJjcmVhdGVUaHVua01pZGRsZXdhcmUiLCJleHRyYUFyZ3VtZW50IiwidGh1bmsiLCJ3aXRoRXh0cmFBcmd1bWVudCIsIkFwcCIsImluaXRpYWxTdGF0ZSIsInNlY3Rpb25zIiwieEF4aXMiLCJjb2x1bW4iLCJsZWdlbmRzIiwiY29tcG9zZUVuaGFuY2VyIiwiY3JlYXRlU3RvcmUiLCJyZWR1Y2VyIiwicHJlbG9hZGVkU3RhdGUiLCJlbmhhbmNlciIsImN1cnJlbnRSZWR1Y2VyIiwiY3VycmVudFN0YXRlIiwiY3VycmVudExpc3RlbmVycyIsIm5leHRMaXN0ZW5lcnMiLCJpc0Rpc3BhdGNoaW5nIiwiZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycyIsImxpc3RlbmVyIiwiaXNTdWJzY3JpYmVkIiwic3BsaWNlIiwibGlzdGVuZXJzIiwicmVwbGFjZVJlZHVjZXIiLCJuZXh0UmVkdWNlciIsIm91dGVyU3Vic2NyaWJlIiwib2JzZXJ2ZXIiLCJvYnNlcnZlU3RhdGUiLCJyZWR1Y2VycyIsInJlZHVjZXJLZXlzIiwiZmluYWxSZWR1Y2VycyIsInNoYXBlQXNzZXJ0aW9uRXJyb3IiLCJmaW5hbFJlZHVjZXJLZXlzIiwiYXNzZXJ0UmVkdWNlclNoYXBlIiwiaGFzQ2hhbmdlZCIsIl9pIiwicHJldmlvdXNTdGF0ZUZvcktleSIsIm5leHRTdGF0ZUZvcktleSIsImVycm9yTWVzc2FnZSIsImNvbWJpbmVSZWR1Y2VycyIsImdyYXBoRGF0YSIsIm1pZGRsZXdhcmVzIiwiX2Rpc3BhdGNoIiwibWlkZGxld2FyZUFQSSIsImNoYWluIiwibWlkZGxld2FyZSIsImFwcGx5TWlkZGxld2FyZSIsImFwcCIsIlJlYWN0RE9NIiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVB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QU8yOUMsR0FBS3J4QyxTQUFTdXhDLGVBQWUiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxOCk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgICBjb250ZXh0VHlwZXM6IHRydWUsXG4gICAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICAgIGRpc3BsYXlOYW1lOiB0cnVlLFxuICAgIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gICAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICAgIG1peGluczogdHJ1ZSxcbiAgICBwcm9wVHlwZXM6IHRydWUsXG4gICAgdHlwZTogdHJ1ZVxufTtcblxudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gICAgbmFtZTogdHJ1ZSxcbiAgICBsZW5ndGg6IHRydWUsXG4gICAgcHJvdG90eXBlOiB0cnVlLFxuICAgIGNhbGxlcjogdHJ1ZSxcbiAgICBjYWxsZWU6IHRydWUsXG4gICAgYXJndW1lbnRzOiB0cnVlLFxuICAgIGFyaXR5OiB0cnVlXG59O1xuXG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgICAnJCR0eXBlb2YnOiB0cnVlLFxuICAgIHJlbmRlcjogdHJ1ZSxcbiAgICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlXG59O1xuXG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAgICckJHR5cGVvZic6IHRydWUsXG4gICAgY29tcGFyZTogdHJ1ZSxcbiAgICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgcHJvcFR5cGVzOiB0cnVlLFxuICAgIHR5cGU6IHRydWVcbn07XG5cbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tSZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblxuZnVuY3Rpb24gZ2V0U3RhdGljcyhjb21wb25lbnQpIHtcbiAgICBpZiAoUmVhY3RJcy5pc01lbW8oY29tcG9uZW50KSkge1xuICAgICAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICAgIH1cbiAgICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcblxuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICAgIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgICAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuXG4gICAgICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuICAgICAgICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICAgICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciB0YXJnZXRTdGF0aWNzID0gZ2V0U3RhdGljcyh0YXJnZXRDb21wb25lbnQpO1xuICAgICAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgICAgICAgICAgaWYgKCFLTk9XTl9TVEFUSUNTW2tleV0gJiYgIShibGFja2xpc3QgJiYgYmxhY2tsaXN0W2tleV0pICYmICEoc291cmNlU3RhdGljcyAmJiBzb3VyY2VTdGF0aWNzW2tleV0pICYmICEodGFyZ2V0U3RhdGljcyAmJiB0YXJnZXRTdGF0aWNzW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEF2b2lkIGZhaWx1cmVzIGZyb20gcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIvKiBnbG9iYWwgd2luZG93ICovXG5pbXBvcnQgcG9ueWZpbGwgZnJvbSAnLi9wb255ZmlsbC5qcyc7XG5cbnZhciByb290O1xuXG5pZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBzZWxmO1xufSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gd2luZG93O1xufSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gZ2xvYmFsO1xufSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gbW9kdWxlO1xufSBlbHNlIHtcbiAgcm9vdCA9IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG59XG5cbnZhciByZXN1bHQgPSBwb255ZmlsbChyb290KTtcbmV4cG9ydCBkZWZhdWx0IHJlc3VsdDtcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzeW1ib2xPYnNlcnZhYmxlUG9ueWZpbGwocm9vdCkge1xuXHR2YXIgcmVzdWx0O1xuXHR2YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cblx0aWYgKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicpIHtcblx0XHRpZiAoU3ltYm9sLm9ic2VydmFibGUpIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbC5vYnNlcnZhYmxlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXN1bHQgPSBTeW1ib2woJ29ic2VydmFibGUnKTtcblx0XHRcdFN5bWJvbC5vYnNlcnZhYmxlID0gcmVzdWx0O1xuXHRcdH1cblx0fSBlbHNlIHtcblx0XHRyZXN1bHQgPSAnQEBvYnNlcnZhYmxlJztcblx0fVxuXG5cdHJldHVybiByZXN1bHQ7XG59O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyx6PW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOlxuNjAxMTYsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gQyhhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBEPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxFPXt9O2Z1bmN0aW9uIEYoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH1GLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihDKDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtGLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEcoKXt9Ry5wcm90b3R5cGU9Ri5wcm90b3R5cGU7ZnVuY3Rpb24gSChhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfXZhciBJPUgucHJvdG90eXBlPW5ldyBHO0kuY29uc3RydWN0b3I9SDtsKEksRi5wcm90b3R5cGUpO0kuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGMpe3ZhciBlLGQ9e30sZz1udWxsLGs9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsZSkmJiFMLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGg9QXJyYXkoZiksbT0wO208ZjttKyspaFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWh9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbZV0mJihkW2VdPWZbZV0pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6ayxwcm9wczpkLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixjLGUpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9YztkLmNvbnRleHQ9ZTtkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6Yyxjb250ZXh0OmUsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGMsZSl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGMoZSxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGs9MDtrPGEubGVuZ3RoO2srKyl7ZD1hW2tdO3ZhciBmPWIrVShkLGspO2crPVQoZCxmLGMsZSl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1CJiZhW0JdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGs9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaysrKSxnKz1UKGQsZixjLGUpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWQpdGhyb3cgYz1cIlwiK2EsRXJyb3IoQygzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yz9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpjLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBWKGEsYixjKXtyZXR1cm4gbnVsbD09YT8wOlQoYSxcIlwiLGIsYyl9ZnVuY3Rpb24gVShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gVyhhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBhYShhLGIsYyl7dmFyIGU9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9YKGEsZSxjLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPU4oYSxkKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKStjKSksZS5wdXNoKGEpKX1mdW5jdGlvbiBYKGEsYixjLGUsZCl7dmFyIGc9XCJcIjtudWxsIT1jJiYoZz0oXCJcIitjKS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpO2I9UihiLGcsZSxkKTtWKGEsYWEsYik7UyhiKX12YXIgWT17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBaKCl7dmFyIGE9WS5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKEMoMzIxKSk7cmV0dXJuIGF9XG52YXIgYmE9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6WSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7c3VzcGVuc2U6bnVsbH0sUmVhY3RDdXJyZW50T3duZXI6SixJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O2V4cG9ydHMuQ2hpbGRyZW49e21hcDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXTtYKGEsZSxudWxsLGIsYyk7cmV0dXJuIGV9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGMpO1YoYSxXLGIpO1MoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBWKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107WChhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFPKGEpKXRocm93IEVycm9yKEMoMTQzKSk7cmV0dXJuIGF9fTtcbmV4cG9ydHMuQ29tcG9uZW50PUY7ZXhwb3J0cy5GcmFnbWVudD1yO2V4cG9ydHMuUHJvZmlsZXI9dTtleHBvcnRzLlB1cmVDb21wb25lbnQ9SDtleHBvcnRzLlN0cmljdE1vZGU9dDtleHBvcnRzLlN1c3BlbnNlPXk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1iYTtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihDKDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGc9YS5yZWYsaz1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGc9Yi5yZWYsaz1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGY9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoaCBpbiBiKUsuY2FsbChiLGgpJiYhTC5oYXNPd25Qcm9wZXJ0eShoKSYmKGVbaF09dm9pZCAwPT09YltoXSYmdm9pZCAwIT09Zj9mW2hdOmJbaF0pfXZhciBoPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09aCllLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGgpe2Y9QXJyYXkoaCk7Zm9yKHZhciBtPTA7bTxoO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Zn1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxcbmtleTpkLHJlZjpnLHByb3BzOmUsX293bmVyOmt9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9TTtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TztcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnosdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjEzLjFcIjtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB1KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih1KDIyNykpO1xuZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIGRhPSExLGVhPW51bGwsZmE9ITEsaGE9bnVsbCxpYT17b25FcnJvcjpmdW5jdGlvbihhKXtkYT0hMDtlYT1hfX07ZnVuY3Rpb24gamEoYSxiLGMsZCxlLGYsZyxoLGspe2RhPSExO2VhPW51bGw7YmEuYXBwbHkoaWEsYXJndW1lbnRzKX1mdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7amEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGRhKXtpZihkYSl7dmFyIGw9ZWE7ZGE9ITE7ZWE9bnVsbH1lbHNlIHRocm93IEVycm9yKHUoMTk4KSk7ZmF8fChmYT0hMCxoYT1sKX19dmFyIGxhPW51bGwsbWE9bnVsbCxuYT1udWxsO1xuZnVuY3Rpb24gb2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PW5hKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9dmFyIHBhPW51bGwscWE9e307XG5mdW5jdGlvbiByYSgpe2lmKHBhKWZvcih2YXIgYSBpbiBxYSl7dmFyIGI9cWFbYV0sYz1wYS5pbmRleE9mKGEpO2lmKCEoLTE8YykpdGhyb3cgRXJyb3IodSg5NixhKSk7aWYoIXNhW2NdKXtpZighYi5leHRyYWN0RXZlbnRzKXRocm93IEVycm9yKHUoOTcsYSkpO3NhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7aWYodGEuaGFzT3duUHJvcGVydHkoaCkpdGhyb3cgRXJyb3IodSg5OSxoKSk7dGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmdWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHVhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7aWYoIWUpdGhyb3cgRXJyb3IodSg5OCxkLGEpKTt9fX19XG5mdW5jdGlvbiB1YShhLGIsYyl7aWYodmFbYV0pdGhyb3cgRXJyb3IodSgxMDAsYSkpO3ZhW2FdPWI7d2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgc2E9W10sdGE9e30sdmE9e30sd2E9e307ZnVuY3Rpb24geGEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107aWYoIXFhLmhhc093blByb3BlcnR5KGMpfHxxYVtjXSE9PWQpe2lmKHFhW2NdKXRocm93IEVycm9yKHUoMTAyLGMpKTtxYVtjXT1kO2I9ITB9fWImJnJhKCl9dmFyIHlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSx6YT1udWxsLEFhPW51bGwsQmE9bnVsbDtcbmZ1bmN0aW9uIENhKGEpe2lmKGE9bWEoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB6YSl0aHJvdyBFcnJvcih1KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPWxhKGIpLHphKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIERhKGEpe0FhP0JhP0JhLnB1c2goYSk6QmE9W2FdOkFhPWF9ZnVuY3Rpb24gRWEoKXtpZihBYSl7dmFyIGE9QWEsYj1CYTtCYT1BYT1udWxsO0NhKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylDYShiW2FdKX19ZnVuY3Rpb24gRmEoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBHYShhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEhhKCl7fXZhciBJYT1GYSxKYT0hMSxLYT0hMTtmdW5jdGlvbiBMYSgpe2lmKG51bGwhPT1BYXx8bnVsbCE9PUJhKUhhKCksRWEoKX1cbmZ1bmN0aW9uIE1hKGEsYixjKXtpZihLYSlyZXR1cm4gYShiLGMpO0thPSEwO3RyeXtyZXR1cm4gSWEoYSxiLGMpfWZpbmFsbHl7S2E9ITEsTGEoKX19dmFyIE5hPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxPYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFBhPXt9LFFhPXt9O1xuZnVuY3Rpb24gUmEoYSl7aWYoT2EuY2FsbChRYSxhKSlyZXR1cm4hMDtpZihPYS5jYWxsKFBhLGEpKXJldHVybiExO2lmKE5hLnRlc3QoYSkpcmV0dXJuIFFhW2FdPSEwO1BhW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIFNhKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVGEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8U2EoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiB2KGEsYixjLGQsZSxmKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zn12YXIgQz17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDAsITEsYSxudWxsLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtDW2JdPW5ldyB2KGIsMSwhMSxhWzFdLG51bGwsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYSxudWxsLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITAsYSxudWxsLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDQsITEsYSxudWxsLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNiwhMSxhLG51bGwsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTt2YXIgVWE9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBWYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxcblZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLG51bGwsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbkMueGxpbmtIcmVmPW5ldyB2KFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCl9KTt2YXIgV2E9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwoV2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZ1wiKXx8KFdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnPXtzdXNwZW5zZTpudWxsfSk7XG5mdW5jdGlvbiBYYShhLGIsYyxkKXt2YXIgZT1DLmhhc093blByb3BlcnR5KGIpP0NbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChUYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/UmEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciBZYT0vXiguKilbXFxcXFxcL10vLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRhPUU/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZiPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxpYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAsamI9RT9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxrYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGxiPUU/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLG1iPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBuYihhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9bWImJmFbbWJdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24gb2IoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe2EuX3N0YXR1cz0wO3ZhciBiPWEuX2N0b3I7Yj1iKCk7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX19XG5mdW5jdGlvbiBwYihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGFiOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlICRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBjYjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBiYjpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGhiOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIGliOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGViOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgZGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBnYjp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlxuXCJGb3J3YXJkUmVmXCIpO2Nhc2UgamI6cmV0dXJuIHBiKGEudHlwZSk7Y2FzZSBsYjpyZXR1cm4gcGIoYS5yZW5kZXIpO2Nhc2Uga2I6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBwYihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBxYihhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9cGIoYS50eXBlKTtjPW51bGw7ZCYmKGM9cGIoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYSxcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxuZnVuY3Rpb24gcmIoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHNiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiB0YihhKXt2YXIgYj1zYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24geGIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPXRiKGEpKX1mdW5jdGlvbiB5YihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9c2IoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiB6YihhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBBYihhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1yYihudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEJiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmWGEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIENiKGEsYil7QmIoYSxiKTt2YXIgYz1yYihiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9EYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZEYihhLGIudHlwZSxyYihiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEViKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gRmIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gR2IoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1GYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBIYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrcmIoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIEliKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih1KDkxKSk7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gSmIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IodSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHUoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpyYihjKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPXJiKGIudmFsdWUpLGQ9cmIoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBMYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBNYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBOYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIE9iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9OYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBQYixRYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1NYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtQYj1QYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtQYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1QYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBSYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifWZ1bmN0aW9uIFNiKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRiPXthbmltYXRpb25lbmQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFViPXt9LFZiPXt9O1xueWEmJihWYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYi5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYi50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdiKGEpe2lmKFViW2FdKXJldHVybiBVYlthXTtpZighVGJbYV0pcmV0dXJuIGE7dmFyIGI9VGJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmIpcmV0dXJuIFViW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGI9V2IoXCJhbmltYXRpb25lbmRcIiksWWI9V2IoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmI9V2IoXCJhbmltYXRpb25zdGFydFwiKSwkYj1XYihcInRyYW5zaXRpb25lbmRcIiksYWM9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJjPW5ldyAoXCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXApO2Z1bmN0aW9uIGNjKGEpe3ZhciBiPWJjLmdldChhKTt2b2lkIDA9PT1iJiYoYj1uZXcgTWFwLGJjLnNldChhLGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGRjKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5lZmZlY3RUYWcmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIGVjKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZmMoYSl7aWYoZGMoYSkhPT1hKXRocm93IEVycm9yKHUoMTg4KSk7fVxuZnVuY3Rpb24gZ2MoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9ZGMoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gZmMoZSksYTtpZihmPT09ZClyZXR1cm4gZmMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih1KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHUoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IodSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBoYyhhKXthPWdjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gaWMoYSxiKXtpZihudWxsPT1iKXRocm93IEVycm9yKHUoMzApKTtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gamMoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIGtjPW51bGw7XG5mdW5jdGlvbiBsYyhhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspb2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmb2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIG1jKGEpe251bGwhPT1hJiYoa2M9aWMoa2MsYSkpO2E9a2M7a2M9bnVsbDtpZihhKXtqYyhhLGxjKTtpZihrYyl0aHJvdyBFcnJvcih1KDk1KSk7aWYoZmEpdGhyb3cgYT1oYSxmYT0hMSxoYT1udWxsLGE7fX1cbmZ1bmN0aW9uIG5jKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBvYyhhKXtpZigheWEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9dmFyIHBjPVtdO2Z1bmN0aW9uIHFjKGEpe2EudG9wTGV2ZWxUeXBlPW51bGw7YS5uYXRpdmVFdmVudD1udWxsO2EudGFyZ2V0SW5zdD1udWxsO2EuYW5jZXN0b3JzLmxlbmd0aD0wOzEwPnBjLmxlbmd0aCYmcGMucHVzaChhKX1cbmZ1bmN0aW9uIHJjKGEsYixjLGQpe2lmKHBjLmxlbmd0aCl7dmFyIGU9cGMucG9wKCk7ZS50b3BMZXZlbFR5cGU9YTtlLmV2ZW50U3lzdGVtRmxhZ3M9ZDtlLm5hdGl2ZUV2ZW50PWI7ZS50YXJnZXRJbnN0PWM7cmV0dXJuIGV9cmV0dXJue3RvcExldmVsVHlwZTphLGV2ZW50U3lzdGVtRmxhZ3M6ZCxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119fVxuZnVuY3Rpb24gc2MoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZD1jO2lmKDM9PT1kLnRhZylkPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZWxzZXtmb3IoO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mb31pZighZClicmVhaztiPWMudGFnOzUhPT1iJiY2IT09Ynx8YS5hbmNlc3RvcnMucHVzaChjKTtjPXRjKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPW5jKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7dmFyIGY9YS5uYXRpdmVFdmVudCxnPWEuZXZlbnRTeXN0ZW1GbGFnczswPT09YyYmKGd8PTY0KTtmb3IodmFyIGg9bnVsbCxrPTA7azxzYS5sZW5ndGg7aysrKXt2YXIgbD1zYVtrXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSxnKSkmJihoPVxuaWMoaCxsKSl9bWMoaCl9fWZ1bmN0aW9uIHVjKGEsYixjKXtpZighYy5oYXMoYSkpe3N3aXRjaChhKXtjYXNlIFwic2Nyb2xsXCI6dmMoYixcInNjcm9sbFwiLCEwKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOnZjKGIsXCJmb2N1c1wiLCEwKTt2YyhiLFwiYmx1clwiLCEwKTtjLnNldChcImJsdXJcIixudWxsKTtjLnNldChcImZvY3VzXCIsbnVsbCk7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOm9jKGEpJiZ2YyhiLGEsITApO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1hYy5pbmRleE9mKGEpJiZGKGEsYil9Yy5zZXQoYSxudWxsKX19XG52YXIgd2MseGMseWMsemM9ITEsQWM9W10sQmM9bnVsbCxDYz1udWxsLERjPW51bGwsRWM9bmV3IE1hcCxGYz1uZXcgTWFwLEdjPVtdLEhjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY2xvc2UgY2FuY2VsIGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIiksSWM9XCJmb2N1cyBibHVyIGRyYWdlbnRlciBkcmFnbGVhdmUgbW91c2VvdmVyIG1vdXNlb3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJvdXQgZ290cG9pbnRlcmNhcHR1cmUgbG9zdHBvaW50ZXJjYXB0dXJlXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gSmMoYSxiKXt2YXIgYz1jYyhiKTtIYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pO0ljLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSl9ZnVuY3Rpb24gS2MoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsdG9wTGV2ZWxUeXBlOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDMyLG5hdGl2ZUV2ZW50OmUsY29udGFpbmVyOmR9fVxuZnVuY3Rpb24gTGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpCYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Q2M9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6RGM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOkVjLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOkZjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fWZ1bmN0aW9uIE1jKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9S2MoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9TmMoYiksbnVsbCE9PWImJnhjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIE9jKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c1wiOnJldHVybiBCYz1NYyhCYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gQ2M9TWMoQ2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIERjPU1jKERjLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7RWMuc2V0KGYsTWMoRWMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLEZjLnNldChmLE1jKEZjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIFBjKGEpe3ZhciBiPXRjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9ZGMoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9ZWMoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe3ljKGMpfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1mdW5jdGlvbiBRYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1iKXt2YXIgYz1OYyhiKTtudWxsIT09YyYmeGMoYyk7YS5ibG9ja2VkT249YjtyZXR1cm4hMX1yZXR1cm4hMH1cbmZ1bmN0aW9uIFNjKGEsYixjKXtRYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gVGMoKXtmb3IoemM9ITE7MDxBYy5sZW5ndGg7KXt2YXIgYT1BY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9TmMoYS5ibG9ja2VkT24pO251bGwhPT1hJiZ3YyhhKTticmVha312YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7bnVsbCE9PWI/YS5ibG9ja2VkT249YjpBYy5zaGlmdCgpfW51bGwhPT1CYyYmUWMoQmMpJiYoQmM9bnVsbCk7bnVsbCE9PUNjJiZRYyhDYykmJihDYz1udWxsKTtudWxsIT09RGMmJlFjKERjKSYmKERjPW51bGwpO0VjLmZvckVhY2goU2MpO0ZjLmZvckVhY2goU2MpfWZ1bmN0aW9uIFVjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCx6Y3x8KHpjPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFRjKSkpfVxuZnVuY3Rpb24gVmMoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gVWMoYixhKX1pZigwPEFjLmxlbmd0aCl7VWMoQWNbMF0sYSk7Zm9yKHZhciBjPTE7YzxBYy5sZW5ndGg7YysrKXt2YXIgZD1BY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PUJjJiZVYyhCYyxhKTtudWxsIT09Q2MmJlVjKENjLGEpO251bGwhPT1EYyYmVWMoRGMsYSk7RWMuZm9yRWFjaChiKTtGYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxHYy5sZW5ndGg7YysrKWQ9R2NbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPEdjLmxlbmd0aCYmKGM9R2NbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspUGMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZHYy5zaGlmdCgpfVxudmFyIFdjPXt9LFljPW5ldyBNYXAsWmM9bmV3IE1hcCwkYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixYYixcImFuaW1hdGlvbkVuZFwiLFliLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsWmIsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXG5cInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIiwkYixcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gYWQoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV0sZj1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtmPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpmLGNhcHR1cmVkOmYrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbZF0sZXZlbnRQcmlvcml0eTpifTtaYy5zZXQoZCxiKTtZYy5zZXQoZCxmKTtXY1tlXT1mfX1cbmFkKFwiYmx1ciBibHVyIGNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzIGZvY3VzIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksMCk7XG5hZChcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTthZCgkYywyKTtmb3IodmFyIGJkPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxjZD0wO2NkPGJkLmxlbmd0aDtjZCsrKVpjLnNldChiZFtjZF0sMCk7XG52YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBGKGEsYil7dmMoYixhLCExKX1mdW5jdGlvbiB2YyhhLGIsYyl7dmFyIGQ9WmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1kPzI6ZCl7Y2FzZSAwOmQ9Z2QuYmluZChudWxsLGIsMSxhKTticmVhaztjYXNlIDE6ZD1oZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2RlZmF1bHQ6ZD1pZC5iaW5kKG51bGwsYiwxLGEpfWM/YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMCk6YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMSl9ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7SmF8fEhhKCk7dmFyIGU9aWQsZj1KYTtKYT0hMDt0cnl7R2EoZSxhLGIsYyxkKX1maW5hbGx5eyhKYT1mKXx8TGEoKX19ZnVuY3Rpb24gaGQoYSxiLGMsZCl7ZWQoZGQsaWQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGlkKGEsYixjLGQpe2lmKGZkKWlmKDA8QWMubGVuZ3RoJiYtMTxIYy5pbmRleE9mKGEpKWE9S2MobnVsbCxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2V7dmFyIGU9UmMoYSxiLGMsZCk7aWYobnVsbD09PWUpTGMoYSxkKTtlbHNlIGlmKC0xPEhjLmluZGV4T2YoYSkpYT1LYyhlLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZSBpZighT2MoZSxhLGIsYyxkKSl7TGMoYSxkKTthPXJjKGEsZCxudWxsLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfX19fVxuZnVuY3Rpb24gUmMoYSxiLGMsZCl7Yz1uYyhkKTtjPXRjKGMpO2lmKG51bGwhPT1jKXt2YXIgZT1kYyhjKTtpZihudWxsPT09ZSljPW51bGw7ZWxzZXt2YXIgZj1lLnRhZztpZigxMz09PWYpe2M9ZWMoZSk7aWYobnVsbCE9PWMpcmV0dXJuIGM7Yz1udWxsfWVsc2UgaWYoMz09PWYpe2lmKGUuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1lLnRhZz9lLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7Yz1udWxsfWVsc2UgZSE9PWMmJihjPW51bGwpfX1hPXJjKGEsZCxjLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfXJldHVybiBudWxsfVxudmFyIGpkPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LGtkPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhqZCkuZm9yRWFjaChmdW5jdGlvbihhKXtrZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2pkW2JdPWpkW2FdfSl9KTtmdW5jdGlvbiBsZChhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8amQuaGFzT3duUHJvcGVydHkoYSkmJmpkW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIG1kKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPWxkKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIG5kPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBvZChhLGIpe2lmKGIpe2lmKG5kW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSgxMzcsYSxcIlwiKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih1KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih1KDYyLFwiXCIpKTt9fVxuZnVuY3Rpb24gcGQoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBxZD1NYi5odG1sO2Z1bmN0aW9uIHJkKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPWNjKGEpO2I9d2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspdWMoYltkXSxhLGMpfWZ1bmN0aW9uIHNkKCl7fVxuZnVuY3Rpb24gdGQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIHVkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1mdW5jdGlvbiB2ZChhLGIpe3ZhciBjPXVkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPXVkKGMpfX1cbmZ1bmN0aW9uIHdkKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/d2QoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfWZ1bmN0aW9uIHhkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPXRkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPXRkKGEuZG9jdW1lbnQpfXJldHVybiBifVxuZnVuY3Rpb24geWQoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX12YXIgemQ9XCIkXCIsQWQ9XCIvJFwiLEJkPVwiJD9cIixDZD1cIiQhXCIsRGQ9bnVsbCxFZD1udWxsO2Z1bmN0aW9uIEZkKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIEdkKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgSGQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsSWQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIEpkKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfVxuZnVuY3Rpb24gS2QoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09emR8fGM9PT1DZHx8Yz09PUJkKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZSBjPT09QWQmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciBMZD1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxNZD1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0xkLE5kPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrTGQsT2Q9XCJfX3JlYWN0Q29udGFpbmVyZSRcIitMZDtcbmZ1bmN0aW9uIHRjKGEpe3ZhciBiPWFbTWRdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW09kXXx8Y1tNZF0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1LZChhKTtudWxsIT09YTspe2lmKGM9YVtNZF0pcmV0dXJuIGM7YT1LZChhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTmMoYSl7YT1hW01kXXx8YVtPZF07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIFBkKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih1KDMzKSk7fWZ1bmN0aW9uIFFkKGEpe3JldHVybiBhW05kXXx8bnVsbH1cbmZ1bmN0aW9uIFJkKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBTZChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPWxhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDIzMSxcbmIsdHlwZW9mIGMpKTtyZXR1cm4gY31mdW5jdGlvbiBUZChhLGIsYyl7aWYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIFVkKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9UmQoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KVRkKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspVGQoY1tiXSxcImJ1YmJsZWRcIixhKX19XG5mdW5jdGlvbiBWZChhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFdkKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmVmQoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfWZ1bmN0aW9uIFhkKGEpe2pjKGEsVWQpfXZhciBZZD1udWxsLFpkPW51bGwsJGQ9bnVsbDtcbmZ1bmN0aW9uIGFlKCl7aWYoJGQpcmV0dXJuICRkO3ZhciBhLGI9WmQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gJGQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBiZSgpe3JldHVybiEwfWZ1bmN0aW9uIGNlKCl7cmV0dXJuITF9XG5mdW5jdGlvbiBHKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9iZTpjZTt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWNlO3JldHVybiB0aGlzfVxubihHLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWJlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWJlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWJlfSxpc1BlcnNpc3RlbnQ6Y2UsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Y2U7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTtHLkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbkcuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7ZGUoYyk7cmV0dXJuIGN9O2RlKEcpO2Z1bmN0aW9uIGVlKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gZmUoYSl7aWYoIShhIGluc3RhbmNlb2YgdGhpcykpdGhyb3cgRXJyb3IodSgyNzkpKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9ZnVuY3Rpb24gZGUoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9ZWU7YS5yZWxlYXNlPWZlfXZhciBnZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaGU9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGllPVs5LDEzLDI3LDMyXSxqZT15YSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csa2U9bnVsbDt5YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoa2U9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBsZT15YSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWtlLG1lPXlhJiYoIWplfHxrZSYmODxrZSYmMTE+PWtlKSxuZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxvZT17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSxwZT0hMTtcbmZ1bmN0aW9uIHFlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09aWUuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiByZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBzZT0hMTtmdW5jdGlvbiB0ZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gcmUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3BlPSEwO3JldHVybiBuZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1uZSYmcGU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gdWUoYSxiKXtpZihzZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhamUmJnFlKGEsYik/KGE9YWUoKSwkZD1aZD1ZZD1udWxsLHNlPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBtZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgdmU9e2V2ZW50VHlwZXM6b2UsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZTtpZihqZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgZj1vZS5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Zj1vZS5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmY9b2UuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1mPXZvaWQgMH1lbHNlIHNlP3FlKGEsYykmJihmPW9lLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGY9b2UuY29tcG9zaXRpb25TdGFydCk7Zj8obWUmJlwia29cIiE9PWMubG9jYWxlJiYoc2V8fGYhPT1vZS5jb21wb3NpdGlvblN0YXJ0P2Y9PT1vZS5jb21wb3NpdGlvbkVuZCYmc2UmJihlPWFlKCkpOihZZD1kLFpkPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LHNlPSEwKSksZj1nZS5nZXRQb29sZWQoZixcbmIsYyxkKSxlP2YuZGF0YT1lOihlPXJlKGMpLG51bGwhPT1lJiYoZi5kYXRhPWUpKSxYZChmKSxlPWYpOmU9bnVsbDsoYT1sZT90ZShhLGMpOnVlKGEsYykpPyhiPWhlLmdldFBvb2xlZChvZS5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsWGQoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWU/YjpudWxsPT09Yj9lOltlLGJdfX0sd2U9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24geGUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISF3ZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG52YXIgeWU9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gemUoYSxiLGMpe2E9Ry5nZXRQb29sZWQoeWUuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtEYShjKTtYZChhKTtyZXR1cm4gYX12YXIgQWU9bnVsbCxCZT1udWxsO2Z1bmN0aW9uIENlKGEpe21jKGEpfWZ1bmN0aW9uIERlKGEpe3ZhciBiPVBkKGEpO2lmKHliKGIpKXJldHVybiBhfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEZlPSExO3lhJiYoRmU9b2MoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7XG5mdW5jdGlvbiBHZSgpe0FlJiYoQWUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpLEJlPUFlPW51bGwpfWZ1bmN0aW9uIEhlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZEZShCZSkpaWYoYT16ZShCZSxhLG5jKGEpKSxKYSltYyhhKTtlbHNle0phPSEwO3RyeXtGYShDZSxhKX1maW5hbGx5e0phPSExLExhKCl9fX1mdW5jdGlvbiBJZShhLGIsYyl7XCJmb2N1c1wiPT09YT8oR2UoKSxBZT1iLEJlPWMsQWUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpKTpcImJsdXJcIj09PWEmJkdlKCl9ZnVuY3Rpb24gSmUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gRGUoQmUpfWZ1bmN0aW9uIEtlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gRGUoYil9ZnVuY3Rpb24gTGUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gRGUoYil9XG52YXIgTWU9e2V2ZW50VHlwZXM6eWUsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpGZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/UGQoYik6d2luZG93LGY9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1mfHxcImlucHV0XCI9PT1mJiZcImZpbGVcIj09PWUudHlwZSl2YXIgZz1FZTtlbHNlIGlmKHhlKGUpKWlmKEZlKWc9TGU7ZWxzZXtnPUplO3ZhciBoPUllfWVsc2UoZj1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09Zi50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZz1LZSk7aWYoZyYmKGc9ZyhhLGIpKSlyZXR1cm4gemUoZyxjLGQpO2gmJmgoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZEYihlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxOZT1HLmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksXG5PZT17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGUoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZVthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFFlKCl7cmV0dXJuIFBlfVxudmFyIFJlPTAsU2U9MCxUZT0hMSxVZT0hMSxWZT1OZS5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9UmU7UmU9YS5zY3JlZW5YO3JldHVybiBUZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFRlPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9U2U7U2U9YS5zY3JlZW5ZO3JldHVybiBVZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFVlPSEwLDApfX0pLFdlPVZlLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxYZT17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sWWU9e2V2ZW50VHlwZXM6WGUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGc9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGYmJjA9PT0oZSYzMikmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZyYmIWYpcmV0dXJuIG51bGw7Zj1kLndpbmRvdz09PWQ/ZDooZj1kLm93bmVyRG9jdW1lbnQpP2YuZGVmYXVsdFZpZXd8fGYucGFyZW50V2luZG93OndpbmRvdztpZihnKXtpZihnPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT90YyhiKTpudWxsLG51bGwhPT1iKXt2YXIgaD1kYyhiKTtpZihiIT09aHx8NSE9PWIudGFnJiY2IT09Yi50YWcpYj1udWxsfX1lbHNlIGc9bnVsbDtpZihnPT09YilyZXR1cm4gbnVsbDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09XG5hKXt2YXIgaz1WZTt2YXIgbD1YZS5tb3VzZUxlYXZlO3ZhciBtPVhlLm1vdXNlRW50ZXI7dmFyIHA9XCJtb3VzZVwifWVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWs9V2UsbD1YZS5wb2ludGVyTGVhdmUsbT1YZS5wb2ludGVyRW50ZXIscD1cInBvaW50ZXJcIjthPW51bGw9PWc/ZjpQZChnKTtmPW51bGw9PWI/ZjpQZChiKTtsPWsuZ2V0UG9vbGVkKGwsZyxjLGQpO2wudHlwZT1wK1wibGVhdmVcIjtsLnRhcmdldD1hO2wucmVsYXRlZFRhcmdldD1mO2M9ay5nZXRQb29sZWQobSxiLGMsZCk7Yy50eXBlPXArXCJlbnRlclwiO2MudGFyZ2V0PWY7Yy5yZWxhdGVkVGFyZ2V0PWE7ZD1nO3A9YjtpZihkJiZwKWE6e2s9ZDttPXA7Zz0wO2ZvcihhPWs7YTthPVJkKGEpKWcrKzthPTA7Zm9yKGI9bTtiO2I9UmQoYikpYSsrO2Zvcig7MDxnLWE7KWs9UmQoayksZy0tO2Zvcig7MDxhLWc7KW09UmQobSksYS0tO2Zvcig7Zy0tOyl7aWYoaz09PW18fGs9PT1tLmFsdGVybmF0ZSlicmVhayBhO1xuaz1SZChrKTttPVJkKG0pfWs9bnVsbH1lbHNlIGs9bnVsbDttPWs7Zm9yKGs9W107ZCYmZCE9PW07KXtnPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztrLnB1c2goZCk7ZD1SZChkKX1mb3IoZD1bXTtwJiZwIT09bTspe2c9cC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2QucHVzaChwKTtwPVJkKHApfWZvcihwPTA7cDxrLmxlbmd0aDtwKyspVmQoa1twXSxcImJ1YmJsZWRcIixsKTtmb3IocD1kLmxlbmd0aDswPHAtLTspVmQoZFtwXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuIDA9PT0oZSY2NCk/W2xdOltsLGNdfX07ZnVuY3Rpb24gWmUoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciAkZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpaZSxhZj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gYmYoYSxiKXtpZigkZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWFmLmNhbGwoYixjW2RdKXx8ISRlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9XG52YXIgY2Y9eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxkZj17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sZWY9bnVsbCxmZj1udWxsLGdmPW51bGwsaGY9ITE7XG5mdW5jdGlvbiBqZihhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKGhmfHxudWxsPT1lZnx8ZWYhPT10ZChjKSlyZXR1cm4gbnVsbDtjPWVmO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJnlkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIGdmJiZiZihnZixjKT9udWxsOihnZj1jLGE9Ry5nZXRQb29sZWQoZGYuc2VsZWN0LGZmLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9ZWYsWGQoYSksYSl9XG52YXIga2Y9e2V2ZW50VHlwZXM6ZGYsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUsZil7ZT1mfHwoZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQpO2lmKCEoZj0hZSkpe2E6e2U9Y2MoZSk7Zj13YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKylpZighZS5oYXMoZltnXSkpe2U9ITE7YnJlYWsgYX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/UGQoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZih4ZShlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSllZj1lLGZmPWIsZ2Y9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOmdmPWZmPWVmPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOmhmPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gaGY9ITEsamYoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoY2YpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBqZihjLGQpfXJldHVybiBudWxsfX0sbGY9Ry5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLG1mPUcuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksbmY9TmUuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBvZihhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBwZj17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0scWY9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHJmPU5lLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1wZlthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZihhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/cWZbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29mKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29mKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksc2Y9VmUuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHRmPU5lLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlfSksdWY9Ry5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksdmY9VmUuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx3Zj17ZXZlbnRUeXBlczpXYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVljLmdldChhKTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9mKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1yZjticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9bmY7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1cblZlO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9c2Y7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT10ZjticmVhaztjYXNlIFhiOmNhc2UgWWI6Y2FzZSBaYjphPWxmO2JyZWFrO2Nhc2UgJGI6YT11ZjticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1OZTticmVhaztjYXNlIFwid2hlZWxcIjphPXZmO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9bWY7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1cbldlO2JyZWFrO2RlZmF1bHQ6YT1HfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7WGQoYik7cmV0dXJuIGJ9fTtpZihwYSl0aHJvdyBFcnJvcih1KDEwMSkpO3BhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3JhKCk7dmFyIHhmPU5jO2xhPVFkO21hPXhmO25hPVBkO3hhKHtTaW1wbGVFdmVudFBsdWdpbjp3ZixFbnRlckxlYXZlRXZlbnRQbHVnaW46WWUsQ2hhbmdlRXZlbnRQbHVnaW46TWUsU2VsZWN0RXZlbnRQbHVnaW46a2YsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjp2ZX0pO3ZhciB5Zj1bXSx6Zj0tMTtmdW5jdGlvbiBIKGEpezA+emZ8fChhLmN1cnJlbnQ9eWZbemZdLHlmW3pmXT1udWxsLHpmLS0pfVxuZnVuY3Rpb24gSShhLGIpe3pmKys7eWZbemZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQWY9e30sSj17Y3VycmVudDpBZn0sSz17Y3VycmVudDohMX0sQmY9QWY7ZnVuY3Rpb24gQ2YoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBBZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBMKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9XG5mdW5jdGlvbiBEZigpe0goSyk7SChKKX1mdW5jdGlvbiBFZihhLGIsYyl7aWYoSi5jdXJyZW50IT09QWYpdGhyb3cgRXJyb3IodSgxNjgpKTtJKEosYik7SShLLGMpfWZ1bmN0aW9uIEZmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IodSgxMDgscGIoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbih7fSxjLHt9LGQpfWZ1bmN0aW9uIEdmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxBZjtCZj1KLmN1cnJlbnQ7SShKLGEpO0koSyxLLmN1cnJlbnQpO3JldHVybiEwfVxuZnVuY3Rpb24gSGYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHUoMTY5KSk7Yz8oYT1GZihhLGIsQmYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKEspLEgoSiksSShKLGEpKTpIKEspO0koSyxjKX1cbnZhciBJZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxKZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssS2Y9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxMZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxNZj1yLnVuc3RhYmxlX25vdyxOZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLE9mPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksUGY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxRZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFJmPXIudW5zdGFibGVfTG93UHJpb3JpdHksU2Y9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksVGY9e30sVWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxWZj12b2lkIDAhPT1MZj9MZjpmdW5jdGlvbigpe30sV2Y9bnVsbCxYZj1udWxsLFlmPSExLFpmPU1mKCksJGY9MUU0PlpmP01mOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKCktWmZ9O1xuZnVuY3Rpb24gYWcoKXtzd2l0Y2goTmYoKSl7Y2FzZSBPZjpyZXR1cm4gOTk7Y2FzZSBQZjpyZXR1cm4gOTg7Y2FzZSBRZjpyZXR1cm4gOTc7Y2FzZSBSZjpyZXR1cm4gOTY7Y2FzZSBTZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gYmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIE9mO2Nhc2UgOTg6cmV0dXJuIFBmO2Nhc2UgOTc6cmV0dXJuIFFmO2Nhc2UgOTY6cmV0dXJuIFJmO2Nhc2UgOTU6cmV0dXJuIFNmO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGNnKGEsYil7YT1iZyhhKTtyZXR1cm4gSWYoYSxiKX1mdW5jdGlvbiBkZyhhLGIsYyl7YT1iZyhhKTtyZXR1cm4gSmYoYSxiLGMpfWZ1bmN0aW9uIGVnKGEpe251bGw9PT1XZj8oV2Y9W2FdLFhmPUpmKE9mLGZnKSk6V2YucHVzaChhKTtyZXR1cm4gVGZ9ZnVuY3Rpb24gZ2coKXtpZihudWxsIT09WGYpe3ZhciBhPVhmO1hmPW51bGw7S2YoYSl9ZmcoKX1cbmZ1bmN0aW9uIGZnKCl7aWYoIVlmJiZudWxsIT09V2Ype1lmPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPVdmO2NnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTtXZj1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1XZiYmKFdmPVdmLnNsaWNlKGErMSkpLEpmKE9mLGdnKSxjO31maW5hbGx5e1lmPSExfX19ZnVuY3Rpb24gaGcoYSxiLGMpe2MvPTEwO3JldHVybiAxMDczNzQxODIxLSgoKDEwNzM3NDE4MjEtYStiLzEwKS9jfDApKzEpKmN9ZnVuY3Rpb24gaWcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9dmFyIGpnPXtjdXJyZW50Om51bGx9LGtnPW51bGwsbGc9bnVsbCxtZz1udWxsO2Z1bmN0aW9uIG5nKCl7bWc9bGc9a2c9bnVsbH1cbmZ1bmN0aW9uIG9nKGEpe3ZhciBiPWpnLmN1cnJlbnQ7SChqZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBwZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZihhLmNoaWxkRXhwaXJhdGlvblRpbWU8YilhLmNoaWxkRXhwaXJhdGlvblRpbWU9YixudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7ZWxzZSBpZihudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYy5jaGlsZEV4cGlyYXRpb25UaW1lPWI7ZWxzZSBicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBxZyhhLGIpe2tnPWE7bWc9bGc9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJihhLmV4cGlyYXRpb25UaW1lPj1iJiYocmc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gc2coYSxiKXtpZihtZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpbWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PWxnKXtpZihudWxsPT09a2cpdGhyb3cgRXJyb3IodSgzMDgpKTtsZz1iO2tnLmRlcGVuZGVuY2llcz17ZXhwaXJhdGlvblRpbWU6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2UgbGc9bGcubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHRnPSExO2Z1bmN0aW9uIHVnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsYmFzZVF1ZXVlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB2ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxiYXNlUXVldWU6YS5iYXNlUXVldWUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gd2coYSxiKXthPXtleHBpcmF0aW9uVGltZTphLHN1c3BlbnNlQ29uZmlnOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfTtyZXR1cm4gYS5uZXh0PWF9ZnVuY3Rpb24geGcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiB5ZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZ2ZyhjLGEpO2E9YS51cGRhdGVRdWV1ZTtjPWEuYmFzZVF1ZXVlO251bGw9PT1jPyhhLmJhc2VRdWV1ZT1iLm5leHQ9YixiLm5leHQ9Yik6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpfVxuZnVuY3Rpb24gemcoYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt0Zz0hMTt2YXIgZj1lLmJhc2VRdWV1ZSxnPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWcpe2lmKG51bGwhPT1mKXt2YXIgaD1mLm5leHQ7Zi5uZXh0PWcubmV4dDtnLm5leHQ9aH1mPWc7ZS5zaGFyZWQucGVuZGluZz1udWxsO2g9YS5hbHRlcm5hdGU7bnVsbCE9PWgmJihoPWgudXBkYXRlUXVldWUsbnVsbCE9PWgmJihoLmJhc2VRdWV1ZT1nKSl9aWYobnVsbCE9PWYpe2g9Zi5uZXh0O3ZhciBrPWUuYmFzZVN0YXRlLGw9MCxtPW51bGwscD1udWxsLHg9bnVsbDtpZihudWxsIT09aCl7dmFyIHo9aDtkb3tnPXouZXhwaXJhdGlvblRpbWU7aWYoZzxkKXt2YXIgY2E9e2V4cGlyYXRpb25UaW1lOnouZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT14PyhwPXg9XG5jYSxtPWspOng9eC5uZXh0PWNhO2c+bCYmKGw9Zyl9ZWxzZXtudWxsIT09eCYmKHg9eC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfSk7QWcoZyx6LnN1c3BlbnNlQ29uZmlnKTthOnt2YXIgRD1hLHQ9ejtnPWI7Y2E9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpEPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRCl7az1ELmNhbGwoY2EsayxnKTticmVhayBhfWs9RDticmVhayBhO2Nhc2UgMzpELmVmZmVjdFRhZz1ELmVmZmVjdFRhZyYtNDA5N3w2NDtjYXNlIDA6RD10LnBheWxvYWQ7Zz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgRD9ELmNhbGwoY2EsayxnKTpEO2lmKG51bGw9PT1nfHx2b2lkIDA9PT1nKWJyZWFrIGE7az1uKHt9LGssZyk7YnJlYWsgYTtjYXNlIDI6dGc9ITB9fW51bGwhPT16LmNhbGxiYWNrJiZcbihhLmVmZmVjdFRhZ3w9MzIsZz1lLmVmZmVjdHMsbnVsbD09PWc/ZS5lZmZlY3RzPVt6XTpnLnB1c2goeikpfXo9ei5uZXh0O2lmKG51bGw9PT16fHx6PT09aClpZihnPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWcpYnJlYWs7ZWxzZSB6PWYubmV4dD1nLm5leHQsZy5uZXh0PWgsZS5iYXNlUXVldWU9Zj1nLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKX1udWxsPT09eD9tPWs6eC5uZXh0PXA7ZS5iYXNlU3RhdGU9bTtlLmJhc2VRdWV1ZT14O0JnKGwpO2EuZXhwaXJhdGlvblRpbWU9bDthLm1lbW9pemVkU3RhdGU9a319XG5mdW5jdGlvbiBDZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWU7ZT1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkKXRocm93IEVycm9yKHUoMTkxLGQpKTtkLmNhbGwoZSl9fX12YXIgRGc9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsRWc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24gRmcoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5leHBpcmF0aW9uVGltZSYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEpnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT9kYyhhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9R2coKSxkPURnLnN1c3BlbnNlO1xuYz1IZyhjLGEsZCk7ZD13ZyhjLGQpO2QudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO3hnKGEsZCk7SWcoYSxjKX19O2Z1bmN0aW9uIEtnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWJmKGMsZCl8fCFiZihlLGYpOiEwfVxuZnVuY3Rpb24gTGcoYSxiLGMpe3ZhciBkPSExLGU9QWY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9c2coZik6KGU9TChiKT9CZjpKLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9DZihhLGUpOkFmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9Smc7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTWcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1FZzt1ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXNnKGYpOihmPUwoYik/QmY6Si5jdXJyZW50LGUuY29udGV4dD1DZihhLGYpKTt6ZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoRmcoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksemcoYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBPZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUGcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHUoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUVnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHUoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHUoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBRZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih1KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKSk7fVxuZnVuY3Rpb24gUmcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9U2coYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VGcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UGcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVVnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVBnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9VmcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVdnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VGcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGM9VWcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UGcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlICRhOnJldHVybiBiPVZnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihPZyhiKXx8XG5uYihiKSlyZXR1cm4gYj1XZyhiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtRZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYj9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgJGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoT2coYyl8fG5iKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtRZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHooYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YWI/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgJGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoT2coZCl8fG5iKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtRZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIGNhKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCxtPWcseT1nPTAsQT1udWxsO251bGwhPT1tJiZ5PGgubGVuZ3RoO3krKyl7bS5pbmRleD55PyhBPW0sbT1udWxsKTpBPW0uc2libGluZzt2YXIgcT14KGUsbSxoW3ldLGspO2lmKG51bGw9PT1xKXtudWxsPT09bSYmKG09QSk7YnJlYWt9YSYmXG5tJiZudWxsPT09cS5hbHRlcm5hdGUmJmIoZSxtKTtnPWYocSxnLHkpO251bGw9PT10P2w9cTp0LnNpYmxpbmc9cTt0PXE7bT1BfWlmKHk9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7eTxoLmxlbmd0aDt5KyspbT1wKGUsaFt5XSxrKSxudWxsIT09bSYmKGc9ZihtLGcseSksbnVsbD09PXQ/bD1tOnQuc2libGluZz1tLHQ9bSk7cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3k8aC5sZW5ndGg7eSsrKUE9eihtLGUseSxoW3ldLGspLG51bGwhPT1BJiYoYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09QS5rZXk/eTpBLmtleSksZz1mKEEsZyx5KSxudWxsPT09dD9sPUE6dC5zaWJsaW5nPUEsdD1BKTthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIEQoZSxnLGgsbCl7dmFyIGs9bmIoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGspdGhyb3cgRXJyb3IodSgxNTApKTtoPWsuY2FsbChoKTtcbmlmKG51bGw9PWgpdGhyb3cgRXJyb3IodSgxNTEpKTtmb3IodmFyIG09az1udWxsLHQ9Zyx5PWc9MCxBPW51bGwscT1oLm5leHQoKTtudWxsIT09dCYmIXEuZG9uZTt5KysscT1oLm5leHQoKSl7dC5pbmRleD55PyhBPXQsdD1udWxsKTpBPXQuc2libGluZzt2YXIgRD14KGUsdCxxLnZhbHVlLGwpO2lmKG51bGw9PT1EKXtudWxsPT09dCYmKHQ9QSk7YnJlYWt9YSYmdCYmbnVsbD09PUQuYWx0ZXJuYXRlJiZiKGUsdCk7Zz1mKEQsZyx5KTtudWxsPT09bT9rPUQ6bS5zaWJsaW5nPUQ7bT1EO3Q9QX1pZihxLmRvbmUpcmV0dXJuIGMoZSx0KSxrO2lmKG51bGw9PT10KXtmb3IoOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT1wKGUscS52YWx1ZSxsKSxudWxsIT09cSYmKGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7cmV0dXJuIGt9Zm9yKHQ9ZChlLHQpOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT16KHQsZSx5LHEudmFsdWUsbCksbnVsbCE9PXEmJihhJiZudWxsIT09XG5xLmFsdGVybmF0ZSYmdC5kZWxldGUobnVsbD09PXEua2V5P3k6cS5rZXkpLGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7YSYmdC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4ga31yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YWImJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgWmE6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT1hYil7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxcbmsuc2libGluZyk7ZD1lKGssZi5wcm9wcyk7ZC5yZWY9UGcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1hYj8oZD1XZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VWcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UGcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlICRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPVxuZC5zaWJsaW5nfWQ9VmcoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VGcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoT2coZikpcmV0dXJuIGNhKGEsZCxmLGgpO2lmKG5iKGYpKXJldHVybiBEKGEsZCxmLGgpO2wmJlFnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6dGhyb3cgYT1hLnR5cGUsRXJyb3IodSgxNTIsYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBYZz1SZyghMCksWWc9UmcoITEpLFpnPXt9LCRnPXtjdXJyZW50OlpnfSxhaD17Y3VycmVudDpaZ30sYmg9e2N1cnJlbnQ6Wmd9O1xuZnVuY3Rpb24gY2goYSl7aWYoYT09PVpnKXRocm93IEVycm9yKHUoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZGgoYSxiKXtJKGJoLGIpO0koYWgsYSk7SSgkZyxaZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpPYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9T2IoYixhKX1IKCRnKTtJKCRnLGIpfWZ1bmN0aW9uIGVoKCl7SCgkZyk7SChhaCk7SChiaCl9ZnVuY3Rpb24gZmgoYSl7Y2goYmguY3VycmVudCk7dmFyIGI9Y2goJGcuY3VycmVudCk7dmFyIGM9T2IoYixhLnR5cGUpO2IhPT1jJiYoSShhaCxhKSxJKCRnLGMpKX1mdW5jdGlvbiBnaChhKXthaC5jdXJyZW50PT09YSYmKEgoJGcpLEgoYWgpKX12YXIgTT17Y3VycmVudDowfTtcbmZ1bmN0aW9uIGhoKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fGMuZGF0YT09PUJkfHxjLmRhdGE9PT1DZCkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH1mdW5jdGlvbiBpaChhLGIpe3JldHVybntyZXNwb25kZXI6YSxwcm9wczpifX1cbnZhciBqaD1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGtoPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLGxoPTAsTj1udWxsLE89bnVsbCxQPW51bGwsbWg9ITE7ZnVuY3Rpb24gUSgpe3Rocm93IEVycm9yKHUoMzIxKSk7fWZ1bmN0aW9uIG5oKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoISRlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBvaChhLGIsYyxkLGUsZil7bGg9ZjtOPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IuZXhwaXJhdGlvblRpbWU9MDtqaC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP3BoOnFoO2E9YyhkLGUpO2lmKGIuZXhwaXJhdGlvblRpbWU9PT1saCl7Zj0wO2Rve2IuZXhwaXJhdGlvblRpbWU9MDtpZighKDI1PmYpKXRocm93IEVycm9yKHUoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7amguY3VycmVudD1yaDthPWMoZCxlKX13aGlsZShiLmV4cGlyYXRpb25UaW1lPT09bGgpfWpoLmN1cnJlbnQ9c2g7Yj1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtsaD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYoYil0aHJvdyBFcnJvcih1KDMwMCkpO3JldHVybiBhfVxuZnVuY3Rpb24gdGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWE7cmV0dXJuIFB9ZnVuY3Rpb24gdWgoKXtpZihudWxsPT09Tyl7dmFyIGE9Ti5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Ty5uZXh0O3ZhciBiPW51bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZTpQLm5leHQ7aWYobnVsbCE9PWIpUD1iLE89YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzEwKSk7Tz1hO2E9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxiYXNlUXVldWU6Ty5iYXNlUXVldWUscXVldWU6Ty5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YX1yZXR1cm4gUH1cbmZ1bmN0aW9uIHZoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gd2goYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1PLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsuZXhwaXJhdGlvblRpbWU7aWYobDxsaCl7dmFyIG09e2V4cGlyYXRpb25UaW1lOmsuZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1tLGY9ZCk6aD1oLm5leHQ9bTtsPk4uZXhwaXJhdGlvblRpbWUmJlxuKE4uZXhwaXJhdGlvblRpbWU9bCxCZyhsKSl9ZWxzZSBudWxsIT09aCYmKGg9aC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxBZyhsLGsuc3VzcGVuc2VDb25maWcpLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2s9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nOyRlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiB4aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7JGUoZixiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIHloKGEpe3ZhciBiPXRoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOnZoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfWZ1bmN0aW9uIEFoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEJoKCl7cmV0dXJuIHVoKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBDaChhLGIsYyxkKXt2YXIgZT10aCgpO04uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfWZ1bmN0aW9uIERoKGEsYixjLGQpe3ZhciBlPXVoKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmbmgoZCxnLmRlcHMpKXtBaChiLGMsZixkKTtyZXR1cm59fU4uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIEVoKGEsYil7cmV0dXJuIENoKDUxNiw0LGEsYil9ZnVuY3Rpb24gRmgoYSxiKXtyZXR1cm4gRGgoNTE2LDQsYSxiKX1mdW5jdGlvbiBHaChhLGIpe3JldHVybiBEaCg0LDIsYSxiKX1cbmZ1bmN0aW9uIEhoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gSWgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBEaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gSmgoKXt9ZnVuY3Rpb24gS2goYSxiKXt0aCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIExoKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gTWgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gTmgoYSxiLGMpe3ZhciBkPWFnKCk7Y2coOTg+ZD85ODpkLGZ1bmN0aW9uKCl7YSghMCl9KTtjZyg5NzxkPzk3OmQsZnVuY3Rpb24oKXt2YXIgZD1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7YSghMSksYygpfWZpbmFsbHl7a2guc3VzcGVuc2U9ZH19KX1cbmZ1bmN0aW9uIHpoKGEsYixjKXt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT17ZXhwaXJhdGlvblRpbWU6ZCxzdXNwZW5zZUNvbmZpZzplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBmPWIucGVuZGluZztudWxsPT09Zj9lLm5leHQ9ZTooZS5uZXh0PWYubmV4dCxmLm5leHQ9ZSk7Yi5wZW5kaW5nPWU7Zj1hLmFsdGVybmF0ZTtpZihhPT09Tnx8bnVsbCE9PWYmJmY9PT1OKW1oPSEwLGUuZXhwaXJhdGlvblRpbWU9bGgsTi5leHBpcmF0aW9uVGltZT1saDtlbHNle2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWZ8fDA9PT1mLmV4cGlyYXRpb25UaW1lKSYmKGY9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1mKSl0cnl7dmFyIGc9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxoPWYoZyxjKTtlLmVhZ2VyUmVkdWNlcj1mO2UuZWFnZXJTdGF0ZT1oO2lmKCRlKGgsZykpcmV0dXJufWNhdGNoKGspe31maW5hbGx5e31JZyhhLFxuZCl9fVxudmFyIHNoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VSZXNwb25kZXI6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRfSxwaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6S2gsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIENoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIENoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxcbmJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj10aCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTp5aCx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eWgoYSksZD1jWzBdLGU9Y1sxXTtFaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9XG5jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXloKCExKSxjPWJbMF07Yj1iWzFdO3JldHVybltLaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxxaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOndoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB3aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz13aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1cbndoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxyaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOnhoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB4aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz14aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj14aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLFxuYixhKSxbYixhXSksY119fSxPaD1udWxsLFBoPW51bGwsUWg9ITE7ZnVuY3Rpb24gUmgoYSxiKXt2YXIgYz1TaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfVxuZnVuY3Rpb24gVGgoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFVoKGEpe2lmKFFoKXt2YXIgYj1QaDtpZihiKXt2YXIgYz1iO2lmKCFUaChhLGIpKXtiPUpkKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhVGgoYSxiKSl7YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MjtRaD0hMTtPaD1hO3JldHVybn1SaChPaCxjKX1PaD1hO1BoPUpkKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyLFFoPSExLE9oPWF9fWZ1bmN0aW9uIFZoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtPaD1hfVxuZnVuY3Rpb24gV2goYSl7aWYoYSE9PU9oKXJldHVybiExO2lmKCFRaClyZXR1cm4gVmgoYSksUWg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFHZChiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9UGg7YjspUmgoYSxiKSxiPUpkKGIubmV4dFNpYmxpbmcpO1ZoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IodSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09QWQpe2lmKDA9PT1iKXtQaD1KZChhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlIGMhPT16ZCYmYyE9PUNkJiZjIT09QmR8fGIrK31hPWEubmV4dFNpYmxpbmd9UGg9bnVsbH19ZWxzZSBQaD1PaD9KZChhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKCl7UGg9T2g9bnVsbDtRaD0hMX12YXIgWWg9V2EuUmVhY3RDdXJyZW50T3duZXIscmc9ITE7ZnVuY3Rpb24gUihhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1lnKGIsbnVsbCxjLGQpOlhnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIFpoKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtxZyhiLGUpO2Q9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGFpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhYmkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsY2koYSxiLGcsZCxlLGYpO2E9VWcoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpiZixjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiAkaChhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1TZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGNpKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJmJmKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHJnPSExLGU8Zik/KGIuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSwkaChhLGIsZikpOmRpKGEsYixjLGQsZil9ZnVuY3Rpb24gZWkoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBkaShhLGIsYyxkLGUpe3ZhciBmPUwoYyk/QmY6Si5jdXJyZW50O2Y9Q2YoYixmKTtxZyhiLGUpO2M9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO3FnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxMZyhiLGMsZCksTmcoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCk7dGc9ITE7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9eDt6ZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8eCE9PWt8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXRnfHxLZyhiLGMsaCxkLHgsayxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSx2ZyhhLGIpLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmlnKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCksdGc9ITEsaz1iLm1lbW9pemVkU3RhdGUsZy5zdGF0ZT1rLHpnKGIsZCxnLGUpLHg9Yi5tZW1vaXplZFN0YXRlLGghPT1kfHxrIT09eHx8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKG09dGd8fEtnKGIsYyxoLGQsayx4LGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGwpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1sLGQ9bSk6XG4oXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIGdpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGdpKGEsYixjLGQsZSxmKXtlaShhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmSGYoYixjLCExKSwkaChhLGIsZik7ZD1iLnN0YXRlTm9kZTtZaC5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1YZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVhnKGIsbnVsbCxoLGYpKTpSKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJkhmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9FZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZFZihhLGIuY29udGV4dCwhMSk7ZGgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIGlpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlUaW1lOjB9O1xuZnVuY3Rpb24gamkoYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9TS5jdXJyZW50LGc9ITEsaDsoaD0wIT09KGIuZWZmZWN0VGFnJjY0KSl8fChoPTAhPT0oZiYyKSYmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlKSk7aD8oZz0hMCxiLmVmZmVjdFRhZyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZS5mYWxsYmFja3x8ITA9PT1lLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZnw9MSk7SShNLGYmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWUuZmFsbGJhY2smJlVoKGIpO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49XG5iO2Uuc2libGluZz1jO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9ZD1lLmNoaWxkcmVuO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVlnKGIsbnVsbCxkLGMpfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2E9YS5jaGlsZDtkPWEuc2libGluZztpZihnKXtlPWUuZmFsbGJhY2s7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtjLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09YS5jaGlsZCkpZm9yKGMuY2hpbGQ9ZztudWxsIT09ZzspZy5yZXR1cm49YyxnPWcuc2libGluZztkPVNnKGQsZSk7ZC5yZXR1cm49YjtjLnNpYmxpbmc9ZDtjLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1jO3JldHVybiBkfWM9WGcoYixhLmNoaWxkLGUuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9XG5jfWE9YS5jaGlsZDtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2UuY2hpbGQ9YTtudWxsIT09YSYmKGEucmV0dXJuPWUpO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPWI7ZS5zaWJsaW5nPWM7Yy5lZmZlY3RUYWd8PTI7ZS5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31iLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1YZyhiLGEsZS5jaGlsZHJlbixjKX1cbmZ1bmN0aW9uIGtpKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTtwZyhhLnJldHVybixiKX1mdW5jdGlvbiBsaShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxFeHBpcmF0aW9uOjAsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbEV4cGlyYXRpb249MCxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtSKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZWZmZWN0VGFnfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJmtpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKWtpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoTSxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aGgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTtsaShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1oaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9bGkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOmxpKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiAkaChhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTswIT09ZCYmQmcoZCk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHUoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1TZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXZhciBuaSxvaSxwaSxxaTtcbm5pPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtvaT1mdW5jdGlvbigpe307XG5waT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7Y2goJGcuY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXpiKGcsZik7ZD16YihnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9R2IoZyxmKTtkPUdiKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9SWIoZyxmKTtkPUliKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9c2QpfW9kKGMsZCk7dmFyIGgsaztjPW51bGw7Zm9yKGggaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShoKSYmZi5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZltoXSlpZihcInN0eWxlXCI9PT1cbmgpZm9yKGsgaW4gZz1mW2hdLGcpZy5oYXNPd25Qcm9wZXJ0eShrKSYmKGN8fChjPXt9KSxjW2tdPVwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1oJiZcImNoaWxkcmVuXCIhPT1oJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGgsbnVsbCkpO2ZvcihoIGluIGQpe3ZhciBsPWRbaF07Zz1udWxsIT1mP2ZbaF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoaCkmJmwhPT1nJiYobnVsbCE9bHx8bnVsbCE9ZykpaWYoXCJzdHlsZVwiPT09aClpZihnKXtmb3IoayBpbiBnKSFnLmhhc093blByb3BlcnR5KGspfHxsJiZsLmhhc093blByb3BlcnR5KGspfHwoY3x8KGM9e30pLGNba109XCJcIik7Zm9yKGsgaW4gbClsLmhhc093blByb3BlcnR5KGspJiZnW2tdIT09bFtrXSYmKGN8fChjPXt9KSxcbmNba109bFtrXSl9ZWxzZSBjfHwoYXx8KGE9W10pLGEucHVzaChoLGMpKSxjPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGw9bD9sLl9faHRtbDp2b2lkIDAsZz1nP2cuX19odG1sOnZvaWQgMCxudWxsIT1sJiZnIT09bCYmKGE9YXx8W10pLnB1c2goaCxsKSk6XCJjaGlsZHJlblwiPT09aD9nPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGgsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT8obnVsbCE9bCYmcmQoZSxoKSxhfHxnPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChoLGwpKX1jJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsYyk7ZT1hO2lmKGIudXBkYXRlUXVldWU9ZSliLmVmZmVjdFRhZ3w9NH19O1xucWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmVmZmVjdFRhZ3w9NCl9O2Z1bmN0aW9uIHJpKGEsYil7c3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIHNpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAzOnJldHVybiBlaCgpLEgoSyksSChKKSxjPWIuc3RhdGVOb2RlLGMucGVuZGluZ0NvbnRleHQmJihjLmNvbnRleHQ9Yy5wZW5kaW5nQ29udGV4dCxjLnBlbmRpbmdDb250ZXh0PW51bGwpLG51bGwhPT1hJiZudWxsIT09YS5jaGlsZHx8IVdoKGIpfHwoYi5lZmZlY3RUYWd8PTQpLG9pKGIpLG51bGw7Y2FzZSA1OmdoKGIpO2M9Y2goYmguY3VycmVudCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlwaShhLGIsZSxkLGMpLGEucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbnJldHVybiBudWxsfWE9Y2goJGcuY3VycmVudCk7aWYoV2goYikpe2Q9Yi5zdGF0ZU5vZGU7ZT1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbTWRdPWI7ZFtOZF09Zjtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxhYy5sZW5ndGg7YSsrKUYoYWNbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGQpO0YoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixkKTtGKFwic3VibWl0XCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoZCxmKTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoZCxmKSxGKFwiaW52YWxpZFwiLGQpLHJkKGMsXCJvbkNoYW5nZVwiKX1vZChlLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilpZihmLmhhc093blByb3BlcnR5KGcpKXt2YXIgaD1mW2ddO1wiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBoP2QudGV4dENvbnRlbnQhPT1oJiYoYT1bXCJjaGlsZHJlblwiLGhdKTpcIm51bWJlclwiPT09dHlwZW9mIGgmJmQudGV4dENvbnRlbnQhPT1cIlwiK2gmJihhPVtcImNoaWxkcmVuXCIsXCJcIitoXSk6dmEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWgmJnJkKGMsZyl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGQpO0ViKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoZCk7TGIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJlxuKGQub25jbGljaz1zZCl9Yz1hO2IudXBkYXRlUXVldWU9YztudWxsIT09YyYmKGIuZWZmZWN0VGFnfD00KX1lbHNle2c9OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7YT09PXFkJiYoYT1OYihlKSk7YT09PXFkP1wic2NyaXB0XCI9PT1lPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoZSx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsZSk7YVtNZF09YjthW05kXT1kO25pKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXBkKGUsZCk7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixcbmEpO2g9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWMubGVuZ3RoO2grKylGKGFjW2hdLGEpO2g9ZDticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGEpO0YoXCJsb2FkXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsYSk7RihcInN1Ym1pdFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoYSxkKTtoPXpiKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9R2IoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2g9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihhLFxuZCk7aD1JYihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1kfW9kKGUsaCk7dmFyIGs9aDtmb3IoZiBpbiBrKWlmKGsuaGFzT3duUHJvcGVydHkoZikpe3ZhciBsPWtbZl07XCJzdHlsZVwiPT09Zj9tZChhLGwpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmUWIoYSxsKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/KFwidGV4dGFyZWFcIiE9PWV8fFwiXCIhPT1sKSYmUmIoYSxsKTpcIm51bWJlclwiPT09dHlwZW9mIGwmJlJiKGEsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYodmEuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9bCYmcmQoYyxmKTpudWxsIT1sJiZYYShhLGYsbCxnKSl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGEpO0ViKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihhKTtMYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrcmIoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtjPWQudmFsdWU7bnVsbCE9Yz9IYihhLCEhZC5tdWx0aXBsZSxjLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmSGIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKGEub25jbGljaz1zZCl9RmQoZSxkKSYmKGIuZWZmZWN0VGFnfD00KX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5jPWNoKGJoLmN1cnJlbnQpO2NoKCRnLmN1cnJlbnQpO1doKGIpPyhjPWIuc3RhdGVOb2RlLGQ9Yi5tZW1vaXplZFByb3BzLGNbTWRdPWIsYy5ub2RlVmFsdWUhPT1kJiYoYi5lZmZlY3RUYWd8PTQpKTooYz0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGNbTWRdPWIsYi5zdGF0ZU5vZGU9Yyl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWMsYjtjPW51bGwhPT1kO2Q9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZXaChiKTooZT1hLm1lbW9pemVkU3RhdGUsZD1udWxsIT09ZSxjfHxudWxsPT09ZXx8KGU9YS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoZj1iLmZpcnN0RWZmZWN0LG51bGwhPT1mPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWYpOihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1cbmUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKSk7aWYoYyYmIWQmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShNLmN1cnJlbnQmMSkpUz09PXRpJiYoUz11aSk7ZWxzZXtpZihTPT09dGl8fFM9PT11aSlTPXZpOzAhPT13aSYmbnVsbCE9PVQmJih4aShULFUpLHlpKFQsd2kpKX1pZihjfHxkKWIuZWZmZWN0VGFnfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxvaShiKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAxOTpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2U9MCE9PShiLmVmZmVjdFRhZyY2NCk7Zj1kLnJlbmRlcmluZztpZihudWxsPT09ZilpZihlKXJpKGQsITEpO2Vsc2V7aWYoUyE9PXRpfHxudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyZcbjY0KSlmb3IoZj1iLmNoaWxkO251bGwhPT1mOyl7YT1oaChmKTtpZihudWxsIT09YSl7Yi5lZmZlY3RUYWd8PTY0O3JpKGQsITEpO2U9YS51cGRhdGVRdWV1ZTtudWxsIT09ZSYmKGIudXBkYXRlUXVldWU9ZSxiLmVmZmVjdFRhZ3w9NCk7bnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtmb3IoZD1iLmNoaWxkO251bGwhPT1kOyllPWQsZj1jLGUuZWZmZWN0VGFnJj0yLGUubmV4dEVmZmVjdD1udWxsLGUuZmlyc3RFZmZlY3Q9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCxhPWUuYWx0ZXJuYXRlLG51bGw9PT1hPyhlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxlLmV4cGlyYXRpb25UaW1lPWYsZS5jaGlsZD1udWxsLGUubWVtb2l6ZWRQcm9wcz1udWxsLGUubWVtb2l6ZWRTdGF0ZT1udWxsLGUudXBkYXRlUXVldWU9bnVsbCxlLmRlcGVuZGVuY2llcz1udWxsKTooZS5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZSxcbmUuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSxlLmNoaWxkPWEuY2hpbGQsZS5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcyxlLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlLGUudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxmPWEuZGVwZW5kZW5jaWVzLGUuZGVwZW5kZW5jaWVzPW51bGw9PT1mP251bGw6e2V4cGlyYXRpb25UaW1lOmYuZXhwaXJhdGlvblRpbWUsZmlyc3RDb250ZXh0OmYuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Zi5yZXNwb25kZXJzfSksZD1kLnNpYmxpbmc7SShNLE0uY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWY9Zi5zaWJsaW5nfX1lbHNle2lmKCFlKWlmKGE9aGgoZiksbnVsbCE9PWEpe2lmKGIuZWZmZWN0VGFnfD02NCxlPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmVmZmVjdFRhZ3w9NCkscmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFmLmFsdGVybmF0ZSlyZXR1cm4gYj1cbmIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqJGYoKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5kLnRhaWxFeHBpcmF0aW9uJiYxPGMmJihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxyaShkLCExKSxiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT1jLTEpO2QuaXNCYWNrd2FyZHM/KGYuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zik6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1mOmIuY2hpbGQ9ZixkLmxhc3Q9Zil9cmV0dXJuIG51bGwhPT1kLnRhaWw/KDA9PT1kLnRhaWxFeHBpcmF0aW9uJiYoZC50YWlsRXhwaXJhdGlvbj0kZigpKzUwMCksYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9JGYoKSxjLnNpYmxpbmc9bnVsbCxiPU0uY3VycmVudCxJKE0sZT9iJjF8MjpiJjEpLGMpOm51bGx9dGhyb3cgRXJyb3IodSgxNTYsXG5iLnRhZykpO31mdW5jdGlvbiB6aShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpMKGEudHlwZSkmJkRmKCk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzplaCgpO0goSyk7SChKKTtiPWEuZWZmZWN0VGFnO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IodSgyODUpKTthLmVmZmVjdFRhZz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gZ2goYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKE0pLGI9YS5lZmZlY3RUYWcsYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChNKSxudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19ZnVuY3Rpb24gQWkoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpxYihiKX19XG52YXIgQmk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gQ2koYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1xYihjKSk7bnVsbCE9PWMmJnBiKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJnBiKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIERpKGEsYil7dHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXtFaShhLGMpfX1mdW5jdGlvbiBGaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtFaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBHaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzppZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBIaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmRlc3Ryb3k7Yy5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1kJiZkKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBJaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmNyZWF0ZTtjLmRlc3Ryb3k9ZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19XG5mdW5jdGlvbiBKaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SWkoMyxjKTtyZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7aWYoYy5lZmZlY3RUYWcmNClpZihudWxsPT09YilhLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczppZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKTthLmNvbXBvbmVudERpZFVwZGF0ZShkLGIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1iPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkNnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9Q2coYyxiLGEpfXJldHVybjtcbmNhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmVmZmVjdFRhZyY0JiZGZChjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJlZjKGMpKSkpO3JldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEtpKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgTGkmJkxpKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgZD1hLm5leHQ7Y2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGE9ZDtkb3t2YXIgYz1hLmRlc3Ryb3k7aWYodm9pZCAwIT09Yyl7dmFyIGc9Yjt0cnl7YygpfWNhdGNoKGgpe0VpKGcsaCl9fWE9YS5uZXh0fXdoaWxlKGEhPT1kKX0pfWJyZWFrO2Nhc2UgMTpGaShiKTtjPWIuc3RhdGVOb2RlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudFdpbGxVbm1vdW50JiZEaShiLGMpO2JyZWFrO2Nhc2UgNTpGaShiKTticmVhaztjYXNlIDQ6TWkoYSxiLGMpfX1cbmZ1bmN0aW9uIE5pKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2EucmV0dXJuPW51bGw7YS5jaGlsZD1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuYWx0ZXJuYXRlPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDtudWxsIT09YiYmTmkoYil9ZnVuY3Rpb24gT2koYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBQaShhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihPaShiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dGhyb3cgRXJyb3IodSgxNjApKTt9Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYxKSk7fWMuZWZmZWN0VGFnJjE2JiYoUmIoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fE9pKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9RaShhLGMsYik6UmkoYSxjLGIpfVxuZnVuY3Rpb24gUWkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPXNkKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFFpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUWkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gUmkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihSaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVJpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIE1pKGEsYixjKXtmb3IodmFyIGQ9YixlPSExLGYsZzs7KXtpZighZSl7ZT1kLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IodSgxNjApKTtmPWUuc3RhdGVOb2RlO3N3aXRjaChlLnRhZyl7Y2FzZSA1Omc9ITE7YnJlYWsgYTtjYXNlIDM6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9ZT1lLnJldHVybn1lPSEwfWlmKDU9PT1kLnRhZ3x8Nj09PWQudGFnKXthOmZvcih2YXIgaD1hLGs9ZCxsPWMsbT1rOzspaWYoS2koaCxtLGwpLG51bGwhPT1tLmNoaWxkJiY0IT09bS50YWcpbS5jaGlsZC5yZXR1cm49bSxtPW0uY2hpbGQ7ZWxzZXtpZihtPT09aylicmVhayBhO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoS2koYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIFNpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjpIaSgzLGIpO3JldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1tOZF09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmQmIoYyxkKTtwZChhLGUpO2I9cGQoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP21kKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9RYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/UmIoYyxoKTpYYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6Q2IoYyxkKTticmVhaztcbmNhc2UgXCJ0ZXh0YXJlYVwiOktiKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsYT1kLnZhbHVlLG51bGwhPWE/SGIoYywhIWQubXVsdGlwbGUsYSwhMSk6YiE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP0hiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpIYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmI9Yi5zdGF0ZU5vZGU7Yi5oeWRyYXRlJiYoYi5oeWRyYXRlPSExLFZjKGIuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOmM9YjtudWxsPT09Yi5tZW1vaXplZFN0YXRlP1xuZD0hMTooZD0hMCxjPWIuY2hpbGQsVGk9JGYoKSk7aWYobnVsbCE9PWMpYTpmb3IoYT1jOzspe2lmKDU9PT1hLnRhZylmPWEuc3RhdGVOb2RlLGQ/KGY9Zi5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGY9YS5zdGF0ZU5vZGUsZT1hLm1lbW9pemVkUHJvcHMuc3R5bGUsZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGwsZi5zdHlsZS5kaXNwbGF5PWxkKFwiZGlzcGxheVwiLGUpKTtlbHNlIGlmKDY9PT1hLnRhZylhLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmEubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09YS50YWcmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGw9PT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7Zj1hLmNoaWxkLnNpYmxpbmc7Zi5yZXR1cm49YTthPVxuZjtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YylicmVhaztmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YylicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31VaShiKTtyZXR1cm47Y2FzZSAxOTpVaShiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9ZnVuY3Rpb24gVWkoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgQmkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1WaS5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbnZhciBXaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBYaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1lpfHwoWWk9ITAsWmk9ZCk7Q2koYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiAkaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtDaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09YWo/YWo9bmV3IFNldChbdGhpc10pOmFqLmFkZCh0aGlzKSxDaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbnZhciBiaj1NYXRoLmNlaWwsY2o9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixkaj1XYS5SZWFjdEN1cnJlbnRPd25lcixWPTAsZWo9OCxmaj0xNixnaj0zMix0aT0wLGhqPTEsaWo9Mix1aT0zLHZpPTQsamo9NSxXPVYsVD1udWxsLFg9bnVsbCxVPTAsUz10aSxraj1udWxsLGxqPTEwNzM3NDE4MjMsbWo9MTA3Mzc0MTgyMyxuaj1udWxsLHdpPTAsb2o9ITEsVGk9MCxwaj01MDAsWT1udWxsLFlpPSExLFppPW51bGwsYWo9bnVsbCxxaj0hMSxyaj1udWxsLHNqPTkwLHRqPW51bGwsdWo9MCx2aj1udWxsLHdqPTA7ZnVuY3Rpb24gR2coKXtyZXR1cm4oVyYoZmp8Z2opKSE9PVY/MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKTowIT09d2o/d2o6d2o9MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKX1cbmZ1bmN0aW9uIEhnKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9YWcoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFcmZmopIT09VilyZXR1cm4gVTtpZihudWxsIT09YylhPWhnKGEsYy50aW1lb3V0TXN8MHx8NUUzLDI1MCk7ZWxzZSBzd2l0Y2goZCl7Y2FzZSA5OTphPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA5ODphPWhnKGEsMTUwLDEwMCk7YnJlYWs7Y2FzZSA5NzpjYXNlIDk2OmE9aGcoYSw1RTMsMjUwKTticmVhaztjYXNlIDk1OmE9MjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI2KSk7fW51bGwhPT1UJiZhPT09VSYmLS1hO3JldHVybiBhfVxuZnVuY3Rpb24gSWcoYSxiKXtpZig1MDx1ail0aHJvdyB1aj0wLHZqPW51bGwsRXJyb3IodSgxODUpKTthPXhqKGEsYik7aWYobnVsbCE9PWEpe3ZhciBjPWFnKCk7MTA3Mzc0MTgyMz09PWI/KFcmZWopIT09ViYmKFcmKGZqfGdqKSk9PT1WP3lqKGEpOihaKGEpLFc9PT1WJiZnZygpKTpaKGEpOyhXJjQpPT09Vnx8OTghPT1jJiY5OSE9PWN8fChudWxsPT09dGo/dGo9bmV3IE1hcChbW2EsYl1dKTooYz10ai5nZXQoYSksKHZvaWQgMD09PWN8fGM+YikmJnRqLnNldChhLGIpKSl9fVxuZnVuY3Rpb24geGooYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1udWxsIT09ZSYmKFQ9PT1lJiYoQmcoYiksUz09PXZpJiZ4aShlLFUpKSx5aShlLGIpKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIHpqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2lmKDAhPT1iKXJldHVybiBiO2I9YS5maXJzdFBlbmRpbmdUaW1lO2lmKCFBaihhLGIpKXJldHVybiBiO3ZhciBjPWEubGFzdFBpbmdlZFRpbWU7YT1hLm5leHRLbm93blBlbmRpbmdMZXZlbDthPWM+YT9jOmE7cmV0dXJuIDI+PWEmJmIhPT1hPzA6YX1cbmZ1bmN0aW9uIFooYSl7aWYoMCE9PWEubGFzdEV4cGlyZWRUaW1lKWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGEuY2FsbGJhY2tQcmlvcml0eT05OSxhLmNhbGxiYWNrTm9kZT1lZyh5ai5iaW5kKG51bGwsYSkpO2Vsc2V7dmFyIGI9emooYSksYz1hLmNhbGxiYWNrTm9kZTtpZigwPT09YiludWxsIT09YyYmKGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTAsYS5jYWxsYmFja1ByaW9yaXR5PTkwKTtlbHNle3ZhciBkPUdnKCk7MTA3Mzc0MTgyMz09PWI/ZD05OToxPT09Ynx8Mj09PWI/ZD05NTooZD0xMCooMTA3Mzc0MTgyMS1iKS0xMCooMTA3Mzc0MTgyMS1kKSxkPTA+PWQ/OTk6MjUwPj1kPzk4OjUyNTA+PWQ/OTc6OTUpO2lmKG51bGwhPT1jKXt2YXIgZT1hLmNhbGxiYWNrUHJpb3JpdHk7aWYoYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPT09YiYmZT49ZClyZXR1cm47YyE9PVRmJiZLZihjKX1hLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9XG5iO2EuY2FsbGJhY2tQcmlvcml0eT1kO2I9MTA3Mzc0MTgyMz09PWI/ZWcoeWouYmluZChudWxsLGEpKTpkZyhkLEJqLmJpbmQobnVsbCxhKSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMS1iKS0kZigpfSk7YS5jYWxsYmFja05vZGU9Yn19fVxuZnVuY3Rpb24gQmooYSxiKXt3aj0wO2lmKGIpcmV0dXJuIGI9R2coKSxDaihhLGIpLFooYSksbnVsbDt2YXIgYz16aihhKTtpZigwIT09Yyl7Yj1hLmNhbGxiYWNrTm9kZTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZjPT09VXx8RWooYSxjKTtpZihudWxsIT09WCl7dmFyIGQ9VztXfD1majt2YXIgZT1GaigpO2RvIHRyeXtHaigpO2JyZWFrfWNhdGNoKGgpe0hqKGEsaCl9d2hpbGUoMSk7bmcoKTtXPWQ7Y2ouY3VycmVudD1lO2lmKFM9PT1oail0aHJvdyBiPWtqLEVqKGEsYykseGkoYSxjKSxaKGEpLGI7aWYobnVsbD09PVgpc3dpdGNoKGU9YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZSxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YyxkPVMsVD1udWxsLGQpe2Nhc2UgdGk6Y2FzZSBoajp0aHJvdyBFcnJvcih1KDM0NSkpO2Nhc2UgaWo6Q2ooYSwyPGM/MjpjKTticmVhaztjYXNlIHVpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO1xuYz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYoMTA3Mzc0MTgyMz09PWxqJiYoZT1UaStwai0kZigpLDEwPGUpKXtpZihvail7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9fWY9emooYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZSk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSB2aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZihvaiYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09ZXx8ZT49Yykpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfWU9emooYSk7aWYoMCE9PWUmJmUhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1cbmQ7YnJlYWt9MTA3Mzc0MTgyMyE9PW1qP2Q9MTAqKDEwNzM3NDE4MjEtbWopLSRmKCk6MTA3Mzc0MTgyMz09PWxqP2Q9MDooZD0xMCooMTA3Mzc0MTgyMS1saiktNUUzLGU9JGYoKSxjPTEwKigxMDczNzQxODIxLWMpLWUsZD1lLWQsMD5kJiYoZD0wKSxkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKmJqKGQvMTk2MCkpLWQsYzxkJiYoZD1jKSk7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha31KaihhKTticmVhaztjYXNlIGpqOmlmKDEwNzM3NDE4MjMhPT1saiYmbnVsbCE9PW5qKXtmPWxqO3ZhciBnPW5qO2Q9Zy5idXN5TWluRHVyYXRpb25Nc3wwOzA+PWQ/ZD0wOihlPWcuYnVzeURlbGF5TXN8MCxmPSRmKCktKDEwKigxMDczNzQxODIxLWYpLShnLnRpbWVvdXRNc3wwfHw1RTMpKSxkPWY8PWU/MDplK2QtZik7aWYoMTA8ZCl7eGkoYSxjKTthLnRpbWVvdXRIYW5kbGU9XG5IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9fUpqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIEJqLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiB5aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZiPT09VXx8RWooYSxiKTtpZihudWxsIT09WCl7dmFyIGM9VztXfD1majt2YXIgZD1GaigpO2RvIHRyeXtLaigpO2JyZWFrfWNhdGNoKGUpe0hqKGEsZSl9d2hpbGUoMSk7bmcoKTtXPWM7Y2ouY3VycmVudD1kO2lmKFM9PT1oail0aHJvdyBjPWtqLEVqKGEsYikseGkoYSxiKSxaKGEpLGM7aWYobnVsbCE9PVgpdGhyb3cgRXJyb3IodSgyNjEpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1iO1Q9bnVsbDtKaihhKTtaKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIExqKCl7aWYobnVsbCE9PXRqKXt2YXIgYT10ajt0aj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhLGMpe0NqKGMsYSk7WihjKX0pO2dnKCl9fVxuZnVuY3Rpb24gTWooYSxiKXt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1mdW5jdGlvbiBOaihhLGIpe3ZhciBjPVc7VyY9LTI7V3w9ZWo7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1cbmZ1bmN0aW9uIEVqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLElkKGMpKTtpZihudWxsIT09WClmb3IoYz1YLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkRmKCk7YnJlYWs7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2JyZWFrO2Nhc2UgNTpnaChkKTticmVhaztjYXNlIDQ6ZWgoKTticmVhaztjYXNlIDEzOkgoTSk7YnJlYWs7Y2FzZSAxOTpIKE0pO2JyZWFrO2Nhc2UgMTA6b2coZCl9Yz1jLnJldHVybn1UPWE7WD1TZyhhLmN1cnJlbnQsbnVsbCk7VT1iO1M9dGk7a2o9bnVsbDttaj1saj0xMDczNzQxODIzO25qPW51bGw7d2k9MDtvaj0hMX1cbmZ1bmN0aW9uIEhqKGEsYil7ZG97dHJ5e25nKCk7amguY3VycmVudD1zaDtpZihtaClmb3IodmFyIGM9Ti5tZW1vaXplZFN0YXRlO251bGwhPT1jOyl7dmFyIGQ9Yy5xdWV1ZTtudWxsIT09ZCYmKGQucGVuZGluZz1udWxsKTtjPWMubmV4dH1saD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYobnVsbD09PVh8fG51bGw9PT1YLnJldHVybilyZXR1cm4gUz1oaixraj1iLFg9bnVsbDthOnt2YXIgZT1hLGY9WC5yZXR1cm4sZz1YLGg9YjtiPVU7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5maXJzdEVmZmVjdD1nLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09aCYmXCJvYmplY3RcIj09PXR5cGVvZiBoJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC50aGVuKXt2YXIgaz1oO2lmKDA9PT0oZy5tb2RlJjIpKXt2YXIgbD1nLmFsdGVybmF0ZTtsPyhnLnVwZGF0ZVF1ZXVlPWwudXBkYXRlUXVldWUsZy5tZW1vaXplZFN0YXRlPWwubWVtb2l6ZWRTdGF0ZSxnLmV4cGlyYXRpb25UaW1lPWwuZXhwaXJhdGlvblRpbWUpOihnLnVwZGF0ZVF1ZXVlPVxubnVsbCxnLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIG09MCE9PShNLmN1cnJlbnQmMSkscD1mO2Rve3ZhciB4O2lmKHg9MTM9PT1wLnRhZyl7dmFyIHo9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT16KXg9bnVsbCE9PXouZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciBjYT1wLm1lbW9pemVkUHJvcHM7eD12b2lkIDA9PT1jYS5mYWxsYmFjaz8hMTohMCE9PWNhLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOm0/ITE6ITB9fWlmKHgpe3ZhciBEPXAudXBkYXRlUXVldWU7aWYobnVsbD09PUQpe3ZhciB0PW5ldyBTZXQ7dC5hZGQoayk7cC51cGRhdGVRdWV1ZT10fWVsc2UgRC5hZGQoayk7aWYoMD09PShwLm1vZGUmMikpe3AuZWZmZWN0VGFnfD02NDtnLmVmZmVjdFRhZyY9LTI5ODE7aWYoMT09PWcudGFnKWlmKG51bGw9PT1nLmFsdGVybmF0ZSlnLnRhZz0xNztlbHNle3ZhciB5PXdnKDEwNzM3NDE4MjMsbnVsbCk7eS50YWc9Mjt4ZyhnLHkpfWcuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztcbmJyZWFrIGF9aD12b2lkIDA7Zz1iO3ZhciBBPWUucGluZ0NhY2hlO251bGw9PT1BPyhBPWUucGluZ0NhY2hlPW5ldyBXaSxoPW5ldyBTZXQsQS5zZXQoayxoKSk6KGg9QS5nZXQoayksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxBLnNldChrLGgpKSk7aWYoIWguaGFzKGcpKXtoLmFkZChnKTt2YXIgcT1Pai5iaW5kKG51bGwsZSxrLGcpO2sudGhlbihxLHEpfXAuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2g9RXJyb3IoKHBiKGcudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitxYihnKSl9UyE9PVxuamomJihTPWlqKTtoPUFpKGgsZyk7cD1mO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOms9aDtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIEI9WGkocCxrLGIpO3lnKHAsQik7YnJlYWsgYTtjYXNlIDE6az1oO3ZhciB3PXAudHlwZSx1Yj1wLnN0YXRlTm9kZTtpZigwPT09KHAuZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXViJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgdWIuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXModWIpKSkpe3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgdmI9JGkocCxrLGIpO3lnKHAsdmIpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVg9UGooWCl9Y2F0Y2goWGMpe2I9WGM7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBGaigpe3ZhciBhPWNqLmN1cnJlbnQ7Y2ouY3VycmVudD1zaDtyZXR1cm4gbnVsbD09PWE/c2g6YX1mdW5jdGlvbiBBZyhhLGIpe2E8bGomJjI8YSYmKGxqPWEpO251bGwhPT1iJiZhPG1qJiYyPGEmJihtaj1hLG5qPWIpfWZ1bmN0aW9uIEJnKGEpe2E+d2kmJih3aT1hKX1mdW5jdGlvbiBLaigpe2Zvcig7bnVsbCE9PVg7KVg9UWooWCl9ZnVuY3Rpb24gR2ooKXtmb3IoO251bGwhPT1YJiYhVWYoKTspWD1RaihYKX1mdW5jdGlvbiBRaihhKXt2YXIgYj1SaihhLmFsdGVybmF0ZSxhLFUpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9UGooYSkpO2RqLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIFBqKGEpe1g9YTtkb3t2YXIgYj1YLmFsdGVybmF0ZTthPVgucmV0dXJuO2lmKDA9PT0oWC5lZmZlY3RUYWcmMjA0OCkpe2I9c2koYixYLFUpO2lmKDE9PT1VfHwxIT09WC5jaGlsZEV4cGlyYXRpb25UaW1lKXtmb3IodmFyIGM9MCxkPVguY2hpbGQ7bnVsbCE9PWQ7KXt2YXIgZT1kLmV4cGlyYXRpb25UaW1lLGY9ZC5jaGlsZEV4cGlyYXRpb25UaW1lO2U+YyYmKGM9ZSk7Zj5jJiYoYz1mKTtkPWQuc2libGluZ31YLmNoaWxkRXhwaXJhdGlvblRpbWU9Y31pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YSYmMD09PShhLmVmZmVjdFRhZyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxudWxsIT09WC5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVguZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1YLmxhc3RFZmZlY3QpLDE8WC5lZmZlY3RUYWcmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WDphLmZpcnN0RWZmZWN0PVgsYS5sYXN0RWZmZWN0PVgpKX1lbHNle2I9emkoWCk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZWZmZWN0VGFnJj0yMDQ3LGI7bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZWZmZWN0VGFnfD0yMDQ4KX1iPVguc2libGluZztpZihudWxsIT09YilyZXR1cm4gYjtYPWF9d2hpbGUobnVsbCE9PVgpO1M9PT10aSYmKFM9amopO3JldHVybiBudWxsfWZ1bmN0aW9uIElqKGEpe3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7YT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7cmV0dXJuIGI+YT9iOmF9ZnVuY3Rpb24gSmooYSl7dmFyIGI9YWcoKTtjZyg5OSxTai5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBTaihhLGIpe2RvIERqKCk7d2hpbGUobnVsbCE9PXJqKTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yayxkPWEuZmluaXNoZWRFeHBpcmF0aW9uVGltZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IodSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO2EuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wO2EuY2FsbGJhY2tQcmlvcml0eT05MDthLm5leHRLbm93blBlbmRpbmdMZXZlbD0wO3ZhciBlPUlqKGMpO2EuZmlyc3RQZW5kaW5nVGltZT1lO2Q8PWEubGFzdFN1c3BlbmRlZFRpbWU/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmQ8PWEuZmlyc3RTdXNwZW5kZWRUaW1lJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9XG5kLTEpO2Q8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2Q8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCk7YT09PVQmJihYPVQ9bnVsbCxVPTApOzE8Yy5lZmZlY3RUYWc/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxlPWMuZmlyc3RFZmZlY3QpOmU9YzplPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWUpe3ZhciBmPVc7V3w9Z2o7ZGouY3VycmVudD1udWxsO0RkPWZkO3ZhciBnPXhkKCk7aWYoeWQoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpdmFyIGg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2g9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBrPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpO2lmKGsmJjAhPT1rLnJhbmdlQ291bnQpe2g9ay5hbmNob3JOb2RlO3ZhciBsPWsuYW5jaG9yT2Zmc2V0LFxubT1rLmZvY3VzTm9kZTtrPWsuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsbS5ub2RlVHlwZX1jYXRjaCh3Yil7aD1udWxsO2JyZWFrIGF9dmFyIHA9MCx4PS0xLHo9LTEsY2E9MCxEPTAsdD1nLHk9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciBBOzspe3QhPT1ofHwwIT09bCYmMyE9PXQubm9kZVR5cGV8fCh4PXArbCk7dCE9PW18fDAhPT1rJiYzIT09dC5ub2RlVHlwZXx8KHo9cCtrKTszPT09dC5ub2RlVHlwZSYmKHArPXQubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PShBPXQuZmlyc3RDaGlsZCkpYnJlYWs7eT10O3Q9QX1mb3IoOzspe2lmKHQ9PT1nKWJyZWFrIGI7eT09PWgmJisrY2E9PT1sJiYoeD1wKTt5PT09bSYmKytEPT09ayYmKHo9cCk7aWYobnVsbCE9PShBPXQubmV4dFNpYmxpbmcpKWJyZWFrO3Q9eTt5PXQucGFyZW50Tm9kZX10PUF9aD0tMT09PXh8fC0xPT09ej9udWxsOntzdGFydDp4LGVuZDp6fX1lbHNlIGg9bnVsbH1oPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9XG5udWxsO0VkPXthY3RpdmVFbGVtZW50RGV0YWNoZWQ6bnVsbCxmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO1k9ZTtkbyB0cnl7VGooKX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1lO2RvIHRyeXtmb3IoZz1hLGg9YjtudWxsIT09WTspe3ZhciBxPVkuZWZmZWN0VGFnO3EmMTYmJlJiKFkuc3RhdGVOb2RlLFwiXCIpO2lmKHEmMTI4KXt2YXIgQj1ZLmFsdGVybmF0ZTtpZihudWxsIT09Qil7dmFyIHc9Qi5yZWY7bnVsbCE9PXcmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdz93KG51bGwpOncuY3VycmVudD1udWxsKX19c3dpdGNoKHEmMTAzOCl7Y2FzZSAyOlBpKFkpO1kuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgMTAyNDpZLmVmZmVjdFRhZyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlkuZWZmZWN0VGFnJj1cbi0xMDI1O1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgNDpTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDg6bD1ZLE1pKGcsbCxoKSxOaShsKX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO3c9RWQ7Qj14ZCgpO3E9dy5mb2N1c2VkRWxlbTtoPXcuc2VsZWN0aW9uUmFuZ2U7aWYoQiE9PXEmJnEmJnEub3duZXJEb2N1bWVudCYmd2QocS5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxxKSl7bnVsbCE9PWgmJnlkKHEpJiYoQj1oLnN0YXJ0LHc9aC5lbmQsdm9pZCAwPT09dyYmKHc9QiksXCJzZWxlY3Rpb25TdGFydFwiaW4gcT8ocS5zZWxlY3Rpb25TdGFydD1CLHEuc2VsZWN0aW9uRW5kPU1hdGgubWluKHcscS52YWx1ZS5sZW5ndGgpKToodz0oQj1xLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmQi5kZWZhdWx0Vmlld3x8d2luZG93LHcuZ2V0U2VsZWN0aW9uJiZcbih3PXcuZ2V0U2VsZWN0aW9uKCksbD1xLnRleHRDb250ZW50Lmxlbmd0aCxnPU1hdGgubWluKGguc3RhcnQsbCksaD12b2lkIDA9PT1oLmVuZD9nOk1hdGgubWluKGguZW5kLGwpLCF3LmV4dGVuZCYmZz5oJiYobD1oLGg9ZyxnPWwpLGw9dmQocSxnKSxtPXZkKHEsaCksbCYmbSYmKDEhPT13LnJhbmdlQ291bnR8fHcuYW5jaG9yTm9kZSE9PWwubm9kZXx8dy5hbmNob3JPZmZzZXQhPT1sLm9mZnNldHx8dy5mb2N1c05vZGUhPT1tLm5vZGV8fHcuZm9jdXNPZmZzZXQhPT1tLm9mZnNldCkmJihCPUIuY3JlYXRlUmFuZ2UoKSxCLnNldFN0YXJ0KGwubm9kZSxsLm9mZnNldCksdy5yZW1vdmVBbGxSYW5nZXMoKSxnPmg/KHcuYWRkUmFuZ2UoQiksdy5leHRlbmQobS5ub2RlLG0ub2Zmc2V0KSk6KEIuc2V0RW5kKG0ubm9kZSxtLm9mZnNldCksdy5hZGRSYW5nZShCKSkpKSkpO0I9W107Zm9yKHc9cTt3PXcucGFyZW50Tm9kZTspMT09PXcubm9kZVR5cGUmJkIucHVzaCh7ZWxlbWVudDp3LGxlZnQ6dy5zY3JvbGxMZWZ0LFxudG9wOncuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHEuZm9jdXMmJnEuZm9jdXMoKTtmb3IocT0wO3E8Qi5sZW5ndGg7cSsrKXc9QltxXSx3LmVsZW1lbnQuc2Nyb2xsTGVmdD13LmxlZnQsdy5lbGVtZW50LnNjcm9sbFRvcD13LnRvcH1mZD0hIURkO0VkPURkPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocT1hO251bGwhPT1ZOyl7dmFyIHViPVkuZWZmZWN0VGFnO3ViJjM2JiZKaShxLFkuYWx0ZXJuYXRlLFkpO2lmKHViJjEyOCl7Qj12b2lkIDA7dmFyIHZiPVkucmVmO2lmKG51bGwhPT12Yil7dmFyIFhjPVkuc3RhdGVOb2RlO3N3aXRjaChZLnRhZyl7Y2FzZSA1OkI9WGM7YnJlYWs7ZGVmYXVsdDpCPVhjfVwiZnVuY3Rpb25cIj09PXR5cGVvZiB2Yj92YihCKTp2Yi5jdXJyZW50PUJ9fVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1cbm51bGw7VmYoKTtXPWZ9ZWxzZSBhLmN1cnJlbnQ9YztpZihxailxaj0hMSxyaj1hLHNqPWI7ZWxzZSBmb3IoWT1lO251bGwhPT1ZOyliPVkubmV4dEVmZmVjdCxZLm5leHRFZmZlY3Q9bnVsbCxZPWI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7MD09PWImJihhaj1udWxsKTsxMDczNzQxODIzPT09Yj9hPT09dmo/dWorKzoodWo9MCx2aj1hKTp1aj0wO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBVaiYmVWooYy5zdGF0ZU5vZGUsZCk7WihhKTtpZihZaSl0aHJvdyBZaT0hMSxhPVppLFppPW51bGwsYTtpZigoVyZlaikhPT1WKXJldHVybiBudWxsO2dnKCk7cmV0dXJuIG51bGx9ZnVuY3Rpb24gVGooKXtmb3IoO251bGwhPT1ZOyl7dmFyIGE9WS5lZmZlY3RUYWc7MCE9PShhJjI1NikmJkdpKFkuYWx0ZXJuYXRlLFkpOzA9PT0oYSY1MTIpfHxxanx8KHFqPSEwLGRnKDk3LGZ1bmN0aW9uKCl7RGooKTtyZXR1cm4gbnVsbH0pKTtZPVkubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBEaigpe2lmKDkwIT09c2ope3ZhciBhPTk3PHNqPzk3OnNqO3NqPTkwO3JldHVybiBjZyhhLFZqKX19ZnVuY3Rpb24gVmooKXtpZihudWxsPT09cmopcmV0dXJuITE7dmFyIGE9cmo7cmo9bnVsbDtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMzEpKTt2YXIgYj1XO1d8PWdqO2ZvcihhPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09YTspe3RyeXt2YXIgYz1hO2lmKDAhPT0oYy5lZmZlY3RUYWcmNTEyKSlzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpIaSg1LGMpLElpKDUsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7RWkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9Vz1iO2dnKCk7cmV0dXJuITB9XG5mdW5jdGlvbiBXaihhLGIsYyl7Yj1BaShjLGIpO2I9WGkoYSxiLDEwNzM3NDE4MjMpO3hnKGEsYik7YT14aihhLDEwNzM3NDE4MjMpO251bGwhPT1hJiZaKGEpfWZ1bmN0aW9uIEVpKGEsYil7aWYoMz09PWEudGFnKVdqKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7V2ooYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXMoZCkpKXthPUFpKGIsYSk7YT0kaShjLGEsMTA3Mzc0MTgyMyk7eGcoYyxhKTtjPXhqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gT2ooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtUPT09YSYmVT09PWM/Uz09PXZpfHxTPT09dWkmJjEwNzM3NDE4MjM9PT1saiYmJGYoKS1UaTxwaj9FaihhLFUpOm9qPSEwOkFqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxaKGEpKSl9ZnVuY3Rpb24gVmkoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1HZygpLGI9SGcoYixhLG51bGwpKTthPXhqKGEsYik7bnVsbCE9PWEmJlooYSl9dmFyIFJqO1xuUmo9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEpe3ZhciBlPWIucGVuZGluZ1Byb3BzO2lmKGEubWVtb2l6ZWRQcm9wcyE9PWV8fEsuY3VycmVudClyZz0hMDtlbHNle2lmKGQ8Yyl7cmc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6aGkoYik7WGgoKTticmVhaztjYXNlIDU6ZmgoYik7aWYoYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbilyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxudWxsO2JyZWFrO2Nhc2UgMTpMKGIudHlwZSkmJkdmKGIpO2JyZWFrO2Nhc2UgNDpkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7ZT1iLnR5cGUuX2NvbnRleHQ7SShqZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7XG5pZigwIT09ZCYmZD49YylyZXR1cm4gamkoYSxiLGMpO0koTSxNLmN1cnJlbnQmMSk7Yj0kaChhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPWIuY2hpbGRFeHBpcmF0aW9uVGltZT49YztpZigwIT09KGEuZWZmZWN0VGFnJjY0KSl7aWYoZClyZXR1cm4gbWkoYSxiLGMpO2IuZWZmZWN0VGFnfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwpO0koTSxNLmN1cnJlbnQpO2lmKCFkKXJldHVybiBudWxsfXJldHVybiAkaChhLGIsYyl9cmc9ITF9fWVsc2Ugcmc9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9Q2YoYixKLmN1cnJlbnQpO3FnKGIsYyk7ZT1vaChudWxsLFxuYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEwoZCkpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3VnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZGZyhiLGQsZyxhKTtlLnVwZGF0ZXI9Smc7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtOZyhiLGQsYSxjKTtiPWdpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFIobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6YTp7ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9XG5udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7b2IoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7ZT1lLl9yZXN1bHQ7Yi50eXBlPWU7Zj1iLnRhZz1YaihlKTthPWlnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWRpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1maShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPVpoKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9YWkobnVsbCxiLGUsaWcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih1KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGRpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGZpKGEsYixkLGUsYyk7XG5jYXNlIDM6aGkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih1KDI4MikpO2Q9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt2ZyhhLGIpO3pnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpWGgoKSxiPSRoKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlQaD1KZChiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLE9oPWIsZT1RaD0hMDtpZihlKWZvcihjPVlnKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxYaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGZoKGIpLG51bGw9PT1hJiZVaChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOlxubnVsbCxnPWUuY2hpbGRyZW4sR2QoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkdkKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLGVpKGEsYiksYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZVaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGppKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVhnKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLFpoKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLFxuYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShqZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPSRlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFLLmN1cnJlbnQpe2I9JGgoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PVxuayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9d2coYyxudWxsKSxsLnRhZz0yLHhnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9Yyk7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmbC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTtwZyhoLnJldHVybixjKTtrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPVxuZ31SKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHFnKGIsYyksZT1zZyhlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9aWcoZSxiLnBlbmRpbmdQcm9wcyksZj1pZyhlLnR5cGUsZiksYWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGNpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsR2YoYikpOmE9ITEscWcoYixjKSxMZyhiLGQsZSksTmcoYixkLGUsYyksZ2kobnVsbCxcbmIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIFVqPW51bGwsTGk9bnVsbDtmdW5jdGlvbiBZaihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtVaj1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyUm9vdChjLGEsdm9pZCAwLDY0PT09KGEuY3VycmVudC5lZmZlY3RUYWcmNjQpKX1jYXRjaChlKXt9fTtMaT1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfWNhdGNoKGUpe319fWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFpqKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gU2goYSxiLGMsZCl7cmV0dXJuIG5ldyBaaihhLGIsYyxkKX1cbmZ1bmN0aW9uIGJpKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gWGooYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGJpKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1nYilyZXR1cm4gMTE7aWYoYT09PWpiKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFNnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9U2goYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yi5leHBpcmF0aW9uVGltZSxcbmZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmIucmVzcG9uZGVyc307Yy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBVZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpYmkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuIFdnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmI6Zz04O2V8PTc7YnJlYWs7Y2FzZSBiYjpnPTg7ZXw9MTticmVhaztjYXNlIGNiOnJldHVybiBhPVNoKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9Y2IsYS50eXBlPWNiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaGI6cmV0dXJuIGE9U2goMTMsYyxiLGUpLGEudHlwZT1oYixhLmVsZW1lbnRUeXBlPWhiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaWI6cmV0dXJuIGE9U2goMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9aWIsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGRiOmc9XG4xMDticmVhayBhO2Nhc2UgZWI6Zz05O2JyZWFrIGE7Y2FzZSBnYjpnPTExO2JyZWFrIGE7Y2FzZSBqYjpnPTE0O2JyZWFrIGE7Y2FzZSBrYjpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgbGI6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHUoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9U2goZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBXZyhhLGIsYyxkKXthPVNoKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBUZyhhLGIsYyl7YT1TaCg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBWZyhhLGIsYyl7Yj1TaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGFrKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY3VycmVudD1udWxsO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMucGluZ0NhY2hlPXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dGhpcy5maW5pc2hlZFdvcms9bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT05MDt0aGlzLmxhc3RFeHBpcmVkVGltZT10aGlzLmxhc3RQaW5nZWRUaW1lPXRoaXMubmV4dEtub3duUGVuZGluZ0xldmVsPXRoaXMubGFzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFBlbmRpbmdUaW1lPTB9XG5mdW5jdGlvbiBBaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lO2E9YS5sYXN0U3VzcGVuZGVkVGltZTtyZXR1cm4gMCE9PWMmJmM+PWImJmE8PWJ9ZnVuY3Rpb24geGkoYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZSxkPWEubGFzdFN1c3BlbmRlZFRpbWU7YzxiJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9Yik7aWYoZD5ifHwwPT09YylhLmxhc3RTdXNwZW5kZWRUaW1lPWI7Yjw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7Yjw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKX1cbmZ1bmN0aW9uIHlpKGEsYil7Yj5hLmZpcnN0UGVuZGluZ1RpbWUmJihhLmZpcnN0UGVuZGluZ1RpbWU9Yik7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7MCE9PWMmJihiPj1jP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpiPj1hLmxhc3RTdXNwZW5kZWRUaW1lJiYoYS5sYXN0U3VzcGVuZGVkVGltZT1iKzEpLGI+YS5uZXh0S25vd25QZW5kaW5nTGV2ZWwmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1iKSl9ZnVuY3Rpb24gQ2ooYSxiKXt2YXIgYz1hLmxhc3RFeHBpcmVkVGltZTtpZigwPT09Y3x8Yz5iKWEubGFzdEV4cGlyZWRUaW1lPWJ9XG5mdW5jdGlvbiBiayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1HZygpLGc9RGcuc3VzcGVuc2U7Zj1IZyhmLGUsZyk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOntpZihkYyhjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEwoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih1KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihMKGspKXtjPUZmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUFmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9d2coZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1cbmQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTt4ZyhlLGIpO0lnKGUsZik7cmV0dXJuIGZ9ZnVuY3Rpb24gY2soYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBkayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO251bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkJiZhLnJldHJ5VGltZTxiJiYoYS5yZXRyeVRpbWU9Yil9ZnVuY3Rpb24gZWsoYSxiKXtkayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmZGsoYSxiKX1cbmZ1bmN0aW9uIGZrKGEsYixjKXtjPW51bGwhPWMmJiEwPT09Yy5oeWRyYXRlO3ZhciBkPW5ldyBhayhhLGIsYyksZT1TaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7ZC5jdXJyZW50PWU7ZS5zdGF0ZU5vZGU9ZDt1ZyhlKTthW09kXT1kLmN1cnJlbnQ7YyYmMCE9PWImJkpjKGEsOT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQpO3RoaXMuX2ludGVybmFsUm9vdD1kfWZrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7YmsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07ZmsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87YmsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW09kXT1udWxsfSl9O1xuZnVuY3Rpb24gZ2soYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWZ1bmN0aW9uIGhrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgZmsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiBpayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2guY2FsbChhKX19YmsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1oayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtrLmNhbGwoYSl9fU5qKGZ1bmN0aW9uKCl7YmsoYixnLGEsZSl9KX1yZXR1cm4gY2soZyl9ZnVuY3Rpb24gamsoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjokYSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbndjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWhnKEdnKCksMTUwLDEwMCk7SWcoYSxiKTtlayhhLGIpfX07eGM9ZnVuY3Rpb24oYSl7MTM9PT1hLnRhZyYmKElnKGEsMyksZWsoYSwzKSl9O3ljPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUdnKCk7Yj1IZyhiLGEsbnVsbCk7SWcoYSxiKTtlayhhLGIpfX07XG56YT1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1RZChkKTtpZighZSl0aHJvdyBFcnJvcih1KDkwKSk7eWIoZCk7Q2IoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOktiKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZIYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0ZhPU1qO1xuR2E9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1XO1d8PTQ7dHJ5e3JldHVybiBjZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtXPWYsVz09PVYmJmdnKCl9fTtIYT1mdW5jdGlvbigpeyhXJigxfGZqfGdqKSk9PT1WJiYoTGooKSxEaigpKX07SWE9ZnVuY3Rpb24oYSxiKXt2YXIgYz1XO1d8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX07ZnVuY3Rpb24ga2soYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gamsoYSxiLG51bGwsYyl9dmFyIGxrPXtFdmVudHM6W05jLFBkLFFkLHhhLHRhLFhkLGZ1bmN0aW9uKGEpe2pjKGEsV2QpfSxEYSxFYSxpZCxtYyxEaix7Y3VycmVudDohMX1dfTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBZaihuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWhjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dGMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xMy4xXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWxrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPWtrO2V4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1oYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O1xuZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgxODcpKTt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBjZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtXPWMsZ2coKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCEwLGMpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCExLGMpfTtcbmV4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighZ2soYSkpdGhyb3cgRXJyb3IodSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KE5qKGZ1bmN0aW9uKCl7aWsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW09kXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9TWo7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4ga2soYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFnayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcil0aHJvdyBFcnJvcih1KDM4KSk7cmV0dXJuIGlrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xMy4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjE5LjFcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsayxsO1xuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHA9bnVsbCxxPW51bGwsdD1mdW5jdGlvbigpe2lmKG51bGwhPT1wKXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3AoITAsYSk7cD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodCwwKSxiO319LHU9RGF0ZS5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLXV9O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXA/c2V0VGltZW91dChmLDAsYSk6KHA9YSxzZXRUaW1lb3V0KHQsMCkpfTtnPWZ1bmN0aW9uKGEsYil7cT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQocSl9O2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX07bD1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB3PXdpbmRvdy5wZXJmb3JtYW5jZSx4PXdpbmRvdy5EYXRlLFxueT13aW5kb3cuc2V0VGltZW91dCx6PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgQT13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKX1pZihcIm9iamVjdFwiPT09XG50eXBlb2YgdyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcubm93KWV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHcubm93KCl9O2Vsc2V7dmFyIEI9eC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpLUJ9fXZhciBDPSExLEQ9bnVsbCxFPS0xLEY9NSxHPTA7az1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1HfTtsPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3QgdW5zdXBwb3J0ZWRcIik6Rj0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEg9bmV3IE1lc3NhZ2VDaGFubmVsLEk9SC5wb3J0MjtILnBvcnQxLm9ubWVzc2FnZT1cbmZ1bmN0aW9uKCl7aWYobnVsbCE9PUQpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7Rz1hK0Y7dHJ5e0QoITAsYSk/SS5wb3N0TWVzc2FnZShudWxsKTooQz0hMSxEPW51bGwpfWNhdGNoKGIpe3Rocm93IEkucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQz0hMX07Zj1mdW5jdGlvbihhKXtEPWE7Q3x8KEM9ITAsSS5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtFPXkoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3ooRSk7RT0tMX19ZnVuY3Rpb24gSihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxLKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBMKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBNKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPksobixjKSl2b2lkIDAhPT1yJiYwPksocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPksocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEsoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIE49W10sTz1bXSxQPTEsUT1udWxsLFI9MyxTPSExLFQ9ITEsVT0hMTtcbmZ1bmN0aW9uIFYoYSl7Zm9yKHZhciBiPUwoTyk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylNKE8pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpTShPKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEooTixiKTtlbHNlIGJyZWFrO2I9TChPKX19ZnVuY3Rpb24gVyhhKXtVPSExO1YoYSk7aWYoIVQpaWYobnVsbCE9PUwoTikpVD0hMCxmKFgpO2Vsc2V7dmFyIGI9TChPKTtudWxsIT09YiYmZyhXLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFgoYSxiKXtUPSExO1UmJihVPSExLGgoKSk7Uz0hMDt2YXIgYz1SO3RyeXtWKGIpO2ZvcihRPUwoTik7bnVsbCE9PVEmJighKFEuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFrKCkpOyl7dmFyIGQ9US5jYWxsYmFjaztpZihudWxsIT09ZCl7US5jYWxsYmFjaz1udWxsO1I9US5wcmlvcml0eUxldmVsO3ZhciBlPWQoUS5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP1EuY2FsbGJhY2s9ZTpRPT09TChOKSYmTShOKTtWKGIpfWVsc2UgTShOKTtRPUwoTil9aWYobnVsbCE9PVEpdmFyIG09ITA7ZWxzZXt2YXIgbj1MKE8pO251bGwhPT1uJiZnKFcsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e1E9bnVsbCxSPWMsUz0hMX19XG5mdW5jdGlvbiBZKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuLTE7Y2FzZSAyOnJldHVybiAyNTA7Y2FzZSA1OnJldHVybiAxMDczNzQxODIzO2Nhc2UgNDpyZXR1cm4gMUU0O2RlZmF1bHQ6cmV0dXJuIDVFM319dmFyIFo9bDtleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7VHx8U3x8KFQ9ITAsZihYKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBSfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEwoTil9O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUil7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9Un12YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1I9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVo7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1SO1I9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1I9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3ZhciBlPWMuZGVsYXk7ZT1cIm51bWJlclwiPT09dHlwZW9mIGUmJjA8ZT9kK2U6ZDtjPVwibnVtYmVyXCI9PT10eXBlb2YgYy50aW1lb3V0P2MudGltZW91dDpZKGEpfWVsc2UgYz1ZKGEpLGU9ZDtjPWUrYzthPXtpZDpQKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmUsZXhwaXJhdGlvblRpbWU6Yyxzb3J0SW5kZXg6LTF9O2U+ZD8oYS5zb3J0SW5kZXg9ZSxKKE8sYSksbnVsbD09PUwoTikmJmE9PT1MKE8pJiYoVT9oKCk6VT0hMCxnKFcsZS1kKSkpOihhLnNvcnRJbmRleD1jLEooTixhKSxUfHxTfHwoVD0hMCxmKFgpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7VihhKTt2YXIgYj1MKE4pO3JldHVybiBiIT09USYmbnVsbCE9PVEmJm51bGwhPT1iJiZudWxsIT09Yi5jYWxsYmFjayYmYi5zdGFydFRpbWU8PWEmJmIuZXhwaXJhdGlvblRpbWU8US5leHBpcmF0aW9uVGltZXx8aygpfTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1SO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtSPWN9fX07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3JpZ2luYWxNb2R1bGUpIHtcblx0aWYgKCFvcmlnaW5hbE1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHR2YXIgbW9kdWxlID0gT2JqZWN0LmNyZWF0ZShvcmlnaW5hbE1vZHVsZSk7XG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiZXhwb3J0c1wiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlXG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmV4cG9ydCB2YXIgUmVhY3RSZWR1eENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuZXhwb3J0IGRlZmF1bHQgUmVhY3RSZWR1eENvbnRleHQ7IiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0JztcblxudmFyIFByb3ZpZGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBQcm92aWRlcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX0NvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzO1xuICAgIHZhciBzdG9yZSA9IHByb3BzLnN0b3JlO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgc3RvcmVTdGF0ZTogc3RvcmUuZ2V0U3RhdGUoKSxcbiAgICAgIHN0b3JlOiBzdG9yZVxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLl9pc01vdW50ZWQgPSB0cnVlO1xuICAgIHRoaXMuc3Vic2NyaWJlKCk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMudW5zdWJzY3JpYmUpIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICB0aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgIGlmICh0aGlzLnByb3BzLnN0b3JlICE9PSBwcmV2UHJvcHMuc3RvcmUpIHtcbiAgICAgIGlmICh0aGlzLnVuc3Vic2NyaWJlKSB0aGlzLnVuc3Vic2NyaWJlKCk7XG4gICAgICB0aGlzLnN1YnNjcmliZSgpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uc3Vic2NyaWJlID0gZnVuY3Rpb24gc3Vic2NyaWJlKCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIHN0b3JlID0gdGhpcy5wcm9wcy5zdG9yZTtcbiAgICB0aGlzLnVuc3Vic2NyaWJlID0gc3RvcmUuc3Vic2NyaWJlKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBuZXdTdG9yZVN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTtcblxuICAgICAgaWYgKCFfdGhpczIuX2lzTW91bnRlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIF90aGlzMi5zZXRTdGF0ZShmdW5jdGlvbiAocHJvdmlkZXJTdGF0ZSkge1xuICAgICAgICAvLyBJZiB0aGUgdmFsdWUgaXMgdGhlIHNhbWUsIHNraXAgdGhlIHVubmVjZXNzYXJ5IHN0YXRlIHVwZGF0ZS5cbiAgICAgICAgaWYgKHByb3ZpZGVyU3RhdGUuc3RvcmVTdGF0ZSA9PT0gbmV3U3RvcmVTdGF0ZSkge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzdG9yZVN0YXRlOiBuZXdTdG9yZVN0YXRlXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9KTsgLy8gQWN0aW9ucyBtaWdodCBoYXZlIGJlZW4gZGlzcGF0Y2hlZCBiZXR3ZWVuIHJlbmRlciBhbmQgbW91bnQgLSBoYW5kbGUgdGhvc2VcblxuICAgIHZhciBwb3N0TW91bnRTdG9yZVN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTtcblxuICAgIGlmIChwb3N0TW91bnRTdG9yZVN0YXRlICE9PSB0aGlzLnN0YXRlLnN0b3JlU3RhdGUpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzdG9yZVN0YXRlOiBwb3N0TW91bnRTdG9yZVN0YXRlXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgQ29udGV4dCA9IHRoaXMucHJvcHMuY29udGV4dCB8fCBSZWFjdFJlZHV4Q29udGV4dDtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICB2YWx1ZTogdGhpcy5zdGF0ZVxuICAgIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICB9O1xuXG4gIHJldHVybiBQcm92aWRlcjtcbn0oQ29tcG9uZW50KTtcblxuUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICBzdG9yZTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBzdWJzY3JpYmU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgZGlzcGF0Y2g6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgZ2V0U3RhdGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgfSksXG4gIGNvbnRleHQ6IFByb3BUeXBlcy5vYmplY3QsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55XG59O1xuZXhwb3J0IGRlZmF1bHQgUHJvdmlkZXI7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJpbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCI7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2VcIjtcbmltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBpc1ZhbGlkRWxlbWVudFR5cGUsIGlzQ29udGV4dENvbnN1bWVyIH0gZnJvbSAncmVhY3QtaXMnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL0NvbnRleHQnO1xuXG52YXIgc3RyaW5naWZ5Q29tcG9uZW50ID0gZnVuY3Rpb24gc3RyaW5naWZ5Q29tcG9uZW50KENvbXApIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoQ29tcCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBTdHJpbmcoQ29tcCk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbm5lY3RBZHZhbmNlZChcbi8qXG4gIHNlbGVjdG9yRmFjdG9yeSBpcyBhIGZ1bmMgdGhhdCBpcyByZXNwb25zaWJsZSBmb3IgcmV0dXJuaW5nIHRoZSBzZWxlY3RvciBmdW5jdGlvbiB1c2VkIHRvXG4gIGNvbXB1dGUgbmV3IHByb3BzIGZyb20gc3RhdGUsIHByb3BzLCBhbmQgZGlzcGF0Y2guIEZvciBleGFtcGxlOlxuICAgICBleHBvcnQgZGVmYXVsdCBjb25uZWN0QWR2YW5jZWQoKGRpc3BhdGNoLCBvcHRpb25zKSA9PiAoc3RhdGUsIHByb3BzKSA9PiAoe1xuICAgICAgdGhpbmc6IHN0YXRlLnRoaW5nc1twcm9wcy50aGluZ0lkXSxcbiAgICAgIHNhdmVUaGluZzogZmllbGRzID0+IGRpc3BhdGNoKGFjdGlvbkNyZWF0b3JzLnNhdmVUaGluZyhwcm9wcy50aGluZ0lkLCBmaWVsZHMpKSxcbiAgICB9KSkoWW91ckNvbXBvbmVudClcbiAgIEFjY2VzcyB0byBkaXNwYXRjaCBpcyBwcm92aWRlZCB0byB0aGUgZmFjdG9yeSBzbyBzZWxlY3RvckZhY3RvcmllcyBjYW4gYmluZCBhY3Rpb25DcmVhdG9yc1xuICBvdXRzaWRlIG9mIHRoZWlyIHNlbGVjdG9yIGFzIGFuIG9wdGltaXphdGlvbi4gT3B0aW9ucyBwYXNzZWQgdG8gY29ubmVjdEFkdmFuY2VkIGFyZSBwYXNzZWQgdG9cbiAgdGhlIHNlbGVjdG9yRmFjdG9yeSwgYWxvbmcgd2l0aCBkaXNwbGF5TmFtZSBhbmQgV3JhcHBlZENvbXBvbmVudCwgYXMgdGhlIHNlY29uZCBhcmd1bWVudC5cbiAgIE5vdGUgdGhhdCBzZWxlY3RvckZhY3RvcnkgaXMgcmVzcG9uc2libGUgZm9yIGFsbCBjYWNoaW5nL21lbW9pemF0aW9uIG9mIGluYm91bmQgYW5kIG91dGJvdW5kXG4gIHByb3BzLiBEbyBub3QgdXNlIGNvbm5lY3RBZHZhbmNlZCBkaXJlY3RseSB3aXRob3V0IG1lbW9pemluZyByZXN1bHRzIGJldHdlZW4gY2FsbHMgdG8geW91clxuICBzZWxlY3Rvciwgb3RoZXJ3aXNlIHRoZSBDb25uZWN0IGNvbXBvbmVudCB3aWxsIHJlLXJlbmRlciBvbiBldmVyeSBzdGF0ZSBvciBwcm9wcyBjaGFuZ2UuXG4qL1xuc2VsZWN0b3JGYWN0b3J5LCAvLyBvcHRpb25zIG9iamVjdDpcbl9yZWYpIHtcbiAgaWYgKF9yZWYgPT09IHZvaWQgMCkge1xuICAgIF9yZWYgPSB7fTtcbiAgfVxuXG4gIHZhciBfcmVmMiA9IF9yZWYsXG4gICAgICBfcmVmMiRnZXREaXNwbGF5TmFtZSA9IF9yZWYyLmdldERpc3BsYXlOYW1lLFxuICAgICAgZ2V0RGlzcGxheU5hbWUgPSBfcmVmMiRnZXREaXNwbGF5TmFtZSA9PT0gdm9pZCAwID8gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gXCJDb25uZWN0QWR2YW5jZWQoXCIgKyBuYW1lICsgXCIpXCI7XG4gIH0gOiBfcmVmMiRnZXREaXNwbGF5TmFtZSxcbiAgICAgIF9yZWYyJG1ldGhvZE5hbWUgPSBfcmVmMi5tZXRob2ROYW1lLFxuICAgICAgbWV0aG9kTmFtZSA9IF9yZWYyJG1ldGhvZE5hbWUgPT09IHZvaWQgMCA/ICdjb25uZWN0QWR2YW5jZWQnIDogX3JlZjIkbWV0aG9kTmFtZSxcbiAgICAgIF9yZWYyJHJlbmRlckNvdW50UHJvcCA9IF9yZWYyLnJlbmRlckNvdW50UHJvcCxcbiAgICAgIHJlbmRlckNvdW50UHJvcCA9IF9yZWYyJHJlbmRlckNvdW50UHJvcCA9PT0gdm9pZCAwID8gdW5kZWZpbmVkIDogX3JlZjIkcmVuZGVyQ291bnRQcm9wLFxuICAgICAgX3JlZjIkc2hvdWxkSGFuZGxlU3RhID0gX3JlZjIuc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLFxuICAgICAgc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzID0gX3JlZjIkc2hvdWxkSGFuZGxlU3RhID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZjIkc2hvdWxkSGFuZGxlU3RhLFxuICAgICAgX3JlZjIkc3RvcmVLZXkgPSBfcmVmMi5zdG9yZUtleSxcbiAgICAgIHN0b3JlS2V5ID0gX3JlZjIkc3RvcmVLZXkgPT09IHZvaWQgMCA/ICdzdG9yZScgOiBfcmVmMiRzdG9yZUtleSxcbiAgICAgIF9yZWYyJHdpdGhSZWYgPSBfcmVmMi53aXRoUmVmLFxuICAgICAgd2l0aFJlZiA9IF9yZWYyJHdpdGhSZWYgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkd2l0aFJlZixcbiAgICAgIF9yZWYyJGZvcndhcmRSZWYgPSBfcmVmMi5mb3J3YXJkUmVmLFxuICAgICAgZm9yd2FyZFJlZiA9IF9yZWYyJGZvcndhcmRSZWYgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkZm9yd2FyZFJlZixcbiAgICAgIF9yZWYyJGNvbnRleHQgPSBfcmVmMi5jb250ZXh0LFxuICAgICAgY29udGV4dCA9IF9yZWYyJGNvbnRleHQgPT09IHZvaWQgMCA/IFJlYWN0UmVkdXhDb250ZXh0IDogX3JlZjIkY29udGV4dCxcbiAgICAgIGNvbm5lY3RPcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImdldERpc3BsYXlOYW1lXCIsIFwibWV0aG9kTmFtZVwiLCBcInJlbmRlckNvdW50UHJvcFwiLCBcInNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlc1wiLCBcInN0b3JlS2V5XCIsIFwid2l0aFJlZlwiLCBcImZvcndhcmRSZWZcIiwgXCJjb250ZXh0XCJdKTtcblxuICBpbnZhcmlhbnQocmVuZGVyQ291bnRQcm9wID09PSB1bmRlZmluZWQsIFwicmVuZGVyQ291bnRQcm9wIGlzIHJlbW92ZWQuIHJlbmRlciBjb3VudGluZyBpcyBidWlsdCBpbnRvIHRoZSBsYXRlc3QgUmVhY3QgZGV2IHRvb2xzIHByb2ZpbGluZyBleHRlbnNpb25cIik7XG4gIGludmFyaWFudCghd2l0aFJlZiwgJ3dpdGhSZWYgaXMgcmVtb3ZlZC4gVG8gYWNjZXNzIHRoZSB3cmFwcGVkIGluc3RhbmNlLCB1c2UgYSByZWYgb24gdGhlIGNvbm5lY3RlZCBjb21wb25lbnQnKTtcbiAgdmFyIGN1c3RvbVN0b3JlV2FybmluZ01lc3NhZ2UgPSAnVG8gdXNlIGEgY3VzdG9tIFJlZHV4IHN0b3JlIGZvciBzcGVjaWZpYyBjb21wb25lbnRzLCAgY3JlYXRlIGEgY3VzdG9tIFJlYWN0IGNvbnRleHQgd2l0aCAnICsgXCJSZWFjdC5jcmVhdGVDb250ZXh0KCksIGFuZCBwYXNzIHRoZSBjb250ZXh0IG9iamVjdCB0byBSZWFjdCBSZWR1eCdzIFByb3ZpZGVyIGFuZCBzcGVjaWZpYyBjb21wb25lbnRzXCIgKyAnIGxpa2U6ICA8UHJvdmlkZXIgY29udGV4dD17TXlDb250ZXh0fT48Q29ubmVjdGVkQ29tcG9uZW50IGNvbnRleHQ9e015Q29udGV4dH0gLz48L1Byb3ZpZGVyPi4gJyArICdZb3UgbWF5IGFsc28gcGFzcyBhIHtjb250ZXh0IDogTXlDb250ZXh0fSBvcHRpb24gdG8gY29ubmVjdCc7XG4gIGludmFyaWFudChzdG9yZUtleSA9PT0gJ3N0b3JlJywgJ3N0b3JlS2V5IGhhcyBiZWVuIHJlbW92ZWQgYW5kIGRvZXMgbm90IGRvIGFueXRoaW5nLiAnICsgY3VzdG9tU3RvcmVXYXJuaW5nTWVzc2FnZSk7XG4gIHZhciBDb250ZXh0ID0gY29udGV4dDtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXBXaXRoQ29ubmVjdChXcmFwcGVkQ29tcG9uZW50KSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGludmFyaWFudChpc1ZhbGlkRWxlbWVudFR5cGUoV3JhcHBlZENvbXBvbmVudCksIFwiWW91IG11c3QgcGFzcyBhIGNvbXBvbmVudCB0byB0aGUgZnVuY3Rpb24gcmV0dXJuZWQgYnkgXCIgKyAobWV0aG9kTmFtZSArIFwiLiBJbnN0ZWFkIHJlY2VpdmVkIFwiICsgc3RyaW5naWZ5Q29tcG9uZW50KFdyYXBwZWRDb21wb25lbnQpKSk7XG4gICAgfVxuXG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnROYW1lID0gV3JhcHBlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBXcmFwcGVkQ29tcG9uZW50Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gZ2V0RGlzcGxheU5hbWUod3JhcHBlZENvbXBvbmVudE5hbWUpO1xuXG4gICAgdmFyIHNlbGVjdG9yRmFjdG9yeU9wdGlvbnMgPSBfZXh0ZW5kcyh7fSwgY29ubmVjdE9wdGlvbnMsIHtcbiAgICAgIGdldERpc3BsYXlOYW1lOiBnZXREaXNwbGF5TmFtZSxcbiAgICAgIG1ldGhvZE5hbWU6IG1ldGhvZE5hbWUsXG4gICAgICByZW5kZXJDb3VudFByb3A6IHJlbmRlckNvdW50UHJvcCxcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlczogc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLFxuICAgICAgc3RvcmVLZXk6IHN0b3JlS2V5LFxuICAgICAgZGlzcGxheU5hbWU6IGRpc3BsYXlOYW1lLFxuICAgICAgd3JhcHBlZENvbXBvbmVudE5hbWU6IHdyYXBwZWRDb21wb25lbnROYW1lLFxuICAgICAgV3JhcHBlZENvbXBvbmVudDogV3JhcHBlZENvbXBvbmVudFxuICAgIH0pO1xuXG4gICAgdmFyIHB1cmUgPSBjb25uZWN0T3B0aW9ucy5wdXJlO1xuICAgIHZhciBPdXRlckJhc2VDb21wb25lbnQgPSBDb21wb25lbnQ7XG5cbiAgICBpZiAocHVyZSkge1xuICAgICAgT3V0ZXJCYXNlQ29tcG9uZW50ID0gUHVyZUNvbXBvbmVudDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtYWtlRGVyaXZlZFByb3BzU2VsZWN0b3IoKSB7XG4gICAgICB2YXIgbGFzdFByb3BzO1xuICAgICAgdmFyIGxhc3RTdGF0ZTtcbiAgICAgIHZhciBsYXN0RGVyaXZlZFByb3BzO1xuICAgICAgdmFyIGxhc3RTdG9yZTtcbiAgICAgIHZhciBsYXN0U2VsZWN0b3JGYWN0b3J5T3B0aW9ucztcbiAgICAgIHZhciBzb3VyY2VTZWxlY3RvcjtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZWxlY3REZXJpdmVkUHJvcHMoc3RhdGUsIHByb3BzLCBzdG9yZSwgc2VsZWN0b3JGYWN0b3J5T3B0aW9ucykge1xuICAgICAgICBpZiAocHVyZSAmJiBsYXN0UHJvcHMgPT09IHByb3BzICYmIGxhc3RTdGF0ZSA9PT0gc3RhdGUpIHtcbiAgICAgICAgICByZXR1cm4gbGFzdERlcml2ZWRQcm9wcztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChzdG9yZSAhPT0gbGFzdFN0b3JlIHx8IGxhc3RTZWxlY3RvckZhY3RvcnlPcHRpb25zICE9PSBzZWxlY3RvckZhY3RvcnlPcHRpb25zKSB7XG4gICAgICAgICAgbGFzdFN0b3JlID0gc3RvcmU7XG4gICAgICAgICAgbGFzdFNlbGVjdG9yRmFjdG9yeU9wdGlvbnMgPSBzZWxlY3RvckZhY3RvcnlPcHRpb25zO1xuICAgICAgICAgIHNvdXJjZVNlbGVjdG9yID0gc2VsZWN0b3JGYWN0b3J5KHN0b3JlLmRpc3BhdGNoLCBzZWxlY3RvckZhY3RvcnlPcHRpb25zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxhc3RQcm9wcyA9IHByb3BzO1xuICAgICAgICBsYXN0U3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgdmFyIG5leHRQcm9wcyA9IHNvdXJjZVNlbGVjdG9yKHN0YXRlLCBwcm9wcyk7XG4gICAgICAgIGxhc3REZXJpdmVkUHJvcHMgPSBuZXh0UHJvcHM7XG4gICAgICAgIHJldHVybiBsYXN0RGVyaXZlZFByb3BzO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBtYWtlQ2hpbGRFbGVtZW50U2VsZWN0b3IoKSB7XG4gICAgICB2YXIgbGFzdENoaWxkUHJvcHMsIGxhc3RGb3J3YXJkUmVmLCBsYXN0Q2hpbGRFbGVtZW50LCBsYXN0Q29tcG9uZW50O1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIHNlbGVjdENoaWxkRWxlbWVudChXcmFwcGVkQ29tcG9uZW50LCBjaGlsZFByb3BzLCBmb3J3YXJkUmVmKSB7XG4gICAgICAgIGlmIChjaGlsZFByb3BzICE9PSBsYXN0Q2hpbGRQcm9wcyB8fCBmb3J3YXJkUmVmICE9PSBsYXN0Rm9yd2FyZFJlZiB8fCBsYXN0Q29tcG9uZW50ICE9PSBXcmFwcGVkQ29tcG9uZW50KSB7XG4gICAgICAgICAgbGFzdENoaWxkUHJvcHMgPSBjaGlsZFByb3BzO1xuICAgICAgICAgIGxhc3RGb3J3YXJkUmVmID0gZm9yd2FyZFJlZjtcbiAgICAgICAgICBsYXN0Q29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICAgICAgICBsYXN0Q2hpbGRFbGVtZW50ID0gUmVhY3QuY3JlYXRlRWxlbWVudChXcmFwcGVkQ29tcG9uZW50LCBfZXh0ZW5kcyh7fSwgY2hpbGRQcm9wcywge1xuICAgICAgICAgICAgcmVmOiBmb3J3YXJkUmVmXG4gICAgICAgICAgfSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGxhc3RDaGlsZEVsZW1lbnQ7XG4gICAgICB9O1xuICAgIH1cblxuICAgIHZhciBDb25uZWN0ID1cbiAgICAvKiNfX1BVUkVfXyovXG4gICAgZnVuY3Rpb24gKF9PdXRlckJhc2VDb21wb25lbnQpIHtcbiAgICAgIF9pbmhlcml0c0xvb3NlKENvbm5lY3QsIF9PdXRlckJhc2VDb21wb25lbnQpO1xuXG4gICAgICBmdW5jdGlvbiBDb25uZWN0KHByb3BzKSB7XG4gICAgICAgIHZhciBfdGhpcztcblxuICAgICAgICBfdGhpcyA9IF9PdXRlckJhc2VDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICAgICAgaW52YXJpYW50KGZvcndhcmRSZWYgPyAhcHJvcHMud3JhcHBlclByb3BzW3N0b3JlS2V5XSA6ICFwcm9wc1tzdG9yZUtleV0sICdQYXNzaW5nIHJlZHV4IHN0b3JlIGluIHByb3BzIGhhcyBiZWVuIHJlbW92ZWQgYW5kIGRvZXMgbm90IGRvIGFueXRoaW5nLiAnICsgY3VzdG9tU3RvcmVXYXJuaW5nTWVzc2FnZSk7XG4gICAgICAgIF90aGlzLnNlbGVjdERlcml2ZWRQcm9wcyA9IG1ha2VEZXJpdmVkUHJvcHNTZWxlY3RvcigpO1xuICAgICAgICBfdGhpcy5zZWxlY3RDaGlsZEVsZW1lbnQgPSBtYWtlQ2hpbGRFbGVtZW50U2VsZWN0b3IoKTtcbiAgICAgICAgX3RoaXMuaW5kaXJlY3RSZW5kZXJXcmFwcGVkQ29tcG9uZW50ID0gX3RoaXMuaW5kaXJlY3RSZW5kZXJXcmFwcGVkQ29tcG9uZW50LmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgICB9XG5cbiAgICAgIHZhciBfcHJvdG8gPSBDb25uZWN0LnByb3RvdHlwZTtcblxuICAgICAgX3Byb3RvLmluZGlyZWN0UmVuZGVyV3JhcHBlZENvbXBvbmVudCA9IGZ1bmN0aW9uIGluZGlyZWN0UmVuZGVyV3JhcHBlZENvbXBvbmVudCh2YWx1ZSkge1xuICAgICAgICAvLyBjYWxsaW5nIHJlbmRlcldyYXBwZWRDb21wb25lbnQgb24gcHJvdG90eXBlIGZyb20gaW5kaXJlY3RSZW5kZXJXcmFwcGVkQ29tcG9uZW50IGJvdW5kIHRvIGB0aGlzYFxuICAgICAgICByZXR1cm4gdGhpcy5yZW5kZXJXcmFwcGVkQ29tcG9uZW50KHZhbHVlKTtcbiAgICAgIH07XG5cbiAgICAgIF9wcm90by5yZW5kZXJXcmFwcGVkQ29tcG9uZW50ID0gZnVuY3Rpb24gcmVuZGVyV3JhcHBlZENvbXBvbmVudCh2YWx1ZSkge1xuICAgICAgICBpbnZhcmlhbnQodmFsdWUsIFwiQ291bGQgbm90IGZpbmQgXFxcInN0b3JlXFxcIiBpbiB0aGUgY29udGV4dCBvZiBcIiArIChcIlxcXCJcIiArIGRpc3BsYXlOYW1lICsgXCJcXFwiLiBFaXRoZXIgd3JhcCB0aGUgcm9vdCBjb21wb25lbnQgaW4gYSA8UHJvdmlkZXI+LCBcIikgKyBcIm9yIHBhc3MgYSBjdXN0b20gUmVhY3QgY29udGV4dCBwcm92aWRlciB0byA8UHJvdmlkZXI+IGFuZCB0aGUgY29ycmVzcG9uZGluZyBcIiArIChcIlJlYWN0IGNvbnRleHQgY29uc3VtZXIgdG8gXCIgKyBkaXNwbGF5TmFtZSArIFwiIGluIGNvbm5lY3Qgb3B0aW9ucy5cIikpO1xuICAgICAgICB2YXIgc3RvcmVTdGF0ZSA9IHZhbHVlLnN0b3JlU3RhdGUsXG4gICAgICAgICAgICBzdG9yZSA9IHZhbHVlLnN0b3JlO1xuICAgICAgICB2YXIgd3JhcHBlclByb3BzID0gdGhpcy5wcm9wcztcbiAgICAgICAgdmFyIGZvcndhcmRlZFJlZjtcblxuICAgICAgICBpZiAoZm9yd2FyZFJlZikge1xuICAgICAgICAgIHdyYXBwZXJQcm9wcyA9IHRoaXMucHJvcHMud3JhcHBlclByb3BzO1xuICAgICAgICAgIGZvcndhcmRlZFJlZiA9IHRoaXMucHJvcHMuZm9yd2FyZGVkUmVmO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGRlcml2ZWRQcm9wcyA9IHRoaXMuc2VsZWN0RGVyaXZlZFByb3BzKHN0b3JlU3RhdGUsIHdyYXBwZXJQcm9wcywgc3RvcmUsIHNlbGVjdG9yRmFjdG9yeU9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3RDaGlsZEVsZW1lbnQoV3JhcHBlZENvbXBvbmVudCwgZGVyaXZlZFByb3BzLCBmb3J3YXJkZWRSZWYpO1xuICAgICAgfTtcblxuICAgICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgdmFyIENvbnRleHRUb1VzZSA9IHRoaXMucHJvcHMuY29udGV4dCAmJiB0aGlzLnByb3BzLmNvbnRleHQuQ29uc3VtZXIgJiYgaXNDb250ZXh0Q29uc3VtZXIoUmVhY3QuY3JlYXRlRWxlbWVudCh0aGlzLnByb3BzLmNvbnRleHQuQ29uc3VtZXIsIG51bGwpKSA/IHRoaXMucHJvcHMuY29udGV4dCA6IENvbnRleHQ7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRleHRUb1VzZS5Db25zdW1lciwgbnVsbCwgdGhpcy5pbmRpcmVjdFJlbmRlcldyYXBwZWRDb21wb25lbnQpO1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIENvbm5lY3Q7XG4gICAgfShPdXRlckJhc2VDb21wb25lbnQpO1xuXG4gICAgQ29ubmVjdC5XcmFwcGVkQ29tcG9uZW50ID0gV3JhcHBlZENvbXBvbmVudDtcbiAgICBDb25uZWN0LmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG5cbiAgICBpZiAoZm9yd2FyZFJlZikge1xuICAgICAgdmFyIGZvcndhcmRlZCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gZm9yd2FyZENvbm5lY3RSZWYocHJvcHMsIHJlZikge1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb25uZWN0LCB7XG4gICAgICAgICAgd3JhcHBlclByb3BzOiBwcm9wcyxcbiAgICAgICAgICBmb3J3YXJkZWRSZWY6IHJlZlxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgZm9yd2FyZGVkLmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gICAgICBmb3J3YXJkZWQuV3JhcHBlZENvbXBvbmVudCA9IFdyYXBwZWRDb21wb25lbnQ7XG4gICAgICByZXR1cm4gaG9pc3RTdGF0aWNzKGZvcndhcmRlZCwgV3JhcHBlZENvbXBvbmVudCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhvaXN0U3RhdGljcyhDb25uZWN0LCBXcmFwcGVkQ29tcG9uZW50KTtcbiAgfTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufSIsInZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG5mdW5jdGlvbiBpcyh4LCB5KSB7XG4gIGlmICh4ID09PSB5KSB7XG4gICAgcmV0dXJuIHggIT09IDAgfHwgeSAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzaGFsbG93RXF1YWwob2JqQSwgb2JqQikge1xuICBpZiAoaXMob2JqQSwgb2JqQikpIHJldHVybiB0cnVlO1xuXG4gIGlmICh0eXBlb2Ygb2JqQSAhPT0gJ29iamVjdCcgfHwgb2JqQSA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqQiAhPT0gJ29iamVjdCcgfHwgb2JqQiA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBrZXlzQSA9IE9iamVjdC5rZXlzKG9iakEpO1xuICB2YXIga2V5c0IgPSBPYmplY3Qua2V5cyhvYmpCKTtcbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzQS5sZW5ndGg7IGkrKykge1xuICAgIGlmICghaGFzT3duLmNhbGwob2JqQiwga2V5c0FbaV0pIHx8ICFpcyhvYmpBW2tleXNBW2ldXSwgb2JqQltrZXlzQVtpXV0pKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59IiwiaW1wb3J0ICQkb2JzZXJ2YWJsZSBmcm9tICdzeW1ib2wtb2JzZXJ2YWJsZSc7XG5cbi8qKlxuICogVGhlc2UgYXJlIHByaXZhdGUgYWN0aW9uIHR5cGVzIHJlc2VydmVkIGJ5IFJlZHV4LlxuICogRm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHlvdSBtdXN0IHJldHVybiB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIElmIHRoZSBjdXJyZW50IHN0YXRlIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLlxuICogRG8gbm90IHJlZmVyZW5jZSB0aGVzZSBhY3Rpb24gdHlwZXMgZGlyZWN0bHkgaW4geW91ciBjb2RlLlxuICovXG52YXIgcmFuZG9tU3RyaW5nID0gZnVuY3Rpb24gcmFuZG9tU3RyaW5nKCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDcpLnNwbGl0KCcnKS5qb2luKCcuJyk7XG59O1xuXG52YXIgQWN0aW9uVHlwZXMgPSB7XG4gIElOSVQ6IFwiQEByZWR1eC9JTklUXCIgKyByYW5kb21TdHJpbmcoKSxcbiAgUkVQTEFDRTogXCJAQHJlZHV4L1JFUExBQ0VcIiArIHJhbmRvbVN0cmluZygpLFxuICBQUk9CRV9VTktOT1dOX0FDVElPTjogZnVuY3Rpb24gUFJPQkVfVU5LTk9XTl9BQ1RJT04oKSB7XG4gICAgcmV0dXJuIFwiQEByZWR1eC9QUk9CRV9VTktOT1dOX0FDVElPTlwiICsgcmFuZG9tU3RyaW5nKCk7XG4gIH1cbn07XG5cbi8qKlxuICogQHBhcmFtIHthbnl9IG9iaiBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgYXJndW1lbnQgYXBwZWFycyB0byBiZSBhIHBsYWluIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnIHx8IG9iaiA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuICB2YXIgcHJvdG8gPSBvYmo7XG5cbiAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikgPT09IHByb3RvO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBSZWR1eCBzdG9yZSB0aGF0IGhvbGRzIHRoZSBzdGF0ZSB0cmVlLlxuICogVGhlIG9ubHkgd2F5IHRvIGNoYW5nZSB0aGUgZGF0YSBpbiB0aGUgc3RvcmUgaXMgdG8gY2FsbCBgZGlzcGF0Y2goKWAgb24gaXQuXG4gKlxuICogVGhlcmUgc2hvdWxkIG9ubHkgYmUgYSBzaW5nbGUgc3RvcmUgaW4geW91ciBhcHAuIFRvIHNwZWNpZnkgaG93IGRpZmZlcmVudFxuICogcGFydHMgb2YgdGhlIHN0YXRlIHRyZWUgcmVzcG9uZCB0byBhY3Rpb25zLCB5b3UgbWF5IGNvbWJpbmUgc2V2ZXJhbCByZWR1Y2Vyc1xuICogaW50byBhIHNpbmdsZSByZWR1Y2VyIGZ1bmN0aW9uIGJ5IHVzaW5nIGBjb21iaW5lUmVkdWNlcnNgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlZHVjZXIgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIG5leHQgc3RhdGUgdHJlZSwgZ2l2ZW5cbiAqIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBhY3Rpb24gdG8gaGFuZGxlLlxuICpcbiAqIEBwYXJhbSB7YW55fSBbcHJlbG9hZGVkU3RhdGVdIFRoZSBpbml0aWFsIHN0YXRlLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gaHlkcmF0ZSB0aGUgc3RhdGUgZnJvbSB0aGUgc2VydmVyIGluIHVuaXZlcnNhbCBhcHBzLCBvciB0byByZXN0b3JlIGFcbiAqIHByZXZpb3VzbHkgc2VyaWFsaXplZCB1c2VyIHNlc3Npb24uXG4gKiBJZiB5b3UgdXNlIGBjb21iaW5lUmVkdWNlcnNgIHRvIHByb2R1Y2UgdGhlIHJvb3QgcmVkdWNlciBmdW5jdGlvbiwgdGhpcyBtdXN0IGJlXG4gKiBhbiBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZSBhcyBgY29tYmluZVJlZHVjZXJzYCBrZXlzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtlbmhhbmNlcl0gVGhlIHN0b3JlIGVuaGFuY2VyLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gZW5oYW5jZSB0aGUgc3RvcmUgd2l0aCB0aGlyZC1wYXJ0eSBjYXBhYmlsaXRpZXMgc3VjaCBhcyBtaWRkbGV3YXJlLFxuICogdGltZSB0cmF2ZWwsIHBlcnNpc3RlbmNlLCBldGMuIFRoZSBvbmx5IHN0b3JlIGVuaGFuY2VyIHRoYXQgc2hpcHMgd2l0aCBSZWR1eFxuICogaXMgYGFwcGx5TWlkZGxld2FyZSgpYC5cbiAqXG4gKiBAcmV0dXJucyB7U3RvcmV9IEEgUmVkdXggc3RvcmUgdGhhdCBsZXRzIHlvdSByZWFkIHRoZSBzdGF0ZSwgZGlzcGF0Y2ggYWN0aW9uc1xuICogYW5kIHN1YnNjcmliZSB0byBjaGFuZ2VzLlxuICovXG5cbmZ1bmN0aW9uIGNyZWF0ZVN0b3JlKHJlZHVjZXIsIHByZWxvYWRlZFN0YXRlLCBlbmhhbmNlcikge1xuICB2YXIgX3JlZjI7XG5cbiAgaWYgKHR5cGVvZiBwcmVsb2FkZWRTdGF0ZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIGVuaGFuY2VyID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBhcmd1bWVudHNbM10gPT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0l0IGxvb2tzIGxpa2UgeW91IGFyZSBwYXNzaW5nIHNldmVyYWwgc3RvcmUgZW5oYW5jZXJzIHRvICcgKyAnY3JlYXRlU3RvcmUoKS4gVGhpcyBpcyBub3Qgc3VwcG9ydGVkLiBJbnN0ZWFkLCBjb21wb3NlIHRoZW0gJyArICd0b2dldGhlciB0byBhIHNpbmdsZSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgcHJlbG9hZGVkU3RhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGVuaGFuY2VyID09PSAndW5kZWZpbmVkJykge1xuICAgIGVuaGFuY2VyID0gcHJlbG9hZGVkU3RhdGU7XG4gICAgcHJlbG9hZGVkU3RhdGUgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICh0eXBlb2YgZW5oYW5jZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVuaGFuY2VyKGNyZWF0ZVN0b3JlKShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSk7XG4gIH1cblxuICBpZiAodHlwZW9mIHJlZHVjZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSByZWR1Y2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgY3VycmVudFJlZHVjZXIgPSByZWR1Y2VyO1xuICB2YXIgY3VycmVudFN0YXRlID0gcHJlbG9hZGVkU3RhdGU7XG4gIHZhciBjdXJyZW50TGlzdGVuZXJzID0gW107XG4gIHZhciBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycztcbiAgdmFyIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgLyoqXG4gICAqIFRoaXMgbWFrZXMgYSBzaGFsbG93IGNvcHkgb2YgY3VycmVudExpc3RlbmVycyBzbyB3ZSBjYW4gdXNlXG4gICAqIG5leHRMaXN0ZW5lcnMgYXMgYSB0ZW1wb3JhcnkgbGlzdCB3aGlsZSBkaXNwYXRjaGluZy5cbiAgICpcbiAgICogVGhpcyBwcmV2ZW50cyBhbnkgYnVncyBhcm91bmQgY29uc3VtZXJzIGNhbGxpbmdcbiAgICogc3Vic2NyaWJlL3Vuc3Vic2NyaWJlIGluIHRoZSBtaWRkbGUgb2YgYSBkaXNwYXRjaC5cbiAgICovXG5cbiAgZnVuY3Rpb24gZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpIHtcbiAgICBpZiAobmV4dExpc3RlbmVycyA9PT0gY3VycmVudExpc3RlbmVycykge1xuICAgICAgbmV4dExpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnMuc2xpY2UoKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIFJlYWRzIHRoZSBzdGF0ZSB0cmVlIG1hbmFnZWQgYnkgdGhlIHN0b3JlLlxuICAgKlxuICAgKiBAcmV0dXJucyB7YW55fSBUaGUgY3VycmVudCBzdGF0ZSB0cmVlIG9mIHlvdXIgYXBwbGljYXRpb24uXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZ2V0U3RhdGUoKSB7XG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG4gIC8qKlxuICAgKiBBZGRzIGEgY2hhbmdlIGxpc3RlbmVyLiBJdCB3aWxsIGJlIGNhbGxlZCBhbnkgdGltZSBhbiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCxcbiAgICogYW5kIHNvbWUgcGFydCBvZiB0aGUgc3RhdGUgdHJlZSBtYXkgcG90ZW50aWFsbHkgaGF2ZSBjaGFuZ2VkLiBZb3UgbWF5IHRoZW5cbiAgICogY2FsbCBgZ2V0U3RhdGUoKWAgdG8gcmVhZCB0aGUgY3VycmVudCBzdGF0ZSB0cmVlIGluc2lkZSB0aGUgY2FsbGJhY2suXG4gICAqXG4gICAqIFlvdSBtYXkgY2FsbCBgZGlzcGF0Y2goKWAgZnJvbSBhIGNoYW5nZSBsaXN0ZW5lciwgd2l0aCB0aGUgZm9sbG93aW5nXG4gICAqIGNhdmVhdHM6XG4gICAqXG4gICAqIDEuIFRoZSBzdWJzY3JpcHRpb25zIGFyZSBzbmFwc2hvdHRlZCBqdXN0IGJlZm9yZSBldmVyeSBgZGlzcGF0Y2goKWAgY2FsbC5cbiAgICogSWYgeW91IHN1YnNjcmliZSBvciB1bnN1YnNjcmliZSB3aGlsZSB0aGUgbGlzdGVuZXJzIGFyZSBiZWluZyBpbnZva2VkLCB0aGlzXG4gICAqIHdpbGwgbm90IGhhdmUgYW55IGVmZmVjdCBvbiB0aGUgYGRpc3BhdGNoKClgIHRoYXQgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgKiBIb3dldmVyLCB0aGUgbmV4dCBgZGlzcGF0Y2goKWAgY2FsbCwgd2hldGhlciBuZXN0ZWQgb3Igbm90LCB3aWxsIHVzZSBhIG1vcmVcbiAgICogcmVjZW50IHNuYXBzaG90IG9mIHRoZSBzdWJzY3JpcHRpb24gbGlzdC5cbiAgICpcbiAgICogMi4gVGhlIGxpc3RlbmVyIHNob3VsZCBub3QgZXhwZWN0IHRvIHNlZSBhbGwgc3RhdGUgY2hhbmdlcywgYXMgdGhlIHN0YXRlXG4gICAqIG1pZ2h0IGhhdmUgYmVlbiB1cGRhdGVkIG11bHRpcGxlIHRpbWVzIGR1cmluZyBhIG5lc3RlZCBgZGlzcGF0Y2goKWAgYmVmb3JlXG4gICAqIHRoZSBsaXN0ZW5lciBpcyBjYWxsZWQuIEl0IGlzLCBob3dldmVyLCBndWFyYW50ZWVkIHRoYXQgYWxsIHN1YnNjcmliZXJzXG4gICAqIHJlZ2lzdGVyZWQgYmVmb3JlIHRoZSBgZGlzcGF0Y2goKWAgc3RhcnRlZCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZSBsYXRlc3RcbiAgICogc3RhdGUgYnkgdGhlIHRpbWUgaXQgZXhpdHMuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyIEEgY2FsbGJhY2sgdG8gYmUgaW52b2tlZCBvbiBldmVyeSBkaXNwYXRjaC5cbiAgICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGZ1bmN0aW9uIHRvIHJlbW92ZSB0aGlzIGNoYW5nZSBsaXN0ZW5lci5cbiAgICovXG5cblxuICBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSBsaXN0ZW5lciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtYXkgbm90IGNhbGwgc3RvcmUuc3Vic2NyaWJlKCkgd2hpbGUgdGhlIHJlZHVjZXIgaXMgZXhlY3V0aW5nLiAnICsgJ0lmIHlvdSB3b3VsZCBsaWtlIHRvIGJlIG5vdGlmaWVkIGFmdGVyIHRoZSBzdG9yZSBoYXMgYmVlbiB1cGRhdGVkLCBzdWJzY3JpYmUgZnJvbSBhICcgKyAnY29tcG9uZW50IGFuZCBpbnZva2Ugc3RvcmUuZ2V0U3RhdGUoKSBpbiB0aGUgY2FsbGJhY2sgdG8gYWNjZXNzIHRoZSBsYXRlc3Qgc3RhdGUuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS1yZWZlcmVuY2Uvc3RvcmUjc3Vic2NyaWJlbGlzdGVuZXIgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgbmV4dExpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICBpZiAoIWlzU3Vic2NyaWJlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgdW5zdWJzY3JpYmUgZnJvbSBhIHN0b3JlIGxpc3RlbmVyIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvYXBpLXJlZmVyZW5jZS9zdG9yZSNzdWJzY3JpYmVsaXN0ZW5lciBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICBjdXJyZW50TGlzdGVuZXJzID0gbnVsbDtcbiAgICB9O1xuICB9XG4gIC8qKlxuICAgKiBEaXNwYXRjaGVzIGFuIGFjdGlvbi4gSXQgaXMgdGhlIG9ubHkgd2F5IHRvIHRyaWdnZXIgYSBzdGF0ZSBjaGFuZ2UuXG4gICAqXG4gICAqIFRoZSBgcmVkdWNlcmAgZnVuY3Rpb24sIHVzZWQgdG8gY3JlYXRlIHRoZSBzdG9yZSwgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGVcbiAgICogY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgZ2l2ZW4gYGFjdGlvbmAuIEl0cyByZXR1cm4gdmFsdWUgd2lsbFxuICAgKiBiZSBjb25zaWRlcmVkIHRoZSAqKm5leHQqKiBzdGF0ZSBvZiB0aGUgdHJlZSwgYW5kIHRoZSBjaGFuZ2UgbGlzdGVuZXJzXG4gICAqIHdpbGwgYmUgbm90aWZpZWQuXG4gICAqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9ubHkgc3VwcG9ydHMgcGxhaW4gb2JqZWN0IGFjdGlvbnMuIElmIHlvdSB3YW50IHRvXG4gICAqIGRpc3BhdGNoIGEgUHJvbWlzZSwgYW4gT2JzZXJ2YWJsZSwgYSB0aHVuaywgb3Igc29tZXRoaW5nIGVsc2UsIHlvdSBuZWVkIHRvXG4gICAqIHdyYXAgeW91ciBzdG9yZSBjcmVhdGluZyBmdW5jdGlvbiBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIG1pZGRsZXdhcmUuIEZvclxuICAgKiBleGFtcGxlLCBzZWUgdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UuIEV2ZW4gdGhlXG4gICAqIG1pZGRsZXdhcmUgd2lsbCBldmVudHVhbGx5IGRpc3BhdGNoIHBsYWluIG9iamVjdCBhY3Rpb25zIHVzaW5nIHRoaXMgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIEEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGluZyDigJx3aGF0IGNoYW5nZWTigJ0uIEl0IGlzXG4gICAqIGEgZ29vZCBpZGVhIHRvIGtlZXAgYWN0aW9ucyBzZXJpYWxpemFibGUgc28geW91IGNhbiByZWNvcmQgYW5kIHJlcGxheSB1c2VyXG4gICAqIHNlc3Npb25zLCBvciB1c2UgdGhlIHRpbWUgdHJhdmVsbGluZyBgcmVkdXgtZGV2dG9vbHNgLiBBbiBhY3Rpb24gbXVzdCBoYXZlXG4gICAqIGEgYHR5cGVgIHByb3BlcnR5IHdoaWNoIG1heSBub3QgYmUgYHVuZGVmaW5lZGAuIEl0IGlzIGEgZ29vZCBpZGVhIHRvIHVzZVxuICAgKiBzdHJpbmcgY29uc3RhbnRzIGZvciBhY3Rpb24gdHlwZXMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IEZvciBjb252ZW5pZW5jZSwgdGhlIHNhbWUgYWN0aW9uIG9iamVjdCB5b3UgZGlzcGF0Y2hlZC5cbiAgICpcbiAgICogTm90ZSB0aGF0LCBpZiB5b3UgdXNlIGEgY3VzdG9tIG1pZGRsZXdhcmUsIGl0IG1heSB3cmFwIGBkaXNwYXRjaCgpYCB0b1xuICAgKiByZXR1cm4gc29tZXRoaW5nIGVsc2UgKGZvciBleGFtcGxlLCBhIFByb21pc2UgeW91IGNhbiBhd2FpdCkuXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KGFjdGlvbikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWN0aW9ucyBtdXN0IGJlIHBsYWluIG9iamVjdHMuICcgKyAnVXNlIGN1c3RvbSBtaWRkbGV3YXJlIGZvciBhc3luYyBhY3Rpb25zLicpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgYWN0aW9uLnR5cGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FjdGlvbnMgbWF5IG5vdCBoYXZlIGFuIHVuZGVmaW5lZCBcInR5cGVcIiBwcm9wZXJ0eS4gJyArICdIYXZlIHlvdSBtaXNzcGVsbGVkIGEgY29uc3RhbnQ/Jyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUmVkdWNlcnMgbWF5IG5vdCBkaXNwYXRjaCBhY3Rpb25zLicpO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBpc0Rpc3BhdGNoaW5nID0gdHJ1ZTtcbiAgICAgIGN1cnJlbnRTdGF0ZSA9IGN1cnJlbnRSZWR1Y2VyKGN1cnJlbnRTdGF0ZSwgYWN0aW9uKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAgIH1cblxuICAgIHZhciBsaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzID0gbmV4dExpc3RlbmVycztcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV07XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH1cblxuICAgIHJldHVybiBhY3Rpb247XG4gIH1cbiAgLyoqXG4gICAqIFJlcGxhY2VzIHRoZSByZWR1Y2VyIGN1cnJlbnRseSB1c2VkIGJ5IHRoZSBzdG9yZSB0byBjYWxjdWxhdGUgdGhlIHN0YXRlLlxuICAgKlxuICAgKiBZb3UgbWlnaHQgbmVlZCB0aGlzIGlmIHlvdXIgYXBwIGltcGxlbWVudHMgY29kZSBzcGxpdHRpbmcgYW5kIHlvdSB3YW50IHRvXG4gICAqIGxvYWQgc29tZSBvZiB0aGUgcmVkdWNlcnMgZHluYW1pY2FsbHkuIFlvdSBtaWdodCBhbHNvIG5lZWQgdGhpcyBpZiB5b3VcbiAgICogaW1wbGVtZW50IGEgaG90IHJlbG9hZGluZyBtZWNoYW5pc20gZm9yIFJlZHV4LlxuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBuZXh0UmVkdWNlciBUaGUgcmVkdWNlciBmb3IgdGhlIHN0b3JlIHRvIHVzZSBpbnN0ZWFkLlxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG5cblxuICBmdW5jdGlvbiByZXBsYWNlUmVkdWNlcihuZXh0UmVkdWNlcikge1xuICAgIGlmICh0eXBlb2YgbmV4dFJlZHVjZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIG5leHRSZWR1Y2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgY3VycmVudFJlZHVjZXIgPSBuZXh0UmVkdWNlcjsgLy8gVGhpcyBhY3Rpb24gaGFzIGEgc2ltaWxpYXIgZWZmZWN0IHRvIEFjdGlvblR5cGVzLklOSVQuXG4gICAgLy8gQW55IHJlZHVjZXJzIHRoYXQgZXhpc3RlZCBpbiBib3RoIHRoZSBuZXcgYW5kIG9sZCByb290UmVkdWNlclxuICAgIC8vIHdpbGwgcmVjZWl2ZSB0aGUgcHJldmlvdXMgc3RhdGUuIFRoaXMgZWZmZWN0aXZlbHkgcG9wdWxhdGVzXG4gICAgLy8gdGhlIG5ldyBzdGF0ZSB0cmVlIHdpdGggYW55IHJlbGV2YW50IGRhdGEgZnJvbSB0aGUgb2xkIG9uZS5cblxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0VcbiAgICB9KTtcbiAgfVxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuXG5cbiAgZnVuY3Rpb24gb2JzZXJ2YWJsZSgpIHtcbiAgICB2YXIgX3JlZjtcblxuICAgIHZhciBvdXRlclN1YnNjcmliZSA9IHN1YnNjcmliZTtcbiAgICByZXR1cm4gX3JlZiA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIG1pbmltYWwgb2JzZXJ2YWJsZSBzdWJzY3JpcHRpb24gbWV0aG9kLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9ic2VydmVyIEFueSBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiBvYnNlcnZlci5cbiAgICAgICAqIFRoZSBvYnNlcnZlciBvYmplY3Qgc2hvdWxkIGhhdmUgYSBgbmV4dGAgbWV0aG9kLlxuICAgICAgICogQHJldHVybnMge3N1YnNjcmlwdGlvbn0gQW4gb2JqZWN0IHdpdGggYW4gYHVuc3Vic2NyaWJlYCBtZXRob2QgdGhhdCBjYW5cbiAgICAgICAqIGJlIHVzZWQgdG8gdW5zdWJzY3JpYmUgdGhlIG9ic2VydmFibGUgZnJvbSB0aGUgc3RvcmUsIGFuZCBwcmV2ZW50IGZ1cnRoZXJcbiAgICAgICAqIGVtaXNzaW9uIG9mIHZhbHVlcyBmcm9tIHRoZSBvYnNlcnZhYmxlLlxuICAgICAgICovXG4gICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIHRoZSBvYnNlcnZlciB0byBiZSBhbiBvYmplY3QuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdW5zdWJzY3JpYmU6IHVuc3Vic2NyaWJlXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSwgX3JlZlskJG9ic2VydmFibGVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSwgX3JlZjtcbiAgfSAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cblxuXG4gIGRpc3BhdGNoKHtcbiAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gIH0pO1xuICByZXR1cm4gX3JlZjIgPSB7XG4gICAgZGlzcGF0Y2g6IGRpc3BhdGNoLFxuICAgIHN1YnNjcmliZTogc3Vic2NyaWJlLFxuICAgIGdldFN0YXRlOiBnZXRTdGF0ZSxcbiAgICByZXBsYWNlUmVkdWNlcjogcmVwbGFjZVJlZHVjZXJcbiAgfSwgX3JlZjJbJCRvYnNlcnZhYmxlXSA9IG9ic2VydmFibGUsIF9yZWYyO1xufVxuXG4vKipcbiAqIFByaW50cyBhIHdhcm5pbmcgaW4gdGhlIGNvbnNvbGUgaWYgaXQgZXhpc3RzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlIFRoZSB3YXJuaW5nIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG5cblxuICB0cnkge1xuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgaWYgeW91IGVuYWJsZVxuICAgIC8vIFwiYnJlYWsgb24gYWxsIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIGNvbnNvbGUsXG4gICAgLy8gaXQgd291bGQgcGF1c2UgdGhlIGV4ZWN1dGlvbiBhdCB0aGlzIGxpbmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICB9IGNhdGNoIChlKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG5cbn1cblxuZnVuY3Rpb24gZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2Uoa2V5LCBhY3Rpb24pIHtcbiAgdmFyIGFjdGlvblR5cGUgPSBhY3Rpb24gJiYgYWN0aW9uLnR5cGU7XG4gIHZhciBhY3Rpb25EZXNjcmlwdGlvbiA9IGFjdGlvblR5cGUgJiYgXCJhY3Rpb24gXFxcIlwiICsgU3RyaW5nKGFjdGlvblR5cGUpICsgXCJcXFwiXCIgfHwgJ2FuIGFjdGlvbic7XG4gIHJldHVybiBcIkdpdmVuIFwiICsgYWN0aW9uRGVzY3JpcHRpb24gKyBcIiwgcmVkdWNlciBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkLiBcIiArIFwiVG8gaWdub3JlIGFuIGFjdGlvbiwgeW91IG11c3QgZXhwbGljaXRseSByZXR1cm4gdGhlIHByZXZpb3VzIHN0YXRlLiBcIiArIFwiSWYgeW91IHdhbnQgdGhpcyByZWR1Y2VyIHRvIGhvbGQgbm8gdmFsdWUsIHlvdSBjYW4gcmV0dXJuIG51bGwgaW5zdGVhZCBvZiB1bmRlZmluZWQuXCI7XG59XG5cbmZ1bmN0aW9uIGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2UoaW5wdXRTdGF0ZSwgcmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGFyZ3VtZW50TmFtZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuSU5JVCA/ICdwcmVsb2FkZWRTdGF0ZSBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlU3RvcmUnIDogJ3ByZXZpb3VzIHN0YXRlIHJlY2VpdmVkIGJ5IHRoZSByZWR1Y2VyJztcblxuICBpZiAocmVkdWNlcktleXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdTdG9yZSBkb2VzIG5vdCBoYXZlIGEgdmFsaWQgcmVkdWNlci4gTWFrZSBzdXJlIHRoZSBhcmd1bWVudCBwYXNzZWQgJyArICd0byBjb21iaW5lUmVkdWNlcnMgaXMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgcmVkdWNlcnMuJztcbiAgfVxuXG4gIGlmICghaXNQbGFpbk9iamVjdChpbnB1dFN0YXRlKSkge1xuICAgIHJldHVybiBcIlRoZSBcIiArIGFyZ3VtZW50TmFtZSArIFwiIGhhcyB1bmV4cGVjdGVkIHR5cGUgb2YgXFxcIlwiICsge30udG9TdHJpbmcuY2FsbChpbnB1dFN0YXRlKS5tYXRjaCgvXFxzKFthLXp8QS1aXSspLylbMV0gKyBcIlxcXCIuIEV4cGVjdGVkIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgXCIgKyAoXCJrZXlzOiBcXFwiXCIgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHZhciB1bmV4cGVjdGVkS2V5cyA9IE9iamVjdC5rZXlzKGlucHV0U3RhdGUpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICFyZWR1Y2Vycy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICF1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XTtcbiAgfSk7XG4gIHVuZXhwZWN0ZWRLZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZVtrZXldID0gdHJ1ZTtcbiAgfSk7XG4gIGlmIChhY3Rpb24gJiYgYWN0aW9uLnR5cGUgPT09IEFjdGlvblR5cGVzLlJFUExBQ0UpIHJldHVybjtcblxuICBpZiAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBcIlVuZXhwZWN0ZWQgXCIgKyAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMSA/ICdrZXlzJyA6ICdrZXknKSArIFwiIFwiICsgKFwiXFxcIlwiICsgdW5leHBlY3RlZEtleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIgZm91bmQgaW4gXCIgKyBhcmd1bWVudE5hbWUgKyBcIi4gXCIpICsgXCJFeHBlY3RlZCB0byBmaW5kIG9uZSBvZiB0aGUga25vd24gcmVkdWNlciBrZXlzIGluc3RlYWQ6IFwiICsgKFwiXFxcIlwiICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyBcIlxcXCIuIFVuZXhwZWN0ZWQga2V5cyB3aWxsIGJlIGlnbm9yZWQuXCIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydFJlZHVjZXJTaGFwZShyZWR1Y2Vycykge1xuICBPYmplY3Qua2V5cyhyZWR1Y2VycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHJlZHVjZXIgPSByZWR1Y2Vyc1trZXldO1xuICAgIHZhciBpbml0aWFsU3RhdGUgPSByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuSU5JVFxuICAgIH0pO1xuXG4gICAgaWYgKHR5cGVvZiBpbml0aWFsU3RhdGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWR1Y2VyIFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLiBcIiArIFwiSWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGUgcmVkdWNlciBpcyB1bmRlZmluZWQsIHlvdSBtdXN0IFwiICsgXCJleHBsaWNpdGx5IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IFwiICsgXCJub3QgYmUgdW5kZWZpbmVkLiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBzZXQgYSB2YWx1ZSBmb3IgdGhpcyByZWR1Y2VyLCBcIiArIFwieW91IGNhbiB1c2UgbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyKHVuZGVmaW5lZCwge1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuUFJPQkVfVU5LTk9XTl9BQ1RJT04oKVxuICAgIH0pID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVkdWNlciBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgcmV0dXJuZWQgdW5kZWZpbmVkIHdoZW4gcHJvYmVkIHdpdGggYSByYW5kb20gdHlwZS4gXCIgKyAoXCJEb24ndCB0cnkgdG8gaGFuZGxlIFwiICsgQWN0aW9uVHlwZXMuSU5JVCArIFwiIG9yIG90aGVyIGFjdGlvbnMgaW4gXFxcInJlZHV4LypcXFwiIFwiKSArIFwibmFtZXNwYWNlLiBUaGV5IGFyZSBjb25zaWRlcmVkIHByaXZhdGUuIEluc3RlYWQsIHlvdSBtdXN0IHJldHVybiB0aGUgXCIgKyBcImN1cnJlbnQgc3RhdGUgZm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHVubGVzcyBpdCBpcyB1bmRlZmluZWQsIFwiICsgXCJpbiB3aGljaCBjYXNlIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZSwgcmVnYXJkbGVzcyBvZiB0aGUgXCIgKyBcImFjdGlvbiB0eXBlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgbm90IGJlIHVuZGVmaW5lZCwgYnV0IGNhbiBiZSBudWxsLlwiKTtcbiAgICB9XG4gIH0pO1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBkaWZmZXJlbnQgcmVkdWNlciBmdW5jdGlvbnMsIGludG8gYSBzaW5nbGVcbiAqIHJlZHVjZXIgZnVuY3Rpb24uIEl0IHdpbGwgY2FsbCBldmVyeSBjaGlsZCByZWR1Y2VyLCBhbmQgZ2F0aGVyIHRoZWlyIHJlc3VsdHNcbiAqIGludG8gYSBzaW5nbGUgc3RhdGUgb2JqZWN0LCB3aG9zZSBrZXlzIGNvcnJlc3BvbmQgdG8gdGhlIGtleXMgb2YgdGhlIHBhc3NlZFxuICogcmVkdWNlciBmdW5jdGlvbnMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlZHVjZXJzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgY29ycmVzcG9uZCB0byBkaWZmZXJlbnRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zIHRoYXQgbmVlZCB0byBiZSBjb21iaW5lZCBpbnRvIG9uZS4gT25lIGhhbmR5IHdheSB0byBvYnRhaW5cbiAqIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzIHJlZHVjZXJzYCBzeW50YXguIFRoZSByZWR1Y2VycyBtYXkgbmV2ZXIgcmV0dXJuXG4gKiB1bmRlZmluZWQgZm9yIGFueSBhY3Rpb24uIEluc3RlYWQsIHRoZXkgc2hvdWxkIHJldHVybiB0aGVpciBpbml0aWFsIHN0YXRlXG4gKiBpZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZW0gd2FzIHVuZGVmaW5lZCwgYW5kIHRoZSBjdXJyZW50IHN0YXRlIGZvciBhbnlcbiAqIHVucmVjb2duaXplZCBhY3Rpb24uXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHJlZHVjZXIgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGV2ZXJ5IHJlZHVjZXIgaW5zaWRlIHRoZVxuICogcGFzc2VkIG9iamVjdCwgYW5kIGJ1aWxkcyBhIHN0YXRlIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlLlxuICovXG5cblxuZnVuY3Rpb24gY29tYmluZVJlZHVjZXJzKHJlZHVjZXJzKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGZpbmFsUmVkdWNlcnMgPSB7fTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlZHVjZXJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IHJlZHVjZXJLZXlzW2ldO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2FybmluZyhcIk5vIHJlZHVjZXIgcHJvdmlkZWQgZm9yIGtleSBcXFwiXCIgKyBrZXkgKyBcIlxcXCJcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBmaW5hbFJlZHVjZXJzW2tleV0gPSByZWR1Y2Vyc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIHZhciBmaW5hbFJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMoZmluYWxSZWR1Y2Vycyk7IC8vIFRoaXMgaXMgdXNlZCB0byBtYWtlIHN1cmUgd2UgZG9uJ3Qgd2FybiBhYm91dCB0aGUgc2FtZVxuICAvLyBrZXlzIG11bHRpcGxlIHRpbWVzLlxuXG4gIHZhciB1bmV4cGVjdGVkS2V5Q2FjaGU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB1bmV4cGVjdGVkS2V5Q2FjaGUgPSB7fTtcbiAgfVxuXG4gIHZhciBzaGFwZUFzc2VydGlvbkVycm9yO1xuXG4gIHRyeSB7XG4gICAgYXNzZXJ0UmVkdWNlclNoYXBlKGZpbmFsUmVkdWNlcnMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgc2hhcGVBc3NlcnRpb25FcnJvciA9IGU7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gY29tYmluYXRpb24oc3RhdGUsIGFjdGlvbikge1xuICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7XG4gICAgICBzdGF0ZSA9IHt9O1xuICAgIH1cblxuICAgIGlmIChzaGFwZUFzc2VydGlvbkVycm9yKSB7XG4gICAgICB0aHJvdyBzaGFwZUFzc2VydGlvbkVycm9yO1xuICAgIH1cblxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICB2YXIgd2FybmluZ01lc3NhZ2UgPSBnZXRVbmV4cGVjdGVkU3RhdGVTaGFwZVdhcm5pbmdNZXNzYWdlKHN0YXRlLCBmaW5hbFJlZHVjZXJzLCBhY3Rpb24sIHVuZXhwZWN0ZWRLZXlDYWNoZSk7XG5cbiAgICAgIGlmICh3YXJuaW5nTWVzc2FnZSkge1xuICAgICAgICB3YXJuaW5nKHdhcm5pbmdNZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgaGFzQ2hhbmdlZCA9IGZhbHNlO1xuICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9rZXkgPSBmaW5hbFJlZHVjZXJLZXlzW19pXTtcbiAgICAgIHZhciByZWR1Y2VyID0gZmluYWxSZWR1Y2Vyc1tfa2V5XTtcbiAgICAgIHZhciBwcmV2aW91c1N0YXRlRm9yS2V5ID0gc3RhdGVbX2tleV07XG4gICAgICB2YXIgbmV4dFN0YXRlRm9yS2V5ID0gcmVkdWNlcihwcmV2aW91c1N0YXRlRm9yS2V5LCBhY3Rpb24pO1xuXG4gICAgICBpZiAodHlwZW9mIG5leHRTdGF0ZUZvcktleSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFyIGVycm9yTWVzc2FnZSA9IGdldFVuZGVmaW5lZFN0YXRlRXJyb3JNZXNzYWdlKF9rZXksIGFjdGlvbik7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpO1xuICAgICAgfVxuXG4gICAgICBuZXh0U3RhdGVbX2tleV0gPSBuZXh0U3RhdGVGb3JLZXk7XG4gICAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBuZXh0U3RhdGVGb3JLZXkgIT09IHByZXZpb3VzU3RhdGVGb3JLZXk7XG4gICAgfVxuXG4gICAgaGFzQ2hhbmdlZCA9IGhhc0NoYW5nZWQgfHwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGggIT09IE9iamVjdC5rZXlzKHN0YXRlKS5sZW5ndGg7XG4gICAgcmV0dXJuIGhhc0NoYW5nZWQgPyBuZXh0U3RhdGUgOiBzdGF0ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfTtcbn1cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYW4gYWN0aW9uIGNyZWF0b3IgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGRpc3BhdGNoIHdyYXBwZWQgZnVuY3Rpb24gaW4gcmV0dXJuLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fSBhY3Rpb25DcmVhdG9ycyBBbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb25cbiAqIGNyZWF0b3IgZnVuY3Rpb25zLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpbiBpdCBpcyB0byB1c2UgRVM2IGBpbXBvcnQgKiBhc2BcbiAqIHN5bnRheC4gWW91IG1heSBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZGlzcGF0Y2ggVGhlIGBkaXNwYXRjaGAgZnVuY3Rpb24gYXZhaWxhYmxlIG9uIHlvdXIgUmVkdXhcbiAqIHN0b3JlLlxuICpcbiAqIEByZXR1cm5zIHtGdW5jdGlvbnxPYmplY3R9IFRoZSBvYmplY3QgbWltaWNraW5nIHRoZSBvcmlnaW5hbCBvYmplY3QsIGJ1dCB3aXRoXG4gKiBldmVyeSBhY3Rpb24gY3JlYXRvciB3cmFwcGVkIGludG8gdGhlIGBkaXNwYXRjaGAgY2FsbC4gSWYgeW91IHBhc3NlZCBhXG4gKiBmdW5jdGlvbiBhcyBgYWN0aW9uQ3JlYXRvcnNgLCB0aGUgcmV0dXJuIHZhbHVlIHdpbGwgYWxzbyBiZSBhIHNpbmdsZVxuICogZnVuY3Rpb24uXG4gKi9cblxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgIT09ICdvYmplY3QnIHx8IGFjdGlvbkNyZWF0b3JzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiYmluZEFjdGlvbkNyZWF0b3JzIGV4cGVjdGVkIGFuIG9iamVjdCBvciBhIGZ1bmN0aW9uLCBpbnN0ZWFkIHJlY2VpdmVkIFwiICsgKGFjdGlvbkNyZWF0b3JzID09PSBudWxsID8gJ251bGwnIDogdHlwZW9mIGFjdGlvbkNyZWF0b3JzKSArIFwiLiBcIiArIFwiRGlkIHlvdSB3cml0ZSBcXFwiaW1wb3J0IEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiIGluc3RlYWQgb2YgXFxcImltcG9ydCAqIGFzIEFjdGlvbkNyZWF0b3JzIGZyb21cXFwiP1wiKTtcbiAgfVxuXG4gIHZhciBib3VuZEFjdGlvbkNyZWF0b3JzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIGFjdGlvbkNyZWF0b3JzKSB7XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBib3VuZEFjdGlvbkNyZWF0b3JzW2tleV0gPSBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGJvdW5kQWN0aW9uQ3JlYXRvcnM7XG59XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuXG4gIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAga2V5cy5wdXNoLmFwcGx5KGtleXMsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KSk7XG4gIH1cblxuICBpZiAoZW51bWVyYWJsZU9ubHkpIGtleXMgPSBrZXlzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gIH0pO1xuICByZXR1cm4ga2V5cztcbn1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZDIodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG5cbiAgICBpZiAoaSAlIDIpIHtcbiAgICAgIG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvd25LZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuLyoqXG4gKiBDb21wb3NlcyBzaW5nbGUtYXJndW1lbnQgZnVuY3Rpb25zIGZyb20gcmlnaHQgdG8gbGVmdC4gVGhlIHJpZ2h0bW9zdFxuICogZnVuY3Rpb24gY2FuIHRha2UgbXVsdGlwbGUgYXJndW1lbnRzIGFzIGl0IHByb3ZpZGVzIHRoZSBzaWduYXR1cmUgZm9yXG4gKiB0aGUgcmVzdWx0aW5nIGNvbXBvc2l0ZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBmdW5jcyBUaGUgZnVuY3Rpb25zIHRvIGNvbXBvc2UuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gb2J0YWluZWQgYnkgY29tcG9zaW5nIHRoZSBhcmd1bWVudCBmdW5jdGlvbnNcbiAqIGZyb20gcmlnaHQgdG8gbGVmdC4gRm9yIGV4YW1wbGUsIGNvbXBvc2UoZiwgZywgaCkgaXMgaWRlbnRpY2FsIHRvIGRvaW5nXG4gKiAoLi4uYXJncykgPT4gZihnKGgoLi4uYXJncykpKS5cbiAqL1xuZnVuY3Rpb24gY29tcG9zZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGZ1bmNzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGZ1bmNzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICByZXR1cm4gYXJnO1xuICAgIH07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGZ1bmNzWzBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmNzLnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gYShiLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgfSk7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHN0b3JlIGVuaGFuY2VyIHRoYXQgYXBwbGllcyBtaWRkbGV3YXJlIHRvIHRoZSBkaXNwYXRjaCBtZXRob2RcbiAqIG9mIHRoZSBSZWR1eCBzdG9yZS4gVGhpcyBpcyBoYW5keSBmb3IgYSB2YXJpZXR5IG9mIHRhc2tzLCBzdWNoIGFzIGV4cHJlc3NpbmdcbiAqIGFzeW5jaHJvbm91cyBhY3Rpb25zIGluIGEgY29uY2lzZSBtYW5uZXIsIG9yIGxvZ2dpbmcgZXZlcnkgYWN0aW9uIHBheWxvYWQuXG4gKlxuICogU2VlIGByZWR1eC10aHVua2AgcGFja2FnZSBhcyBhbiBleGFtcGxlIG9mIHRoZSBSZWR1eCBtaWRkbGV3YXJlLlxuICpcbiAqIEJlY2F1c2UgbWlkZGxld2FyZSBpcyBwb3RlbnRpYWxseSBhc3luY2hyb25vdXMsIHRoaXMgc2hvdWxkIGJlIHRoZSBmaXJzdFxuICogc3RvcmUgZW5oYW5jZXIgaW4gdGhlIGNvbXBvc2l0aW9uIGNoYWluLlxuICpcbiAqIE5vdGUgdGhhdCBlYWNoIG1pZGRsZXdhcmUgd2lsbCBiZSBnaXZlbiB0aGUgYGRpc3BhdGNoYCBhbmQgYGdldFN0YXRlYCBmdW5jdGlvbnNcbiAqIGFzIG5hbWVkIGFyZ3VtZW50cy5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBtaWRkbGV3YXJlcyBUaGUgbWlkZGxld2FyZSBjaGFpbiB0byBiZSBhcHBsaWVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHN0b3JlIGVuaGFuY2VyIGFwcGx5aW5nIHRoZSBtaWRkbGV3YXJlLlxuICovXG5cbmZ1bmN0aW9uIGFwcGx5TWlkZGxld2FyZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG1pZGRsZXdhcmVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIG1pZGRsZXdhcmVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChjcmVhdGVTdG9yZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZS5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG5cbiAgICAgIHZhciBfZGlzcGF0Y2ggPSBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEaXNwYXRjaGluZyB3aGlsZSBjb25zdHJ1Y3RpbmcgeW91ciBtaWRkbGV3YXJlIGlzIG5vdCBhbGxvd2VkLiAnICsgJ090aGVyIG1pZGRsZXdhcmUgd291bGQgbm90IGJlIGFwcGxpZWQgdG8gdGhpcyBkaXNwYXRjaC4nKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBtaWRkbGV3YXJlQVBJID0ge1xuICAgICAgICBnZXRTdGF0ZTogc3RvcmUuZ2V0U3RhdGUsXG4gICAgICAgIGRpc3BhdGNoOiBmdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgICAgICAgICByZXR1cm4gX2Rpc3BhdGNoLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHZhciBjaGFpbiA9IG1pZGRsZXdhcmVzLm1hcChmdW5jdGlvbiAobWlkZGxld2FyZSkge1xuICAgICAgICByZXR1cm4gbWlkZGxld2FyZShtaWRkbGV3YXJlQVBJKTtcbiAgICAgIH0pO1xuICAgICAgX2Rpc3BhdGNoID0gY29tcG9zZS5hcHBseSh2b2lkIDAsIGNoYWluKShzdG9yZS5kaXNwYXRjaCk7XG4gICAgICByZXR1cm4gX29iamVjdFNwcmVhZDIoe30sIHN0b3JlLCB7XG4gICAgICAgIGRpc3BhdGNoOiBfZGlzcGF0Y2hcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG59XG5cbi8qXG4gKiBUaGlzIGlzIGEgZHVtbXkgZnVuY3Rpb24gdG8gY2hlY2sgaWYgdGhlIGZ1bmN0aW9uIG5hbWUgaGFzIGJlZW4gYWx0ZXJlZCBieSBtaW5pZmljYXRpb24uXG4gKiBJZiB0aGUgZnVuY3Rpb24gaGFzIGJlZW4gbWluaWZpZWQgYW5kIE5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsIHdhcm4gdGhlIHVzZXIuXG4gKi9cblxuZnVuY3Rpb24gaXNDcnVzaGVkKCkge31cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIGlzQ3J1c2hlZC5uYW1lID09PSAnc3RyaW5nJyAmJiBpc0NydXNoZWQubmFtZSAhPT0gJ2lzQ3J1c2hlZCcpIHtcbiAgd2FybmluZygnWW91IGFyZSBjdXJyZW50bHkgdXNpbmcgbWluaWZpZWQgY29kZSBvdXRzaWRlIG9mIE5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIi4gJyArICdUaGlzIG1lYW5zIHRoYXQgeW91IGFyZSBydW5uaW5nIGEgc2xvd2VyIGRldmVsb3BtZW50IGJ1aWxkIG9mIFJlZHV4LiAnICsgJ1lvdSBjYW4gdXNlIGxvb3NlLWVudmlmeSAoaHR0cHM6Ly9naXRodWIuY29tL3plcnRvc2gvbG9vc2UtZW52aWZ5KSBmb3IgYnJvd3NlcmlmeSAnICsgJ29yIHNldHRpbmcgbW9kZSB0byBwcm9kdWN0aW9uIGluIHdlYnBhY2sgKGh0dHBzOi8vd2VicGFjay5qcy5vcmcvY29uY2VwdHMvbW9kZS8pICcgKyAndG8gZW5zdXJlIHlvdSBoYXZlIHRoZSBjb3JyZWN0IGNvZGUgZm9yIHlvdXIgcHJvZHVjdGlvbiBidWlsZC4nKTtcbn1cblxuZXhwb3J0IHsgQWN0aW9uVHlwZXMgYXMgX19ET19OT1RfVVNFX19BY3Rpb25UeXBlcywgYXBwbHlNaWRkbGV3YXJlLCBiaW5kQWN0aW9uQ3JlYXRvcnMsIGNvbWJpbmVSZWR1Y2VycywgY29tcG9zZSwgY3JlYXRlU3RvcmUgfTtcbiIsImltcG9ydCB2ZXJpZnlQbGFpbk9iamVjdCBmcm9tICcuLi91dGlscy92ZXJpZnlQbGFpbk9iamVjdCc7XG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNDb25zdGFudChnZXRDb25zdGFudCkge1xuICByZXR1cm4gZnVuY3Rpb24gaW5pdENvbnN0YW50U2VsZWN0b3IoZGlzcGF0Y2gsIG9wdGlvbnMpIHtcbiAgICB2YXIgY29uc3RhbnQgPSBnZXRDb25zdGFudChkaXNwYXRjaCwgb3B0aW9ucyk7XG5cbiAgICBmdW5jdGlvbiBjb25zdGFudFNlbGVjdG9yKCkge1xuICAgICAgcmV0dXJuIGNvbnN0YW50O1xuICAgIH1cblxuICAgIGNvbnN0YW50U2VsZWN0b3IuZGVwZW5kc09uT3duUHJvcHMgPSBmYWxzZTtcbiAgICByZXR1cm4gY29uc3RhbnRTZWxlY3RvcjtcbiAgfTtcbn0gLy8gZGVwZW5kc09uT3duUHJvcHMgaXMgdXNlZCBieSBjcmVhdGVNYXBUb1Byb3BzUHJveHkgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gcGFzcyBwcm9wcyBhcyBhcmdzXG4vLyB0byB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyB3cmFwcGVkLiBJdCBpcyBhbHNvIHVzZWQgYnkgbWFrZVB1cmVQcm9wc1NlbGVjdG9yIHRvIGRldGVybWluZVxuLy8gd2hldGhlciBtYXBUb1Byb3BzIG5lZWRzIHRvIGJlIGludm9rZWQgd2hlbiBwcm9wcyBoYXZlIGNoYW5nZWQuXG4vL1xuLy8gQSBsZW5ndGggb2Ygb25lIHNpZ25hbHMgdGhhdCBtYXBUb1Byb3BzIGRvZXMgbm90IGRlcGVuZCBvbiBwcm9wcyBmcm9tIHRoZSBwYXJlbnQgY29tcG9uZW50LlxuLy8gQSBsZW5ndGggb2YgemVybyBpcyBhc3N1bWVkIHRvIG1lYW4gbWFwVG9Qcm9wcyBpcyBnZXR0aW5nIGFyZ3MgdmlhIGFyZ3VtZW50cyBvciAuLi5hcmdzIGFuZFxuLy8gdGhlcmVmb3JlIG5vdCByZXBvcnRpbmcgaXRzIGxlbmd0aCBhY2N1cmF0ZWx5Li5cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERlcGVuZHNPbk93blByb3BzKG1hcFRvUHJvcHMpIHtcbiAgcmV0dXJuIG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMgIT09IG51bGwgJiYgbWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcyAhPT0gdW5kZWZpbmVkID8gQm9vbGVhbihtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSA6IG1hcFRvUHJvcHMubGVuZ3RoICE9PSAxO1xufSAvLyBVc2VkIGJ5IHdoZW5NYXBTdGF0ZVRvUHJvcHNJc0Z1bmN0aW9uIGFuZCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbixcbi8vIHRoaXMgZnVuY3Rpb24gd3JhcHMgbWFwVG9Qcm9wcyBpbiBhIHByb3h5IGZ1bmN0aW9uIHdoaWNoIGRvZXMgc2V2ZXJhbCB0aGluZ3M6XG4vL1xuLy8gICogRGV0ZWN0cyB3aGV0aGVyIHRoZSBtYXBUb1Byb3BzIGZ1bmN0aW9uIGJlaW5nIGNhbGxlZCBkZXBlbmRzIG9uIHByb3BzLCB3aGljaFxuLy8gICAgaXMgdXNlZCBieSBzZWxlY3RvckZhY3RvcnkgdG8gZGVjaWRlIGlmIGl0IHNob3VsZCByZWludm9rZSBvbiBwcm9wcyBjaGFuZ2VzLlxuLy9cbi8vICAqIE9uIGZpcnN0IGNhbGwsIGhhbmRsZXMgbWFwVG9Qcm9wcyBpZiByZXR1cm5zIGFub3RoZXIgZnVuY3Rpb24sIGFuZCB0cmVhdHMgdGhhdFxuLy8gICAgbmV3IGZ1bmN0aW9uIGFzIHRoZSB0cnVlIG1hcFRvUHJvcHMgZm9yIHN1YnNlcXVlbnQgY2FsbHMuXG4vL1xuLy8gICogT24gZmlyc3QgY2FsbCwgdmVyaWZpZXMgdGhlIGZpcnN0IHJlc3VsdCBpcyBhIHBsYWluIG9iamVjdCwgaW4gb3JkZXIgdG8gd2FyblxuLy8gICAgdGhlIGRldmVsb3BlciB0aGF0IHRoZWlyIG1hcFRvUHJvcHMgZnVuY3Rpb24gaXMgbm90IHJldHVybmluZyBhIHZhbGlkIHJlc3VsdC5cbi8vXG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwVG9Qcm9wcywgbWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gaW5pdFByb3h5U2VsZWN0b3IoZGlzcGF0Y2gsIF9yZWYpIHtcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lO1xuXG4gICAgdmFyIHByb3h5ID0gZnVuY3Rpb24gbWFwVG9Qcm9wc1Byb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHJldHVybiBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA/IHByb3h5Lm1hcFRvUHJvcHMoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcykgOiBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCk7XG4gICAgfTsgLy8gYWxsb3cgZGV0ZWN0RmFjdG9yeUFuZFZlcmlmeSB0byBnZXQgb3duUHJvcHNcblxuXG4gICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSB0cnVlO1xuXG4gICAgcHJveHkubWFwVG9Qcm9wcyA9IGZ1bmN0aW9uIGRldGVjdEZhY3RvcnlBbmRWZXJpZnkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcykge1xuICAgICAgcHJveHkubWFwVG9Qcm9wcyA9IG1hcFRvUHJvcHM7XG4gICAgICBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA9IGdldERlcGVuZHNPbk93blByb3BzKG1hcFRvUHJvcHMpO1xuICAgICAgdmFyIHByb3BzID0gcHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcyk7XG5cbiAgICAgIGlmICh0eXBlb2YgcHJvcHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcHJveHkubWFwVG9Qcm9wcyA9IHByb3BzO1xuICAgICAgICBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA9IGdldERlcGVuZHNPbk93blByb3BzKHByb3BzKTtcbiAgICAgICAgcHJvcHMgPSBwcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHZlcmlmeVBsYWluT2JqZWN0KHByb3BzLCBkaXNwbGF5TmFtZSwgbWV0aG9kTmFtZSk7XG4gICAgICByZXR1cm4gcHJvcHM7XG4gICAgfTtcblxuICAgIHJldHVybiBwcm94eTtcbiAgfTtcbn0iLCJpbXBvcnQgeyBiaW5kQWN0aW9uQ3JlYXRvcnMgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgeyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50LCB3cmFwTWFwVG9Qcm9wc0Z1bmMgfSBmcm9tICcuL3dyYXBNYXBUb1Byb3BzJztcbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbihtYXBEaXNwYXRjaFRvUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtYXBEaXNwYXRjaFRvUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwRGlzcGF0Y2hUb1Byb3BzLCAnbWFwRGlzcGF0Y2hUb1Byb3BzJykgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzTWlzc2luZyhtYXBEaXNwYXRjaFRvUHJvcHMpIHtcbiAgcmV0dXJuICFtYXBEaXNwYXRjaFRvUHJvcHMgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGZ1bmN0aW9uIChkaXNwYXRjaCkge1xuICAgIHJldHVybiB7XG4gICAgICBkaXNwYXRjaDogZGlzcGF0Y2hcbiAgICB9O1xuICB9KSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNPYmplY3QobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiBtYXBEaXNwYXRjaFRvUHJvcHMgJiYgdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ29iamVjdCcgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGZ1bmN0aW9uIChkaXNwYXRjaCkge1xuICAgIHJldHVybiBiaW5kQWN0aW9uQ3JlYXRvcnMobWFwRGlzcGF0Y2hUb1Byb3BzLCBkaXNwYXRjaCk7XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGRlZmF1bHQgW3doZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uLCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNNaXNzaW5nLCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNPYmplY3RdOyIsImltcG9ydCB7IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQsIHdyYXBNYXBUb1Byb3BzRnVuYyB9IGZyb20gJy4vd3JhcE1hcFRvUHJvcHMnO1xuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBTdGF0ZVRvUHJvcHNJc0Z1bmN0aW9uKG1hcFN0YXRlVG9Qcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1hcFN0YXRlVG9Qcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNYXBUb1Byb3BzRnVuYyhtYXBTdGF0ZVRvUHJvcHMsICdtYXBTdGF0ZVRvUHJvcHMnKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwU3RhdGVUb1Byb3BzSXNNaXNzaW5nKG1hcFN0YXRlVG9Qcm9wcykge1xuICByZXR1cm4gIW1hcFN0YXRlVG9Qcm9wcyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7fTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZGVmYXVsdCBbd2hlbk1hcFN0YXRlVG9Qcm9wc0lzRnVuY3Rpb24sIHdoZW5NYXBTdGF0ZVRvUHJvcHNJc01pc3NpbmddOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IHZlcmlmeVBsYWluT2JqZWN0IGZyb20gJy4uL3V0aWxzL3ZlcmlmeVBsYWluT2JqZWN0JztcbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0TWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcykge1xuICByZXR1cm4gX2V4dGVuZHMoe30sIG93blByb3BzLCBzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cmFwTWVyZ2VQcm9wc0Z1bmMobWVyZ2VQcm9wcykge1xuICByZXR1cm4gZnVuY3Rpb24gaW5pdE1lcmdlUHJvcHNQcm94eShkaXNwYXRjaCwgX3JlZikge1xuICAgIHZhciBkaXNwbGF5TmFtZSA9IF9yZWYuZGlzcGxheU5hbWUsXG4gICAgICAgIHB1cmUgPSBfcmVmLnB1cmUsXG4gICAgICAgIGFyZU1lcmdlZFByb3BzRXF1YWwgPSBfcmVmLmFyZU1lcmdlZFByb3BzRXF1YWw7XG4gICAgdmFyIGhhc1J1bk9uY2UgPSBmYWxzZTtcbiAgICB2YXIgbWVyZ2VkUHJvcHM7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIG1lcmdlUHJvcHNQcm94eShzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcykge1xuICAgICAgdmFyIG5leHRNZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuXG4gICAgICBpZiAoaGFzUnVuT25jZSkge1xuICAgICAgICBpZiAoIXB1cmUgfHwgIWFyZU1lcmdlZFByb3BzRXF1YWwobmV4dE1lcmdlZFByb3BzLCBtZXJnZWRQcm9wcykpIG1lcmdlZFByb3BzID0gbmV4dE1lcmdlZFByb3BzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaGFzUnVuT25jZSA9IHRydWU7XG4gICAgICAgIG1lcmdlZFByb3BzID0gbmV4dE1lcmdlZFByb3BzO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgdmVyaWZ5UGxhaW5PYmplY3QobWVyZ2VkUHJvcHMsIGRpc3BsYXlOYW1lLCAnbWVyZ2VQcm9wcycpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gICAgfTtcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWVyZ2VQcm9wc0lzRnVuY3Rpb24obWVyZ2VQcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1lcmdlUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWVyZ2VQcm9wc0Z1bmMobWVyZ2VQcm9wcykgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1lcmdlUHJvcHNJc09taXR0ZWQobWVyZ2VQcm9wcykge1xuICByZXR1cm4gIW1lcmdlUHJvcHMgPyBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGRlZmF1bHRNZXJnZVByb3BzO1xuICB9IDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGRlZmF1bHQgW3doZW5NZXJnZVByb3BzSXNGdW5jdGlvbiwgd2hlbk1lcmdlUHJvcHNJc09taXR0ZWRdOyIsImltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IHZlcmlmeVN1YnNlbGVjdG9ycyBmcm9tICcuL3ZlcmlmeVN1YnNlbGVjdG9ycyc7XG5leHBvcnQgZnVuY3Rpb24gaW1wdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeShtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvcihzdGF0ZSwgb3duUHJvcHMpIHtcbiAgICByZXR1cm4gbWVyZ2VQcm9wcyhtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKSwgbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyksIG93blByb3BzKTtcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeShtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgZGlzcGF0Y2gsIF9yZWYpIHtcbiAgdmFyIGFyZVN0YXRlc0VxdWFsID0gX3JlZi5hcmVTdGF0ZXNFcXVhbCxcbiAgICAgIGFyZU93blByb3BzRXF1YWwgPSBfcmVmLmFyZU93blByb3BzRXF1YWwsXG4gICAgICBhcmVTdGF0ZVByb3BzRXF1YWwgPSBfcmVmLmFyZVN0YXRlUHJvcHNFcXVhbDtcbiAgdmFyIGhhc1J1bkF0TGVhc3RPbmNlID0gZmFsc2U7XG4gIHZhciBzdGF0ZTtcbiAgdmFyIG93blByb3BzO1xuICB2YXIgc3RhdGVQcm9wcztcbiAgdmFyIGRpc3BhdGNoUHJvcHM7XG4gIHZhciBtZXJnZWRQcm9wcztcblxuICBmdW5jdGlvbiBoYW5kbGVGaXJzdENhbGwoZmlyc3RTdGF0ZSwgZmlyc3RPd25Qcm9wcykge1xuICAgIHN0YXRlID0gZmlyc3RTdGF0ZTtcbiAgICBvd25Qcm9wcyA9IGZpcnN0T3duUHJvcHM7XG4gICAgc3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIGRpc3BhdGNoUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIGhhc1J1bkF0TGVhc3RPbmNlID0gdHJ1ZTtcbiAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVOZXdQcm9wc0FuZE5ld1N0YXRlKCkge1xuICAgIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICBpZiAobWFwRGlzcGF0Y2hUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVOZXdQcm9wcygpIHtcbiAgICBpZiAobWFwU3RhdGVUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSBzdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgaWYgKG1hcERpc3BhdGNoVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgZGlzcGF0Y2hQcm9wcyA9IG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpO1xuICAgIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3U3RhdGUoKSB7XG4gICAgdmFyIG5leHRTdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgdmFyIHN0YXRlUHJvcHNDaGFuZ2VkID0gIWFyZVN0YXRlUHJvcHNFcXVhbChuZXh0U3RhdGVQcm9wcywgc3RhdGVQcm9wcyk7XG4gICAgc3RhdGVQcm9wcyA9IG5leHRTdGF0ZVByb3BzO1xuICAgIGlmIChzdGF0ZVByb3BzQ2hhbmdlZCkgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVTdWJzZXF1ZW50Q2FsbHMobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIHtcbiAgICB2YXIgcHJvcHNDaGFuZ2VkID0gIWFyZU93blByb3BzRXF1YWwobmV4dE93blByb3BzLCBvd25Qcm9wcyk7XG4gICAgdmFyIHN0YXRlQ2hhbmdlZCA9ICFhcmVTdGF0ZXNFcXVhbChuZXh0U3RhdGUsIHN0YXRlKTtcbiAgICBzdGF0ZSA9IG5leHRTdGF0ZTtcbiAgICBvd25Qcm9wcyA9IG5leHRPd25Qcm9wcztcbiAgICBpZiAocHJvcHNDaGFuZ2VkICYmIHN0YXRlQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1Byb3BzQW5kTmV3U3RhdGUoKTtcbiAgICBpZiAocHJvcHNDaGFuZ2VkKSByZXR1cm4gaGFuZGxlTmV3UHJvcHMoKTtcbiAgICBpZiAoc3RhdGVDaGFuZ2VkKSByZXR1cm4gaGFuZGxlTmV3U3RhdGUoKTtcbiAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gcHVyZUZpbmFsUHJvcHNTZWxlY3RvcihuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykge1xuICAgIHJldHVybiBoYXNSdW5BdExlYXN0T25jZSA/IGhhbmRsZVN1YnNlcXVlbnRDYWxscyhuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykgOiBoYW5kbGVGaXJzdENhbGwobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpO1xuICB9O1xufSAvLyBUT0RPOiBBZGQgbW9yZSBjb21tZW50c1xuLy8gSWYgcHVyZSBpcyB0cnVlLCB0aGUgc2VsZWN0b3IgcmV0dXJuZWQgYnkgc2VsZWN0b3JGYWN0b3J5IHdpbGwgbWVtb2l6ZSBpdHMgcmVzdWx0cyxcbi8vIGFsbG93aW5nIGNvbm5lY3RBZHZhbmNlZCdzIHNob3VsZENvbXBvbmVudFVwZGF0ZSB0byByZXR1cm4gZmFsc2UgaWYgZmluYWxcbi8vIHByb3BzIGhhdmUgbm90IGNoYW5nZWQuIElmIGZhbHNlLCB0aGUgc2VsZWN0b3Igd2lsbCBhbHdheXMgcmV0dXJuIGEgbmV3XG4vLyBvYmplY3QgYW5kIHNob3VsZENvbXBvbmVudFVwZGF0ZSB3aWxsIGFsd2F5cyByZXR1cm4gdHJ1ZS5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeShkaXNwYXRjaCwgX3JlZjIpIHtcbiAgdmFyIGluaXRNYXBTdGF0ZVRvUHJvcHMgPSBfcmVmMi5pbml0TWFwU3RhdGVUb1Byb3BzLFxuICAgICAgaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyA9IF9yZWYyLmluaXRNYXBEaXNwYXRjaFRvUHJvcHMsXG4gICAgICBpbml0TWVyZ2VQcm9wcyA9IF9yZWYyLmluaXRNZXJnZVByb3BzLFxuICAgICAgb3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYyLCBbXCJpbml0TWFwU3RhdGVUb1Byb3BzXCIsIFwiaW5pdE1hcERpc3BhdGNoVG9Qcm9wc1wiLCBcImluaXRNZXJnZVByb3BzXCJdKTtcblxuICB2YXIgbWFwU3RhdGVUb1Byb3BzID0gaW5pdE1hcFN0YXRlVG9Qcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG4gIHZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvcHRpb25zKTtcbiAgdmFyIG1lcmdlUHJvcHMgPSBpbml0TWVyZ2VQcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB2ZXJpZnlTdWJzZWxlY3RvcnMobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIG9wdGlvbnMuZGlzcGxheU5hbWUpO1xuICB9XG5cbiAgdmFyIHNlbGVjdG9yRmFjdG9yeSA9IG9wdGlvbnMucHVyZSA/IHB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IDogaW1wdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeTtcbiAgcmV0dXJuIHNlbGVjdG9yRmFjdG9yeShtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgZGlzcGF0Y2gsIG9wdGlvbnMpO1xufSIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgY29ubmVjdEFkdmFuY2VkIGZyb20gJy4uL2NvbXBvbmVudHMvY29ubmVjdEFkdmFuY2VkJztcbmltcG9ydCBzaGFsbG93RXF1YWwgZnJvbSAnLi4vdXRpbHMvc2hhbGxvd0VxdWFsJztcbmltcG9ydCBkZWZhdWx0TWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIGZyb20gJy4vbWFwRGlzcGF0Y2hUb1Byb3BzJztcbmltcG9ydCBkZWZhdWx0TWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzIGZyb20gJy4vbWFwU3RhdGVUb1Byb3BzJztcbmltcG9ydCBkZWZhdWx0TWVyZ2VQcm9wc0ZhY3RvcmllcyBmcm9tICcuL21lcmdlUHJvcHMnO1xuaW1wb3J0IGRlZmF1bHRTZWxlY3RvckZhY3RvcnkgZnJvbSAnLi9zZWxlY3RvckZhY3RvcnknO1xuLypcbiAgY29ubmVjdCBpcyBhIGZhY2FkZSBvdmVyIGNvbm5lY3RBZHZhbmNlZC4gSXQgdHVybnMgaXRzIGFyZ3MgaW50byBhIGNvbXBhdGlibGVcbiAgc2VsZWN0b3JGYWN0b3J5LCB3aGljaCBoYXMgdGhlIHNpZ25hdHVyZTpcblxuICAgIChkaXNwYXRjaCwgb3B0aW9ucykgPT4gKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSA9PiBuZXh0RmluYWxQcm9wc1xuICBcbiAgY29ubmVjdCBwYXNzZXMgaXRzIGFyZ3MgdG8gY29ubmVjdEFkdmFuY2VkIGFzIG9wdGlvbnMsIHdoaWNoIHdpbGwgaW4gdHVybiBwYXNzIHRoZW0gdG9cbiAgc2VsZWN0b3JGYWN0b3J5IGVhY2ggdGltZSBhIENvbm5lY3QgY29tcG9uZW50IGluc3RhbmNlIGlzIGluc3RhbnRpYXRlZCBvciBob3QgcmVsb2FkZWQuXG5cbiAgc2VsZWN0b3JGYWN0b3J5IHJldHVybnMgYSBmaW5hbCBwcm9wcyBzZWxlY3RvciBmcm9tIGl0cyBtYXBTdGF0ZVRvUHJvcHMsXG4gIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMsIG1lcmdlUHJvcHMsXG4gIG1lcmdlUHJvcHNGYWN0b3JpZXMsIGFuZCBwdXJlIGFyZ3MuXG5cbiAgVGhlIHJlc3VsdGluZyBmaW5hbCBwcm9wcyBzZWxlY3RvciBpcyBjYWxsZWQgYnkgdGhlIENvbm5lY3QgY29tcG9uZW50IGluc3RhbmNlIHdoZW5ldmVyXG4gIGl0IHJlY2VpdmVzIG5ldyBwcm9wcyBvciBzdG9yZSBzdGF0ZS5cbiAqL1xuXG5mdW5jdGlvbiBtYXRjaChhcmcsIGZhY3RvcmllcywgbmFtZSkge1xuICBmb3IgKHZhciBpID0gZmFjdG9yaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHJlc3VsdCA9IGZhY3Rvcmllc1tpXShhcmcpO1xuICAgIGlmIChyZXN1bHQpIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKGRpc3BhdGNoLCBvcHRpb25zKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB2YWx1ZSBvZiB0eXBlIFwiICsgdHlwZW9mIGFyZyArIFwiIGZvciBcIiArIG5hbWUgKyBcIiBhcmd1bWVudCB3aGVuIGNvbm5lY3RpbmcgY29tcG9uZW50IFwiICsgb3B0aW9ucy53cmFwcGVkQ29tcG9uZW50TmFtZSArIFwiLlwiKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3RyaWN0RXF1YWwoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn0gLy8gY3JlYXRlQ29ubmVjdCB3aXRoIGRlZmF1bHQgYXJncyBidWlsZHMgdGhlICdvZmZpY2lhbCcgY29ubmVjdCBiZWhhdmlvci4gQ2FsbGluZyBpdCB3aXRoXG4vLyBkaWZmZXJlbnQgb3B0aW9ucyBvcGVucyB1cCBzb21lIHRlc3RpbmcgYW5kIGV4dGVuc2liaWxpdHkgc2NlbmFyaW9zXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3QoX3RlbXApIHtcbiAgdmFyIF9yZWYgPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcCxcbiAgICAgIF9yZWYkY29ubmVjdEhPQyA9IF9yZWYuY29ubmVjdEhPQyxcbiAgICAgIGNvbm5lY3RIT0MgPSBfcmVmJGNvbm5lY3RIT0MgPT09IHZvaWQgMCA/IGNvbm5lY3RBZHZhbmNlZCA6IF9yZWYkY29ubmVjdEhPQyxcbiAgICAgIF9yZWYkbWFwU3RhdGVUb1Byb3BzRiA9IF9yZWYubWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzLFxuICAgICAgbWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzID0gX3JlZiRtYXBTdGF0ZVRvUHJvcHNGID09PSB2b2lkIDAgPyBkZWZhdWx0TWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzIDogX3JlZiRtYXBTdGF0ZVRvUHJvcHNGLFxuICAgICAgX3JlZiRtYXBEaXNwYXRjaFRvUHJvID0gX3JlZi5tYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMsXG4gICAgICBtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMgPSBfcmVmJG1hcERpc3BhdGNoVG9Qcm8gPT09IHZvaWQgMCA/IGRlZmF1bHRNYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMgOiBfcmVmJG1hcERpc3BhdGNoVG9Qcm8sXG4gICAgICBfcmVmJG1lcmdlUHJvcHNGYWN0b3IgPSBfcmVmLm1lcmdlUHJvcHNGYWN0b3JpZXMsXG4gICAgICBtZXJnZVByb3BzRmFjdG9yaWVzID0gX3JlZiRtZXJnZVByb3BzRmFjdG9yID09PSB2b2lkIDAgPyBkZWZhdWx0TWVyZ2VQcm9wc0ZhY3RvcmllcyA6IF9yZWYkbWVyZ2VQcm9wc0ZhY3RvcixcbiAgICAgIF9yZWYkc2VsZWN0b3JGYWN0b3J5ID0gX3JlZi5zZWxlY3RvckZhY3RvcnksXG4gICAgICBzZWxlY3RvckZhY3RvcnkgPSBfcmVmJHNlbGVjdG9yRmFjdG9yeSA9PT0gdm9pZCAwID8gZGVmYXVsdFNlbGVjdG9yRmFjdG9yeSA6IF9yZWYkc2VsZWN0b3JGYWN0b3J5O1xuXG4gIHJldHVybiBmdW5jdGlvbiBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBfcmVmMikge1xuICAgIGlmIChfcmVmMiA9PT0gdm9pZCAwKSB7XG4gICAgICBfcmVmMiA9IHt9O1xuICAgIH1cblxuICAgIHZhciBfcmVmMyA9IF9yZWYyLFxuICAgICAgICBfcmVmMyRwdXJlID0gX3JlZjMucHVyZSxcbiAgICAgICAgcHVyZSA9IF9yZWYzJHB1cmUgPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmMyRwdXJlLFxuICAgICAgICBfcmVmMyRhcmVTdGF0ZXNFcXVhbCA9IF9yZWYzLmFyZVN0YXRlc0VxdWFsLFxuICAgICAgICBhcmVTdGF0ZXNFcXVhbCA9IF9yZWYzJGFyZVN0YXRlc0VxdWFsID09PSB2b2lkIDAgPyBzdHJpY3RFcXVhbCA6IF9yZWYzJGFyZVN0YXRlc0VxdWFsLFxuICAgICAgICBfcmVmMyRhcmVPd25Qcm9wc0VxdWEgPSBfcmVmMy5hcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgICBhcmVPd25Qcm9wc0VxdWFsID0gX3JlZjMkYXJlT3duUHJvcHNFcXVhID09PSB2b2lkIDAgPyBzaGFsbG93RXF1YWwgOiBfcmVmMyRhcmVPd25Qcm9wc0VxdWEsXG4gICAgICAgIF9yZWYzJGFyZVN0YXRlUHJvcHNFcSA9IF9yZWYzLmFyZVN0YXRlUHJvcHNFcXVhbCxcbiAgICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsID0gX3JlZjMkYXJlU3RhdGVQcm9wc0VxID09PSB2b2lkIDAgPyBzaGFsbG93RXF1YWwgOiBfcmVmMyRhcmVTdGF0ZVByb3BzRXEsXG4gICAgICAgIF9yZWYzJGFyZU1lcmdlZFByb3BzRSA9IF9yZWYzLmFyZU1lcmdlZFByb3BzRXF1YWwsXG4gICAgICAgIGFyZU1lcmdlZFByb3BzRXF1YWwgPSBfcmVmMyRhcmVNZXJnZWRQcm9wc0UgPT09IHZvaWQgMCA/IHNoYWxsb3dFcXVhbCA6IF9yZWYzJGFyZU1lcmdlZFByb3BzRSxcbiAgICAgICAgZXh0cmFPcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjMsIFtcInB1cmVcIiwgXCJhcmVTdGF0ZXNFcXVhbFwiLCBcImFyZU93blByb3BzRXF1YWxcIiwgXCJhcmVTdGF0ZVByb3BzRXF1YWxcIiwgXCJhcmVNZXJnZWRQcm9wc0VxdWFsXCJdKTtcblxuICAgIHZhciBpbml0TWFwU3RhdGVUb1Byb3BzID0gbWF0Y2gobWFwU3RhdGVUb1Byb3BzLCBtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMsICdtYXBTdGF0ZVRvUHJvcHMnKTtcbiAgICB2YXIgaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyA9IG1hdGNoKG1hcERpc3BhdGNoVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLCAnbWFwRGlzcGF0Y2hUb1Byb3BzJyk7XG4gICAgdmFyIGluaXRNZXJnZVByb3BzID0gbWF0Y2gobWVyZ2VQcm9wcywgbWVyZ2VQcm9wc0ZhY3RvcmllcywgJ21lcmdlUHJvcHMnKTtcbiAgICByZXR1cm4gY29ubmVjdEhPQyhzZWxlY3RvckZhY3RvcnksIF9leHRlbmRzKHtcbiAgICAgIC8vIHVzZWQgaW4gZXJyb3IgbWVzc2FnZXNcbiAgICAgIG1ldGhvZE5hbWU6ICdjb25uZWN0JyxcbiAgICAgIC8vIHVzZWQgdG8gY29tcHV0ZSBDb25uZWN0J3MgZGlzcGxheU5hbWUgZnJvbSB0aGUgd3JhcHBlZCBjb21wb25lbnQncyBkaXNwbGF5TmFtZS5cbiAgICAgIGdldERpc3BsYXlOYW1lOiBmdW5jdGlvbiBnZXREaXNwbGF5TmFtZShuYW1lKSB7XG4gICAgICAgIHJldHVybiBcIkNvbm5lY3QoXCIgKyBuYW1lICsgXCIpXCI7XG4gICAgICB9LFxuICAgICAgLy8gaWYgbWFwU3RhdGVUb1Byb3BzIGlzIGZhbHN5LCB0aGUgQ29ubmVjdCBjb21wb25lbnQgZG9lc24ndCBzdWJzY3JpYmUgdG8gc3RvcmUgc3RhdGUgY2hhbmdlc1xuICAgICAgc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzOiBCb29sZWFuKG1hcFN0YXRlVG9Qcm9wcyksXG4gICAgICAvLyBwYXNzZWQgdGhyb3VnaCB0byBzZWxlY3RvckZhY3RvcnlcbiAgICAgIGluaXRNYXBTdGF0ZVRvUHJvcHM6IGluaXRNYXBTdGF0ZVRvUHJvcHMsXG4gICAgICBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzOiBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzLFxuICAgICAgaW5pdE1lcmdlUHJvcHM6IGluaXRNZXJnZVByb3BzLFxuICAgICAgcHVyZTogcHVyZSxcbiAgICAgIGFyZVN0YXRlc0VxdWFsOiBhcmVTdGF0ZXNFcXVhbCxcbiAgICAgIGFyZU93blByb3BzRXF1YWw6IGFyZU93blByb3BzRXF1YWwsXG4gICAgICBhcmVTdGF0ZVByb3BzRXF1YWw6IGFyZVN0YXRlUHJvcHNFcXVhbCxcbiAgICAgIGFyZU1lcmdlZFByb3BzRXF1YWw6IGFyZU1lcmdlZFByb3BzRXF1YWxcbiAgICB9LCBleHRyYU9wdGlvbnMpKTtcbiAgfTtcbn1cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUNvbm5lY3QoKTsiLCJmdW5jdGlvbiBjcmVhdGVUaHVua01pZGRsZXdhcmUoZXh0cmFBcmd1bWVudCkge1xuICByZXR1cm4gZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoLFxuICAgICAgICBnZXRTdGF0ZSA9IF9yZWYuZ2V0U3RhdGU7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikge1xuICAgICAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIHJldHVybiBhY3Rpb24oZGlzcGF0Y2gsIGdldFN0YXRlLCBleHRyYUFyZ3VtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXh0KGFjdGlvbik7XG4gICAgICB9O1xuICAgIH07XG4gIH07XG59XG5cbnZhciB0aHVuayA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZSgpO1xudGh1bmsud2l0aEV4dHJhQXJndW1lbnQgPSBjcmVhdGVUaHVua01pZGRsZXdhcmU7XG5cbmV4cG9ydCBkZWZhdWx0IHRodW5rOyIsIi8vIFRoaXJkIFBhcnR5IEltcG9ydHNcclxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCwgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XHJcblxyXG4vLyBMb2NhbCBJbXBvcnRzXHJcblxyXG5cclxuY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICByZW5kZXIoKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8RnJhZ21lbnQ+XHJcbiAgICAgICAgPGgxPkdyYXBoIEJ1aWxkZXIgSlM8L2gxPlxyXG4gICAgICA8L0ZyYWdtZW50PlxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgQXBwO1xyXG4iLCIvKipSZWR1eCByZWR1Y2VyIHRoYXQgaXMgdXNlZCBmb3IgYnVpbGRpbmcgdGhlIG1haW4gZ3JhcGguICovXHJcblxyXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XHJcbiAgY29sdW1uczoge30sXHJcbiAgc2VjdGlvbnM6IHtcclxuICAgIHhBeGlzOiB7XHJcbiAgICAgIGlkOiAneEF4aXMnLFxyXG4gICAgICBjb2x1bW46IG51bGwsXHJcbiAgICB9LFxyXG4gICAgbGVnZW5kczoge1xyXG4gICAgICBpZDogJ2xlZ2VuZHMnLFxyXG4gICAgICBjb2x1bW5zOiBbXSxcclxuICAgIH0sXHJcbiAgfSxcclxufTtcclxuXHJcbmNvbnN0IHJlZHVjZXIgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xyXG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHJldHVybiBzdGF0ZTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCByZWR1Y2VyO1xyXG4iLCIvLyBJTVBPUlRTXHJcbi8vIFRoaXJkIFBhcnR5IEltcG9ydHNcclxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5pbXBvcnQgeyBjcmVhdGVTdG9yZSwgYXBwbHlNaWRkbGV3YXJlLCBjb21wb3NlLCBjb21iaW5lUmVkdWNlcnMgfSBmcm9tIFwicmVkdXhcIjtcclxuaW1wb3J0IHRodW5rIGZyb20gXCJyZWR1eC10aHVua1wiO1xyXG5cclxuLy8gTG9jYWwgSW1wb3J0c1xyXG5pbXBvcnQgQXBwIGZyb20gXCIuL0FwcFwiO1xyXG5pbXBvcnQgZ3JhcGhEYXRhUmVkdWNlciBmcm9tIFwiLi9zdG9yZS9yZWR1Y2Vycy9ncmFwaERhdGFcIjtcclxuXHJcbmNvbnN0IGNvbXBvc2VFbmhhbmNlciA9XHJcbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIlxyXG4gICAgPyB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fXHJcbiAgICA6IG51bGwgfHwgY29tcG9zZTtcclxuXHJcbmNvbnN0IHJvb3RSZWR1Y2VyID0gY29tYmluZVJlZHVjZXJzKHtcclxuICBncmFwaERhdGE6IGdyYXBoRGF0YVJlZHVjZXIsXHJcbn0pO1xyXG5cclxuY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShyb290UmVkdWNlciwgY29tcG9zZUVuaGFuY2VyKGFwcGx5TWlkZGxld2FyZSh0aHVuaykpKTtcclxuXHJcbmNvbnN0IGFwcCA9IChcclxuICA8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT5cclxuICAgIDxBcHAgLz5cclxuICA8L1Byb3ZpZGVyPlxyXG4pO1xyXG5cclxuUmVhY3RET00ucmVuZGVyKGFwcCwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb290XCIpKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==